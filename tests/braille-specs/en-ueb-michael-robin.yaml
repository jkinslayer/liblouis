# Please contact robin@chapman.edu when issues are fixed
table:
  locale: en
  grade: 2
  system: ueb
  __assert-match: en-ueb-g2.ctb
tests:

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Missing-grade-1-indicator-for-abbreviation-or-punctuation-that-looks-like-contracted-braille
# https://www.freelists.org/post/liblouis-liblouisxml/FW-Contraction-not-fixed-in-UEB-32-using-JAWS-2018170829

- - 'conceived'
  - '3cvd'
- - 'perceived'
  - 'p}cvd'
- - 'concvd'
  - ';concvd'
  - xfail: grade 1 indicator is missing
- - 'percvd'
  - ';percvd'
  - xfail: grade 1 indicator is missing

# https://www.freelists.org/post/liblouis-liblouisxml/FW-disc-disk-do-not-use-contraction-of-dis-on-UEB-grade-2
# https://www.freelists.org/post/liblouis-liblouisxml/Inconsistent-contraction-followed-by-any-special-character-in-UEB-grade-2
# https://www.freelists.org/post/liblouis-liblouisxml/Fwd-Re-Inconsistent-contraction-followed-by-any-special-character-in-UEB-grade-2

- - 'action comment careful awareness division complicance sentence'
  - 'ac;n com;t c>e;l aw>e;s divi.n complic.e s5t;e'
- - 'action< comment< careful< awareness< division< complicance< sentence<'
  - 'ac;n< com;t< care;l< aware;s< divi.n< compli.e< sent;e<'
  - xfail: contraction follwed by "<" is ignored
- - 'action/ comment/ careful/ awareness/ division/ complicance/ sentence/'
  - 'ac;n/ com;t/ care;l/ aware;s/ divi.n/ compli.e/ sent;e/'
  - xfail: contraction follwed by "/" is ignored
- - 'action\\ comment\\ careful\\ awareness\\ division\\ complicance\\ sentence\\'
  - 'ac;n\\ com;t\\ care;l\\ aware;s\\ divi.n\\ compli.e\\ sent;e\\'
  - xfail: contraction follwed by "\\" is ignored
- - 'action| comment| careful| awareness| division| complicance| sentence|'
  - 'ac;n| com;t| care;l| aware;s| divi.n| compli.e| sent;e|'
  - xfail: contraction follwed by "|" is ignored
- - 'action$ comment$ careful$ awareness$ division$ complicance$ sentence$'
  - 'ac;n$ com;t$ care;l$ aware;s$ divi.n$ compli.e$ sent;e$'
  - xfail: contraction follwed by "$" is ignored
- - 'action% comment% careful% awareness% division% complicance% sentence%'
  - 'ac;n% com;t% care;l% aware;s% divi.n% compli.e% sent;e%'
  - xfail: contraction follwed by "%" is ignored
- - 'action# comment# careful# awareness# division# complicance# sentence#'
  - 'ac;n# com;t# care;l# aware;s# divi.n# compli.e# sent;e#'
  - xfail: contraction follwed by "#" is ignored
- - 'action@ comment@ careful@ awareness@ division@ complicance@ sentence@'
  - 'ac;n@ com;t@ care;l@ aware;s@ divi.n@ compli.e@ sent;e@'
  - xfail: contraction follwed by "@" is ignored
- - 'action~ comment~ careful~ awareness~ division~ complicance~ sentence~'
  - 'ac;n~ com;t~ care;l~ aware;s~ divi.n~ compli.e~ sent;e~'
  - xfail: contraction follwed by "~" is ignored
- - 'action^ comment^ careful^ awareness^ division^ complicance^ sentence^'
  - 'ac;n^ com;t^ care;l^ aware;s^ divi.n^ compli.e^ sent;e^'
  - xfail: contraction follwed by "^" is ignored
- - 'action* comment* careful* awareness* division* complicance* sentence*'
  - 'ac;n* com;t* care;l* aware;s* divi.n* compli.e* sent;e*'
  - xfail: contraction follwed by "*" is ignored
- - 'action& comment& careful& awareness& division& complicance& sentence&'
  - 'ac;n& com;t& care;l& aware;s& divi.n& compli.e& sent;e&'
  - xfail: contraction follwed by "&" is ignored
- - 'action= comment= careful= awareness= division= complicance= sentence='
  - 'ac;n= com;t= care;l= aware;s= divi.n= compli.e= sent;e='
  - xfail: contraction follwed by "=" is ignored
- - 'action+ comment+ careful+ awareness+ division+ complicance+ sentence+'
  - 'ac;n+ com;t+ care;l+ aware;s+ divi.n+ compli.e+ sent;e+'
  - xfail: contraction follwed by "+" is ignored
- - 'action_ comment_ careful_ awareness_ division_ complicance_ sentence_'
  - 'ac;n_ com;t_ care;l_ aware;s_ divi.n_ compli.e_ sent;e_'
  - xfail: contraction follwed by "_" is ignored

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Period-vs-dis-conflict-in-UEB-grade-2

- - 'discv'
  - '4cv'
# - - 'dish'
#   - '4h'  -> actual 'di%'
- - '.cv .h '
  - ';4cv ;4h '
  - xfail: grade 1 indicator is missing preceding a period

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Ambiguous-braille-cell-using-UEB-grade-2-for-Liblouis-33

- - 'reason'
  - 'r1son'
- - 'r,son'
  - 'r;,son'
  - xfail: grade 1 indicator is missing preceding ","

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Missing-grade-1-indicator-for-abbreviation-or-punctuation-that-looks-like-contracted-braille
  
- - 'context accept'
  - '3text a3ept'
- - ':text a:ept'
  - ';:text a;:ept'
  - xfail: grade 1 indicator is missing preceding ":"

# https://www.freelists.org/post/liblouis-liblouisxml/FW-UEB-grade-2-with-repeated-underscores-as-one-or-two-cells-instead-of-full-cells

- - '_ __ ___'
  - '_ _.- _.-_'
  - xfail: multiple "_" becomes single "_"

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Ambiguous-grade-2-UEB-32-in-JAWS-2018

- - 'affect'
  - 'a6ect'
- - 'a!ect'
  - 'a;!ect'
  - xfail: grade 1 indicator is missing preceding "!"

# =============================================================

- - '4xxxeringed'
  - '4xxx}+$'
  - xfail: contraction following non-contraction following any number fails

- - '; ;b ;c ;f ;h ;j ;l ;m ;n ;o ;p ;q ;s ;t  ;u ;v ;w ;x ;y ;z'
  - ';; ;;b ;;c ;;f ;;h ;;j ;;l ;;m ;;n ;;o ;;p ;;q ;;s ;;t  ;;u ;;v ;;w ;;x ;;y ;;z'
  - xfail: grade 1 indicator is misssing for leading semicolen conflicting with contract like "be..."

- - '''; "; -; !; .; ,; :; ?;'
  - '''; "; -; !; .; ,; :; ?;'
  - xfail: ...

- - '; ;; (; [; {; *; =; +; @; #; $; %; ^; &; ); _; ]; }; \\; |; <; >; `; ~; /;'
  - ';2 ;2;2 (;2 [;2 {;2 *;2 =;2 +;2 @;2 #;2 $;2 %;2 ^;2 &;2 );2 _;2 ];2 };2 \\;2 |;2 <;2 >;2 ?;2 `;2 ~;2 /;2'
  - xfail: semicolen has a missing grade 1 indicator due to conflict with contraction of "be"

- - ';'' ;" ;- ;, ;. ;? ;!'
  - ';'' ;" ;- ;, ;. ;? ;!'
  - xfail: ...

- - ';) ;] ;} ;; ;: ;@ ;# ;$ ;% ;^ ;& ;* ;( ;_ ;= ;+ ;[ ;{ ;\\ ;| ;< ;> ;` ;~ ;/'
  - ';2) ;2] ;2} ;; ;: ;2@ ;2# ;2$ ;2% ;2^ ;2& ;2* ;2( ;2_ ;2= ;2+ ;2[ ;2{ ;2\\ ;2| ;2< ;2> ;2` ;2~ ;2/'
  - xfail: semicolen has a missing grade 1 indicator due to conflict with contraction of "be"

- - 'hereabout rightabout whereabout hereafter rightafter whereafter THEREABOUT THEREAB THEREAFTER THEREAF'
  - '"hab "rab ":ab "haf "raf ":af "!AB !R1B "!AF !R1F'
  - xfail: ...

- - 'hereab rightab whereab hereaf rightaf whereaf'
  - ' h]1b ri<tab :]1b h]1f ri<taf :]1f'
  - xfail: non-contraction of "ab" or "af" conflicts with contraction of "about" or "after"

- - '(about [about {about ''about "about -about'
  - '(ab [ab {ab ''ab "ab -ab'
  - xfail: ...

- - '!about @about #about $about %about ^about &about *about )about _about =about +about ]about }about \\about |about .about ,about ;about :about ?about <about >about `about ~about /about'
  - '!ab @ab #ab $ab %ab ^ab &ab *ab )ab _ab =ab +ab ]ab }ab \\ab |ab .ab ,ab ;ab :ab ?ab <ab >ab ?ab `ab ~ab /ab'
  - xfail: contraction following special characters is ignored

- - '(ab [ab {ab ''ab "ab -ab'
  - '(;ab [;ab {;ab '';ab ";ab -;ab'
  - xfail: ...

- - '!ab @ab #ab $ab %ab ^ab &ab *ab )ab _ab =ab +ab ]ab }ab \\ab |ab .ab ,ab ;ab :ab ?ab <ab >ab ?ab `ab ~ab /ab'
  - '!;ab @;ab #;ab $;ab %;ab ^;ab &;ab *;ab );ab _;ab =;ab +;ab ];ab };ab \\;ab |;ab .;ab ,;ab ;;ab :;ab ?;ab <;ab >;ab `;ab ~;ab /;ab'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-about xl-([{''"about xl/-about xl$-about'
  - 'xl-ab xl-([{''"ab xl/-ab xl$-ab'
  - xfail: ...

- - 'xl(about xl[about xl{about xl''about xl"about xl-=([{''"about'
  - 'xl(ab xl[ab xl{ab xl''ab xl"ab xl-=([{''"ab'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'about) about] about} about'' about" about- about, about. about; about: about? about!'
  - 'ab) ab] ab} ab'' ab" ab- ab, ab. ab; ab: ab? ab!'
  - xfail: ...

- - 'about@ about# about$ about% about^ about& about* about( about_ about= about+ about[ about{ about\\ about| about< about> about` about~ about/'
  - 'ab@ ab# ab$ ab% ab^ ab& ab* ab( ab_ ab= ab+ ab[ ab{ ab\\ ab| ab< ab> ab` ab~ ab/'
  - xfail: contraction followed by special characters is ignored

- - 'ab) ab] ab} ab'' ab" ab- ab, ab. ab; ab: ab? ab!'
  - ';ab) ;ab] ;ab} ;ab'' ;ab" ;ab- ;ab, ;ab. ;ab; ;ab: ;ab? ;ab!'
  - xfail: ...

- - 'ab@ ab# ab$ ab% ab^ ab& ab* ab( ab_ ab= ab+ ab[ ab{ ab\\ ab| ab< ab> ab` ab~ ab/'
  - ';ab@ ;ab# ;ab$ ;ab% ;ab^ ;ab& ;ab* ;ab( ;ab_ ;ab= ;ab+ ;ab[ ;ab{ ;ab\\ ;ab| ;ab< ;ab> ;ab` ;ab~ ;ab/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'about-xl about-([{''"xl about-/xl about-$xl'
  - 'ab-xl ab-([{''"xl ab-/xl ab-$xl'
  - xfail: ...

- - 'about(xl about[xl about{xl about''xl about"xl about=([{''"-xl about([{''"-xl about/-xl about$-xl'
  - 'ab(xl ab[xl ab{xl ab''xl ab"xl ab=([{''"-xl ab([{''"-xl ab/-xl ab$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(above [above {above ''above "above -above'
  - '(abv [abv {abv ''abv "abv -abv'
  - xfail: ...

- - '!above @above #above $above %above ^above &above *above )above _above =above +above ]above }above \\above |above .above ,above ;above :above ?above <above >above `above ~above /above'
  - '!abv @abv #abv $abv %abv ^abv &abv *abv )abv _abv =abv +abv ]abv }abv \\abv |abv .abv ,abv ;abv :abv ?abv <abv >abv ?abv `abv ~abv /abv'
  - xfail: contraction following special characters is ignored

- - '(abv [abv {abv ''abv "abv -abv'
  - '(;abv [;abv {;abv '';abv ";abv -;abv'
  - xfail: ...

- - '!abv @abv #abv $abv %abv ^abv &abv *abv )abv _abv =abv +abv ]abv }abv \\abv |abv .abv ,abv ;abv :abv ?abv <abv >abv ?abv `abv ~abv /abv'
  - '!;abv @;abv #;abv $;abv %;abv ^;abv &;abv *;abv );abv _;abv =;abv +;abv ];abv };abv \\;abv |;abv .;abv ,;abv ;;abv :;abv ?;abv <;abv >;abv `;abv ~;abv /;abv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-above xl-([{''"above xl/-above xl$-above'
  - 'xl-abv xl-([{''"abv xl/-abv xl$-abv'
  - xfail: ...

- - 'xl(above xl[above xl{above xl''above xl"above xl-=([{''"above'
  - 'xl(abv xl[abv xl{abv xl''abv xl"abv xl-=([{''"abv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'above) above] above} above'' above" above- above, above. above; above: above? above!'
  - 'abv) abv] abv} abv'' abv" abv- abv, abv. abv; abv: abv? abv!'
  - xfail: ...

- - 'above@ above# above$ above% above^ above& above* above( above_ above= above+ above[ above{ above\\ above| above< above> above` above~ above/'
  - 'abv@ abv# abv$ abv% abv^ abv& abv* abv( abv_ abv= abv+ abv[ abv{ abv\\ abv| abv< abv> abv` abv~ abv/'
  - xfail: contraction followed by special characters is ignored

- - 'abv) abv] abv} abv'' abv" abv- abv, abv. abv; abv: abv? abv!'
  - ';abv) ;abv] ;abv} ;abv'' ;abv" ;abv- ;abv, ;abv. ;abv; ;abv: ;abv? ;abv!'
  - xfail: ...

- - 'abv@ abv# abv$ abv% abv^ abv& abv* abv( abv_ abv= abv+ abv[ abv{ abv\\ abv| abv< abv> abv` abv~ abv/'
  - ';abv@ ;abv# ;abv$ ;abv% ;abv^ ;abv& ;abv* ;abv( ;abv_ ;abv= ;abv+ ;abv[ ;abv{ ;abv\\ ;abv| ;abv< ;abv> ;abv` ;abv~ ;abv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'above-xl above-([{''"xl above-/xl above-$xl'
  - 'abv-xl abv-([{''"xl abv-/xl abv-$xl'
  - xfail: ...

- - 'above(xl above[xl above{xl above''xl above"xl above=([{''"-xl above([{''"-xl above/-xl above$-xl'
  - 'abv(xl abv[xl abv{xl abv''xl abv"xl abv=([{''"-xl abv([{''"-xl abv/-xl abv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(aboves [aboves {aboves ''aboves "aboves -aboves'
  - '(abvs [abvs {abvs ''abvs "abvs -abvs'
  - xfail: ...

- - '!aboves @aboves #aboves $aboves %aboves ^aboves &aboves *aboves )aboves _aboves =aboves +aboves ]aboves }aboves \\aboves |aboves .aboves ,aboves ;aboves :aboves ?aboves <aboves >aboves `aboves ~aboves /aboves'
  - '!abvs @abvs #abvs $abvs %abvs ^abvs &abvs *abvs )abvs _abvs =abvs +abvs ]abvs }abvs \\abvs |abvs .abvs ,abvs ;abvs :abvs ?abvs <abvs >abvs ?abvs `abvs ~abvs /abvs'
  - xfail: contraction following special characters is ignored

- - 'abvs  (abvs [abvs {abvs ''abvs "abvs -abvs !abvs @abvs #abvs $abvs %abvs ^abvs &abvs *abvs )abvs _abvs =abvs +abvs ]abvs }abvs \\abvs |abvs .abvs ,abvs ;abvs :abvs ?abvs <abvs >abvs ?abvs `abvs ~abvs /abvs'
  - ';abvs  (;abvs [;abvs {;abvs '';abvs ";abvs -;abvs !;abvs @;abvs #;abvs $;abvs %;abvs ^;abvs &;abvs *;abvs );abvs _;abvs =;abvs +;abvs ];abvs };abvs \\;abvs |;abvs .;abvs ,;abvs ;;abvs :;abvs ?;abvs <;abvs >;abvs `;abvs ~;abvs /;abvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-aboves xl-([{''"aboves xl/-aboves xl$-aboves'
  - 'xl-abvs xl-([{''"abvs xl/-abvs xl$-abvs'
  - xfail: ...

- - 'xl(aboves xl[aboves xl{aboves xl''aboves xl"aboves xl-=([{''"aboves'
  - 'xl(abvs xl[abvs xl{abvs xl''abvs xl"abvs xl-=([{''"abvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'aboves) aboves] aboves} aboves'' aboves" aboves- aboves, aboves. aboves; aboves: aboves? aboves!'
  - 'abvs) abvs] abvs} abvs'' abvs" abvs- abvs, abvs. abvs; abvs: abvs? abvs!'
  - xfail: ...

- - 'aboves@ aboves# aboves$ aboves% aboves^ aboves& aboves* aboves( aboves_ aboves= aboves+ aboves[ aboves{ aboves\\ aboves| aboves< aboves> aboves` aboves~ aboves/'
  - 'abvs@ abvs# abvs$ abvs% abvs^ abvs& abvs* abvs( abvs_ abvs= abvs+ abvs[ abvs{ abvs\\ abvs| abvs< abvs> abvs` abvs~ abvs/'
  - xfail: contraction followed by special characters is ignored

- - 'abvs) abvs] abvs} abvs'' abvs" abvs- abvs, abvs. abvs; abvs: abvs? abvs! abvs@ abvs# abvs$ abvs% abvs^ abvs& abvs* abvs( abvs_ abvs= abvs+ abvs[ abvs{ abvs\\ abvs| abvs< abvs> abvs` abvs~ abvs/'
  - ';abvs) ;abvs] ;abvs} ;abvs'' ;abvs" ;abvs- ;abvs, ;abvs. ;abvs; ;abvs: ;abvs? ;abvs! ;abvs@ ;abvs# ;abvs$ ;abvs% ;abvs^ ;abvs& ;abvs* ;abvs( ;abvs_ ;abvs= ;abvs+ ;abvs[ ;abvs{ ;abvs\\ ;abvs| ;abvs< ;abvs> ;abvs` ;abvs~ ;abvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'aboves-xl aboves-([{''"xl aboves-/xl aboves-$xl'
  - 'abvs-xl abvs-([{''"xl abvs-/xl abvs-$xl'
  - xfail: ...

- - 'aboves(xl aboves[xl aboves{xl aboves''xl aboves"xl aboves=([{''"-xl aboves([{''"-xl aboves/-xl aboves$-xl'
  - 'abvs(xl abvs[xl abvs{xl abvs''xl abvs"xl abvs=([{''"-xl abvs([{''"-xl abvs/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(according [according {according ''according "according -according'
  - '(ac [ac {ac ''ac "ac -ac'
  - xfail: ...

- - '!according @according #according $according %according ^according &according *according )according _according =according +according ]according }according \\according |according .according ,according ;according :according ?according <according >according'
  - '!ac @ac #ac $ac %ac ^ac &ac *ac )ac _ac =ac +ac ]ac }ac \\ac |ac .ac ,ac ;ac :ac ?ac <ac >ac'
  - xfail: contraction following special characters is ignored

- - '`according, ~according /according'
  - '`ac ~ac /ac'
  - xfail: contraction following special characters is ignored

- - '(ac [ac {ac ''ac "ac -ac'
  - '(;ac [;ac {;ac '';ac ";ac -;ac'
  - xfail: ...

- - '!ac @ac #ac $ac %ac ^ac &ac *ac )ac _ac =ac +ac ]ac }ac \\ac |ac .ac ,ac ;ac :ac ?ac <ac >ac `ac ~ac /ac'
  - '!;ac @;ac #;ac $;ac %;ac ^;ac &;ac *;ac );ac _;ac =;ac +;ac ];ac };ac \\;ac |;ac .;ac ,;ac ;;ac :;ac ?;ac <;ac >;ac `;ac ~;ac /;ac'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-according xl-([{''"according xl/-according xl$-according'
  - 'xl-ac xl-([{''"ac xl/-ac xl$-ac'
  - xfail: ...

- - 'xl(according xl[according xl{according xl''according xl"according xl-=([{''"according'
  - 'xl(ac xl[ac xl{ac xl''ac xl"ac xl-=([{''"ac'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'according) according] according} according'' according" according- according, according. according; according: according? according!'
  - 'ac) ac] ac} ac'' ac" ac- ac, ac. ac; ac: ac? ac!'
  - xfail: ...

- - 'according@ according# according$ according% according^ according& according* according( according_ according= according+ according[ according{ according\\ according| according< according> according` according~ according/'
  - 'ac@ ac# ac$ ac% ac^ ac& ac* ac( ac_ ac= ac+ ac[ ac{ ac\\ ac| ac< ac> ac` ac~ ac/'
  - xfail: contraction followed by special characters is ignored

- - 'ac) ac] ac} ac'' ac" ac- ac, ac. ac; ac: ac? ac!'
  - ';ac) ;ac] ;ac} ;ac'' ;ac" ;ac- ;ac, ;ac. ;ac; ;ac: ;ac? ;ac!'
  - xfail: ...

- - 'ac@ ac# ac$ ac% ac^ ac& ac* ac( ac_ ac= ac+ ac[ ac{ ac\\ ac| ac< ac> ac` ac~ ac/'
  - ';ac@ ;ac# ;ac$ ;ac% ;ac^ ;ac& ;ac* ;ac( ;ac_ ;ac= ;ac+ ;ac[ ;ac{ ;ac\\ ;ac| ;ac< ;ac> ;ac` ;ac~ ;ac/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'according-xl according-([{''"xl according-/xl according-$xl'
  - 'ac-xl ac-([{''"xl ac-/xl ac-$xl'
  - xfail: ...

- - 'according(xl according[xl according{xl according''xl according"xl according=([{''"-xl according([{''"-xl according/-xl according$-xl'
  - 'ac(xl ac[xl ac{xl ac''xl ac"xl ac=([{''"-xl ac([{''"-xl ac/-xl ac$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordingly [accordingly {accordingly ''accordingly "accordingly -accordingly'
  - '(acly [acly {acly ''acly "acly -acly'
  - xfail: ...

- - '!accordingly @accordingly #accordingly $accordingly %accordingly ^accordingly &accordingly *accordingly )accordingly _accordingly =accordingly +accordingly ]accordingly }accordingly \\accordingly |accordingly .accordingly ,accordingly ;accordingly :accordingly'
  - '!acly @acly #acly $acly %acly ^acly &acly *acly )acly _acly =acly +acly ]acly }acly \\acly |acly .acly ,acly ;acly :acly'
  - xfail: contraction followingly special characters is ignored

- - '?accordingly <accordingly >accordingly `accordingly, ~accordingly /accordingly'
  - '?acly <acly >acly `acly ~acly /acly'
  - xfail: contraction followingly special characters is ignored

- - '(acly [acly {acly ''acly "acly -acly'
  - '(;acly [;acly {;acly '';acly ";acly -;acly'
  - xfail: ...

- - '!acly @acly #acly $acly %acly ^acly &acly *acly )acly _acly =acly +acly ]acly }acly \\acly |acly .acly ,acly ;acly :acly ?acly <acly >acly `acly ~acly /acly'
  - '!;acly @;acly #;acly $;acly %;acly ^;acly &;acly *;acly );acly _;acly =;acly +;acly ];acly };acly \\;acly |;acly .;acly ,;acly ;;acly :;acly ?;acly <;acly >;acly `;acly ~;acly /;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordingly xl-([{''"accordingly xl/-accordingly xl$-accordingly'
  - 'xl-acly xl-([{''"acly xl/-acly xl$-acly'
  - xfail: ...

- - 'xl(accordingly xl[accordingly xl{accordingly xl''accordingly xl"accordingly xl-=([{''"accordingly'
  - 'xl(acly xl[acly xl{acly xl''acly xl"acly xl-=([{''"acly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordingly) accordingly] accordingly} accordingly'' accordingly" accordingly- accordingly, accordingly. accordingly; accordingly: accordingly? accordingly!'
  - 'acly) acly] acly} acly'' acly" acly- acly, acly. acly; acly: acly? acly!'
  - xfail: ...

- - 'accordingly@ accordingly# accordingly$ accordingly% accordingly^ accordingly& accordingly* accordingly( accordingly_ accordingly= accordingly+ accordingly[ accordingly{ accordingly\\ accordingly| accordingly< accordingly> accordingly` accordingly~ accordingly/'
  - 'acly@ acly# acly$ acly% acly^ acly& acly* acly( acly_ acly= acly+ acly[ acly{ acly\\ acly| acly< acly> acly` acly~ acly/'
  - xfail: contraction followed by special characters is ignored

- - 'acly) acly] acly} acly'' acly" acly- acly, acly. acly; acly: acly? acly!'
  - ';acly) ;acly] ;acly} ;acly'' ;acly" ;acly- ;acly, ;acly. ;acly; ;acly: ;acly? ;acly!'
  - xfail: ...

- - 'acly@ acly# acly$ acly% acly^ acly& acly* acly( acly_ acly= acly+ acly[ acly{ acly\\ acly| acly< acly> acly` acly~ acly/'
  - ';acly@ ;acly# ;acly$ ;acly% ;acly^ ;acly& ;acly* ;acly( ;acly_ ;acly= ;acly+ ;acly[ ;acly{ ;acly\\ ;acly| ;acly< ;acly> ;acly` ;acly~ ;acly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordingly-xl accordingly-([{''"xl accordingly-/xl accordingly-$xl'
  - 'acly-xl acly-([{''"xl acly-/xl acly-$xl'
  - xfail: ...

- - 'accordingly(xl accordingly[xl accordingly{xl accordingly''xl accordingly"xl accordingly=([{''"-xl accordingly([{''"-xl accordingly/-xl accordingly$-xl'
  - 'acly(xl acly[xl acly{xl acly''xl acly"xl acly=([{''"-xl acly([{''"-xl acly/-xl acly$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordinglys [accordinglys {accordinglys ''accordinglys "accordinglys -accordinglys'
  - '(aclys [aclys {aclys ''aclys "aclys -aclys'
  - xfail: ...

- - '!accordinglys @accordinglys #accordinglys $accordinglys %accordinglys ^accordinglys &accordinglys *accordinglys )accordinglys _accordinglys =accordinglys +accordinglys ]accordinglys }accordinglys \\accordinglys |accordinglys .accordinglys ,accordinglys'
  - '!aclys @aclys #aclys $aclys %aclys ^aclys &aclys *aclys )aclys _aclys =aclys +aclys ]aclys }aclys \\aclys |aclys .aclys ,aclys'
  - xfail: contraction followingly special characters is ignored

- - ';accordinglys :accordinglys ?accordinglys <accordinglys >accordinglys `accordinglys, ~accordinglys /accordinglys'
  - 'baclys :aclys ?aclys <aclys >aclys `aclys ~aclys /aclys'
  - xfail: contraction followingly special characters is ignored

- - 'aclys (aclys [aclys {aclys ''aclys "aclys -aclys !aclys @aclys #aclys $aclys %aclys ^aclys &aclys *aclys )aclys _aclys =aclys +aclys ]aclys }aclys \\aclys |aclys .aclys ,aclys ;aclys :aclys ?aclys <aclys >aclys `aclys ~aclys /aclys'
  - ';aclys (;aclys [;aclys {;aclys '';aclys ";aclys -;aclys !;aclys @;aclys #;aclys $;aclys %;aclys ^;aclys &;aclys *;aclys );aclys _;aclys =;aclys +;aclys ];aclys };aclys \\;aclys |;aclys .;aclys ,;aclys ;;aclys :;aclys ?;aclys <;aclys >;aclys `;aclys ~;aclys /;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordinglys xl-([{''"accordinglys xl/-accordinglys xl$-accordinglys'
  - 'xl-aclys xl-([{''"aclys xl/-aclys xl$-aclys'
  - xfail: ...

- - 'xl(accordinglys xl[accordinglys xl{accordinglys xl''accordinglys xl"accordinglys xl-=([{''"accordinglys'
  - 'xl(aclys xl[aclys xl{aclys xl''aclys xl"aclys xl-=([{''"aclys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordinglys) accordinglys] accordinglys} accordinglys'' accordinglys" accordinglys- accordinglys, accordinglys. accordinglys; accordinglys: accordinglys? accordinglys!'
  - 'aclys) aclys] aclys} aclys'' aclys" aclys- aclys, aclys. aclys; aclys: aclys? aclys!'
  - xfail: ...

- - 'accordinglys@ accordinglys# accordinglys$ accordinglys% accordinglys^ accordinglys& accordinglys* accordinglys( accordinglys_ accordinglys= accordinglys+ accordinglys[ accordinglys{ accordinglys\\ accordinglys| accordinglys< accordinglys> accordinglys`'
  - 'aclys@ aclys# aclys$ aclys% aclys^ aclys& aclys* aclys( aclys_ aclys= aclys+ aclys[ aclys{ aclys\\ aclys| aclys< aclys> aclys`'
  - xfail: contraction followed by special characters is ignored

- - 'accordinglys~ accordinglys/'
  - 'aclys~ aclys/'
  - xfail: contraction followed by special characters is ignored

- - 'aclys) aclys] aclys} aclys'' aclys" aclys- aclys, aclys. aclys; aclys: aclys? aclys! aclys@ aclys# aclys$ aclys% aclys^ aclys& aclys* aclys( aclys_ aclys= aclys+ aclys[ aclys{ aclys\\ aclys| aclys< aclys> aclys` aclys~ aclys/'
  - ';aclys) ;aclys] ;aclys} ;aclys'' ;aclys" ;aclys- ;aclys, ;aclys. ;aclys; ;aclys: ;aclys? ;aclys! ;aclys@ ;aclys# ;aclys$ ;aclys% ;aclys^ ;aclys& ;aclys* ;aclys( ;aclys_ ;aclys= ;aclys+ ;aclys[ ;aclys{ ;aclys\\ ;aclys| ;aclys< ;aclys> ;aclys` ;aclys~ ;aclys/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordinglys-xl accordinglys-([{''"xl accordinglys-/xl accordinglys-$xl'
  - 'aclys-xl aclys-([{''"xl aclys-/xl aclys-$xl'
  - xfail: ...

- - 'accordinglys(xl accordinglys[xl accordinglys{xl accordinglys''xl accordinglys"xl accordinglys=([{''"-xl accordinglys([{''"-xl accordinglys/-xl accordinglys$-xl'
  - 'aclys(xl aclys[xl aclys{xl aclys''xl aclys"xl aclys=([{''"-xl aclys([{''"-xl aclys/-xl aclys$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordings [accordings {accordings ''accordings "accordings -accordings'
  - '(acs [acs {acs ''acs "acs -acs'
  - xfail: ...

- - '!accordings @accordings #accordings $accordings %accordings ^accordings &accordings *accordings )accordings _accordings =accordings +accordings ]accordings }accordings \\accordings |accordings .accordings ,accordings'
  - '!acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs'
  - xfail: contraction followingly special characters is ignored

- - ';accordings :accordings ?accordings <accordings >accordings `accordings, ~accordings /accordings'
  - 'bacs :acs ?acs <acs >acs `acs ~acs /acs'
  - xfail: contraction followingly special characters is ignored

- - 'acs (acs [acs {acs ''acs "acs -acs !acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs ;acs :acs ?acs <acs >acs `acs ~acs /acs'
  - ';acs (;acs [;acs {;acs '';acs ";acs -;acs !;acs @;acs #;acs $;acs %;acs ^;acs &;acs *;acs );acs _;acs =;acs +;acs ];acs };acs \\;acs |;acs .;acs ,;acs ;;acs :;acs ?;acs <;acs >;acs `;acs ~;acs /;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordings xl-([{''"accordings xl/-accordings xl$-accordings'
  - 'xl-acs xl-([{''"acs xl/-acs xl$-acs'
  - xfail: ...

- - 'xl(accordings xl[accordings xl{accordings xl''accordings xl"accordings xl-=([{''"accordings'
  - 'xl(acs xl[acs xl{acs xl''acs xl"acs xl-=([{''"acs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordings) accordings] accordings} accordings'' accordings" accordings- accordings, accordings. accordings; accordings: accordings? accordings!'
  - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs!'
  - xfail: ...

- - 'accordings@ accordings# accordings$ accordings% accordings^ accordings& accordings* accordings( accordings_ accordings= accordings+ accordings[ accordings{ accordings\\ accordings| accordings< accordings> accordings`'
  - 'acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs`'
  - xfail: contraction followed by special characters is ignored

- - 'accordings~ accordings/'
  - 'acs~ acs/'
  - xfail: contraction followed by special characters is ignored

- - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs! acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs` acs~ acs/'
  - ';acs) ;acs] ;acs} ;acs'' ;acs" ;acs- ;acs, ;acs. ;acs; ;acs: ;acs? ;acs! ;acs@ ;acs# ;acs$ ;acs% ;acs^ ;acs& ;acs* ;acs( ;acs_ ;acs= ;acs+ ;acs[ ;acs{ ;acs\\ ;acs| ;acs< ;acs> ;acs` ;acs~ ;acs/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordings-xl accordings-([{''"xl accordings-/xl accordings-$xl'
  - 'acs-xl acs-([{''"xl acs-/xl acs-$xl'
  - xfail: ...

- - 'accordings(xl accordings[xl accordings{xl accordings''xl accordings"xl accordings=([{''"-xl accordings([{''"-xl accordings/-xl accordings$-xl'
  - 'acs(xl acs[xl acs{xl acs''xl acs"xl acs=([{''"-xl acs([{''"-xl acs/-xl acs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccording [unaccording {unaccording ''unaccording "unaccording -unaccording'
  - '(unac [unac {unac ''unac "unac -unac'
  - xfail: ...

- - '!unaccording @unaccording #unaccording $unaccording %unaccording ^unaccording &unaccording *unaccording )unaccording _unaccording =unaccording +unaccording ]unaccording }unaccording \\unaccording |unaccording .unaccording ,unaccording ;unaccording :unaccording'
  - '!unac @unac #unac $unac %unac ^unac &unac *unac )unac _unac =unac +unac ]unac }unac \\unac |unac .unac ,unac ;unac :unac'
  - xfail: contraction following special characters is ignored

- - '?unaccording <unaccording >unaccording `unaccording, ~unaccording /unaccording'
  - '?unac <unac >unac `unac ~unac /unac'
  - xfail: contraction following special characters is ignored

- - '(unac [unac {unac ''unac "unac -unac'
  - '(;unac [;unac {;unac '';unac ";unac -;unac'
  - xfail: ...

- - '!unac @unac #unac $unac %unac ^unac &unac *unac )unac _unac =unac +unac ]unac }unac \\unac |unac .unac ,unac ;unac :unac ?unac <unac >unac `unac ~unac /unac'
  - '!;unac @;unac #;unac $;unac %;unac ^;unac &;unac *;unac );unac _;unac =;unac +;unac ];unac };unac \\;unac |;unac .;unac ,;unac ;;unac :;unac ?;unac <;unac >;unac `;unac ~;unac /;unac'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unaccording xl-([{''"unaccording xl/-unaccording xl$-unaccording'
  - 'xl-unac xl-([{''"unac xl/-unac xl$-unac'
  - xfail: ...

- - 'xl(unaccording xl[unaccording xl{unaccording xl''unaccording xl"unaccording xl-=([{''"unaccording'
  - 'xl(unac xl[unac xl{unac xl''unac xl"unac xl-=([{''"unac'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unaccording) unaccording] unaccording} unaccording'' unaccording" unaccording- unaccording, unaccording. unaccording; unaccording: unaccording? unaccording!'
  - 'unac) unac] unac} unac'' unac" unac- unac, unac. unac; unac: unac? unac!'
  - xfail: ...

- - 'unaccording@ unaccording# unaccording$ unaccording% unaccording^ unaccording& unaccording* unaccording( unaccording_ unaccording= unaccording+ unaccording[ unaccording{ unaccording\\ unaccording| unaccording< unaccording> unaccording` unaccording~ unaccording/'
  - 'unac@ unac# unac$ unac% unac^ unac& unac* unac( unac_ unac= unac+ unac[ unac{ unac\\ unac| unac< unac> unac` unac~ unac/'
  - xfail: contraction followed by special characters is ignored

- - 'unac) unac] unac} unac'' unac" unac- unac, unac. unac; unac: unac? unac!'
  - ';unac) ;unac] ;unac} ;unac'' ;unac" ;unac- ;unac, ;unac. ;unac; ;unac: ;unac? ;unac!'
  - xfail: ...

- - 'unac@ unac# unac$ unac% unac^ unac& unac* unac( unac_ unac= unac+ unac[ unac{ unac\\ unac| unac< unac> unac` unac~ unac/'
  - ';unac@ ;unac# ;unac$ ;unac% ;unac^ ;unac& ;unac* ;unac( ;unac_ ;unac= ;unac+ ;unac[ ;unac{ ;unac\\ ;unac| ;unac< ;unac> ;unac` ;unac~ ;unac/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unaccording-xl unaccording-([{''"xl unaccording-/xl unaccording-$xl'
  - 'unac-xl unac-([{''"xl unac-/xl unac-$xl'
  - xfail: ...

- - 'unaccording(xl unaccording[xl unaccording{xl unaccording''xl unaccording"xl unaccording=([{''"-xl unaccording([{''"-xl unaccording/-xl unaccording$-xl'
  - 'unac(xl unac[xl unac{xl unac''xl unac"xl unac=([{''"-xl unac([{''"-xl unac/-xl unac$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordingly [unaccordingly {unaccordingly ''unaccordingly "unaccordingly -unaccordingly'
  - '(unacly [unacly {unacly ''unacly "unacly -unacly'
  - xfail: ...

- - '!unaccordingly @unaccordingly #unaccordingly $unaccordingly %unaccordingly ^unaccordingly &unaccordingly *unaccordingly )unaccordingly _unaccordingly =unaccordingly +unaccordingly ]unaccordingly }unaccordingly \\unaccordingly |unaccordingly .unaccordingly'
  - '!unacly @unacly #unacly $unacly %unacly ^unacly &unacly *unacly )unacly _unacly =unacly +unacly ]unacly }unacly \\unacly |unacly .unacly'
  - xfail: contraction followingly special characters is ignored

- - ',unaccordingly ;unaccordingly :unaccordingly ?unaccordingly <unaccordingly >unaccordingly `unaccordingly, ~unaccordingly /unaccordingly'
  - ',unacly ;unacly :unacly ?unacly <unacly >unacly `unacly ~unacly /unacly'
  - xfail: contraction followingly special characters is ignored

- - '(unacly [unacly {unacly ''unacly "unacly -unacly'
  - '(;unacly [;unacly {;unacly '';unacly ";unacly -;unacly'
  - xfail: ...

- - '!unacly @unacly #unacly $unacly %unacly ^unacly &unacly *unacly )unacly _unacly =unacly +unacly ]unacly }unacly \\unacly |unacly .unacly ,unacly ;unacly :unacly ?unacly <unacly >unacly `unacly ~unacly /unacly'
  - '!;unacly @;unacly #;unacly $;unacly %;unacly ^;unacly &;unacly *;unacly );unacly _;unacly =;unacly +;unacly ];unacly };unacly \\;unacly |;unacly .;unacly ,;unacly ;;unacly :;unacly ?;unacly <;unacly >;unacly `;unacly ~;unacly /;unacly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordingly xl-([{''"unaccordingly xl/-unaccordingly xl$-unaccordingly'
  - 'xl-unacly xl-([{''"unacly xl/-unacly xl$-unacly'
  - xfail: ...

- - 'xl(unaccordingly xl[unaccordingly xl{unaccordingly xl''unaccordingly xl"unaccordingly xl-=([{''"unaccordingly'
  - 'xl(unacly xl[unacly xl{unacly xl''unacly xl"unacly xl-=([{''"unacly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordingly) unaccordingly] unaccordingly} unaccordingly'' unaccordingly" unaccordingly- unaccordingly, unaccordingly. unaccordingly; unaccordingly: unaccordingly? unaccordingly!'
  - 'unacly) unacly] unacly} unacly'' unacly" unacly- unacly, unacly. unacly; unacly: unacly? unacly!'
  - xfail: ...

- - 'unaccordingly@ unaccordingly# unaccordingly$ unaccordingly% unaccordingly^ unaccordingly& unaccordingly* unaccordingly( unaccordingly_ unaccordingly= unaccordingly+ unaccordingly[ unaccordingly{ unaccordingly\\ unaccordingly| unaccordingly< unaccordingly>'
  - 'unacly@ unacly# unacly$ unacly% unacly^ unacly& unacly* unacly( unacly_ unacly= unacly+ unacly[ unacly{ unacly\\ unacly| unacly< unacly> unacly`'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordingly` unaccordingly~ unaccordingly/'
  - 'unacly~ unacly/'
  - xfail: contraction followed by special characters is ignored

- - 'unacly) unacly] unacly} unacly'' unacly" unacly- unacly, unacly. unacly; unacly: unacly? unacly!'
  - ';unacly) ;unacly] ;unacly} ;unacly'' ;unacly" ;unacly- ;unacly, ;unacly. ;unacly; ;unacly: ;unacly? ;unacly!'
  - xfail: ...

- - 'unacly@ unacly# unacly$ unacly% unacly^ unacly& unacly* unacly( unacly_ unacly= unacly+ unacly[ unacly{ unacly\\ unacly| unacly< unacly> unacly` unacly~ unacly/'
  - ';unacly@ ;unacly# ;unacly$ ;unacly% ;unacly^ ;unacly& ;unacly* ;unacly( ;unacly_ ;unacly= ;unacly+ ;unacly[ ;unacly{ ;unacly\\ ;unacly| ;unacly< ;unacly> ;unacly` ;unacly~ ;unacly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordingly-xl unaccordingly-([{''"xl unaccordingly-/xl unaccordingly-$xl'
  - 'unacly-xl unacly-([{''"xl unacly-/xl unacly-$xl'
  - xfail: ...

- - 'unaccordingly(xl unaccordingly[xl unaccordingly{xl unaccordingly''xl unaccordingly"xl unaccordingly=([{''"-xl unaccordingly([{''"-xl unaccordingly/-xl unaccordingly$-xl'
  - 'unacly(xl unacly[xl unacly{xl unacly''xl unacly"xl unacly=([{''"-xl unacly([{''"-xl unacly/-xl unacly$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordinglys [unaccordinglys {unaccordinglys ''unaccordinglys "unaccordinglys -unaccordinglys'
  - '(unaclys [unaclys {unaclys ''unaclys "unaclys -unaclys'
  - xfail: ...

- - '!unaccordinglys @unaccordinglys #unaccordinglys $unaccordinglys %unaccordinglys ^unaccordinglys &unaccordinglys *unaccordinglys )unaccordinglys _unaccordinglys =unaccordinglys +unaccordinglys ]unaccordinglys }unaccordinglys \\unaccordinglys |unaccordinglys'
  - '!unaclys @unaclys #unaclys $unaclys %unaclys ^unaclys &unaclys *unaclys )unaclys _unaclys =unaclys +unaclys ]unaclys }unaclys \\unaclys |unaclys'
  - xfail: contraction followingly special characters is ignored

- - '.unaccordinglys ,unaccordinglys ;unaccordinglys :unaccordinglys ?unaccordinglys <unaccordinglys >unaccordinglys `unaccordinglys, ~unaccordinglys /unaccordinglys'
  - '.unaclys ,unaclys bunaclys :unaclys ?unaclys <unaclys >unaclys `unaclys ~unaclys /unaclys'
  - xfail: contraction followingly special characters is ignored

- - 'unaclys (unaclys [unaclys {unaclys ''unaclys "unaclys -unaclys !unaclys @unaclys #unaclys $unaclys %unaclys ^unaclys &unaclys *unaclys )unaclys _unaclys =unaclys +unaclys ]unaclys }unaclys \\unaclys |unaclys .unaclys ,unaclys ;unaclys :unaclys ?unaclys <unaclys >'
  - ';unaclys (;unaclys [;unaclys {;unaclys '';unaclys ";unaclys -;unaclys !;unaclys @;unaclys #;unaclys $;unaclys %;unaclys ^;unaclys &;unaclys *;unaclys );unaclys _;unaclys =;unaclys +;unaclys ];unaclys };unaclys \\;unaclys |;unaclys .;unaclys ,;unaclys ;;unaclys :;'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordinglys xl-([{''"unaccordinglys xl/-unaccordinglys xl$-unaccordinglys'
  - 'xl-unaclys xl-([{''"unaclys xl/-unaclys xl$-unaclys'
  - xfail: ...

- - 'xl(unaccordinglys xl[unaccordinglys xl{unaccordinglys xl''unaccordinglys xl"unaccordinglys xl-=([{''"unaccordinglys'
  - 'xl(unaclys xl[unaclys xl{unaclys xl''unaclys xl"unaclys xl-=([{''"unaclys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordinglys) unaccordinglys] unaccordinglys} unaccordinglys'' unaccordinglys" unaccordinglys- unaccordinglys, unaccordinglys. unaccordinglys; unaccordinglys: unaccordinglys? unaccordinglys!'
  - 'unaclys) unaclys] unaclys} unaclys'' unaclys" unaclys- unaclys, unaclys. unaclys; unaclys: unaclys? unaclys!'
  - xfail: ...

- - 'unaccordinglys@ unaccordinglys# unaccordinglys$ unaccordinglys% unaccordinglys^ unaccordinglys& unaccordinglys* unaccordinglys( unaccordinglys_ unaccordinglys= unaccordinglys+ unaccordinglys[ unaccordinglys{ unaccordinglys\\ unaccordinglys| unaccordinglys<'
  - 'unaclys@ unaclys# unaclys$ unaclys% unaclys^ unaclys& unaclys* unaclys( unaclys_ unaclys= unaclys+ unaclys[ unaclys{ unaclys\\ unaclys| unaclys<'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordinglys> unaccordinglys` unaccordinglys~ unaccordinglys/'
  - 'unaclys> unaclys` unaclys~ unaclys/'
  - xfail: contraction followed by special characters is ignored

- - 'unaclys) unaclys] unaclys} unaclys'' unaclys" unaclys- unaclys, unaclys. unaclys; unaclys: unaclys? unaclys! unaclys@ unaclys# unaclys$ unaclys% unaclys^ unaclys& unaclys* unaclys( unaclys_ unaclys= unaclys+ unaclys[ unaclys{ unaclys\\ unaclys| unaclys< unaclys>'
  - ';unaclys) ;unaclys] ;unaclys} ;unaclys'' ;unaclys" ;unaclys- ;unaclys, ;unaclys. ;unaclys; ;unaclys: ;unaclys? ;unaclys! ;unaclys@ ;unaclys# ;unaclys$ ;unaclys% ;unaclys^ ;unaclys& ;unaclys* ;unaclys( ;unaclys_ ;unaclys= ;unaclys+ ;unaclys[ ;unaclys{ ;unaclys\\ ;'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordinglys-xl unaccordinglys-([{''"xl unaccordinglys-/xl unaccordinglys-$xl'
  - 'unaclys-xl unaclys-([{''"xl unaclys-/xl unaclys-$xl'
  - xfail: ...

- - 'unaccordinglys(xl unaccordinglys[xl unaccordinglys{xl unaccordinglys''xl unaccordinglys"xl unaccordinglys=([{''"-xl unaccordinglys([{''"-xl unaccordinglys/-xl unaccordinglys$-xl'
  - 'unaclys(xl unaclys[xl unaclys{xl unaclys''xl unaclys"xl unaclys=([{''"-xl unaclys([{''"-xl unaclys/-xl unaclys$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordings [unaccordings {unaccordings ''unaccordings "unaccordings -unaccordings'
  - '(unacs [unacs {unacs ''unacs "unacs -unacs'
  - xfail: ...

- - '!unaccordings @unaccordings #unaccordings $unaccordings %unaccordings ^unaccordings &unaccordings *unaccordings )unaccordings _unaccordings =unaccordings +unaccordings ]unaccordings }unaccordings \\unaccordings |unaccordings .unaccordings ,unaccordings'
  - '!unacs @unacs #unacs $unacs %unacs ^unacs &unacs *unacs )unacs _unacs =unacs +unacs ]unacs }unacs \\unacs |unacs .unacs ,unacs'
  - xfail: contraction followingly special characters is ignored

- - ';unaccordings :unaccordings ?unaccordings <unaccordings >unaccordings `unaccordings, ~unaccordings /unaccordings'
  - 'bunacs :unacs ?unacs <unacs >unacs `unacs ~unacs /unacs'
  - xfail: contraction followingly special characters is ignored

- - 'unacs (unacs [unacs {unacs ''unacs "unacs -unacs !unacs @unacs #unacs $unacs %unacs ^unacs &unacs *unacs )unacs _unacs =unacs +unacs ]unacs }unacs \\unacs |unacs .unacs ,unacs ;unacs :unacs ?unacs <unacs >unacs `unacs ~unacs /unacs'
  - ';unacs (;unacs [;unacs {;unacs '';unacs ";unacs -;unacs !;unacs @;unacs #;unacs $;unacs %;unacs ^;unacs &;unacs *;unacs );unacs _;unacs =;unacs +;unacs ];unacs };unacs \\;unacs |;unacs .;unacs ,;unacs ;;unacs :;unacs ?;unacs <;unacs >;unacs `;unacs ~;unacs /;unac'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordings xl-([{''"unaccordings xl/-unaccordings xl$-unaccordings'
  - 'xl-unacs xl-([{''"unacs xl/-unacs xl$-unacs'
  - xfail: ...

- - 'xl(unaccordings xl[unaccordings xl{unaccordings xl''unaccordings xl"unaccordings xl-=([{''"unaccordings'
  - 'xl(unacs xl[unacs xl{unacs xl''unacs xl"unacs xl-=([{''"unacs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordings) unaccordings] unaccordings} unaccordings'' unaccordings" unaccordings- unaccordings, unaccordings. unaccordings; unaccordings: unaccordings? unaccordings!'
  - 'unacs) unacs] unacs} unacs'' unacs" unacs- unacs, unacs. unacs; unacs: unacs? unacs!'
  - xfail: ...

- - 'unaccordings@ unaccordings# unaccordings$ unaccordings% unaccordings^ unaccordings& unaccordings* unaccordings( unaccordings_ unaccordings= unaccordings+ unaccordings[ unaccordings{ unaccordings\\ unaccordings| unaccordings< unaccordings> unaccordings`'
  - 'unacs@ unacs# unacs$ unacs% unacs^ unacs& unacs* unacs( unacs_ unacs= unacs+ unacs[ unacs{ unacs\\ unacs| unacs< unacs> unacs`'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordings~ unaccordings/'
  - 'unacs~ unacs/'
  - xfail: contraction followed by special characters is ignored

- - 'unacs) unacs] unacs} unacs'' unacs" unacs- unacs, unacs. unacs; unacs: unacs? unacs! unacs@ unacs# unacs$ unacs% unacs^ unacs& unacs* unacs( unacs_ unacs= unacs+ unacs[ unacs{ unacs\\ unacs| unacs< unacs> unacs` unacs~ unacs/'
  - ';unacs) ;unacs] ;unacs} ;unacs'' ;unacs" ;unacs- ;unacs, ;unacs. ;unacs; ;unacs: ;unacs? ;unacs! ;unacs@ ;unacs# ;unacs$ ;unacs% ;unacs^ ;unacs& ;unacs* ;unacs( ;unacs_ ;unacs= ;unacs+ ;unacs[ ;unacs{ ;unacs\\ ;unacs| ;unacs< ;unacs> ;unacs` ;unacs~ ;unacs/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordings-xl unaccordings-([{''"xl unaccordings-/xl unaccordings-$xl'
  - 'unacs-xl unacs-([{''"xl unacs-/xl unacs-$xl'
  - xfail: ...

- - 'unaccordings(xl unaccordings[xl unaccordings{xl unaccordings''xl unaccordings"xl unaccordings=([{''"-xl unaccordings([{''"-xl unaccordings/-xl unaccordings$-xl'
  - 'unacs(xl unacs[xl unacs{xl unacs''xl unacs"xl unacs=([{''"-xl unacs([{''"-xl unacs/-xl unacs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(across [across {across ''across "across -across'
  - '(acr [acr {acr ''acr "acr -acr'
  - xfail: ...

- - '!across @across #across $across %across ^across &across *across )across _across =across +across ]across }across \\across |across .across ,across ;across :across ?across <across >across `across ~across /across'
  - '!acr @acr #acr $acr %acr ^acr &acr *acr )acr _acr =acr +acr ]acr }acr \\acr |acr .acr ,acr ;acr :acr ?acr <acr >acr ?acr `acr ~acr /acr'
  - xfail: contraction following special characters is ignored

- - '(acr [acr {acr ''acr "acr -acr'
  - '(;acr [;acr {;acr '';acr ";acr -;acr'
  - xfail: ...

- - '!acr @acr #acr $acr %acr ^acr &acr *acr )acr _acr =acr +acr ]acr }acr \\acr |acr .acr ,acr ;acr :acr ?acr <acr >acr ?acr `acr ~acr /acr'
  - '!;acr @;acr #;acr $;acr %;acr ^;acr &;acr *;acr );acr _;acr =;acr +;acr ];acr };acr \\;acr |;acr .;acr ,;acr ;;acr :;acr ?;acr <;acr >;acr `;acr ~;acr /;acr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-across xl-([{''"across xl/-across xl$-across'
  - 'xl-acr xl-([{''"acr xl/-acr xl$-acr'
  - xfail: ...

- - 'xl(across xl[across xl{across xl''across xl"across xl-=([{''"across'
  - 'xl(acr xl[acr xl{acr xl''acr xl"acr xl-=([{''"acr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'across) across] across} across'' across" across- across, across. across; across: across? across!'
  - 'acr) acr] acr} acr'' acr" acr- acr, acr. acr; acr: acr? acr!'
  - xfail: ...

- - 'across@ across# across$ across% across^ across& across* across( across_ across= across+ across[ across{ across\\ across| across< across> across` across~ across/'
  - 'acr@ acr# acr$ acr% acr^ acr& acr* acr( acr_ acr= acr+ acr[ acr{ acr\\ acr| acr< acr> acr` acr~ acr/'
  - xfail: contraction followed by special characters is ignored

- - 'acr) acr] acr} acr'' acr" acr- acr, acr. acr; acr: acr? acr!'
  - ';acr) ;acr] ;acr} ;acr'' ;acr" ;acr- ;acr, ;acr. ;acr; ;acr: ;acr? ;acr!'
  - xfail: ...

- - 'acr@ acr# acr$ acr% acr^ acr& acr* acr( acr_ acr= acr+ acr[ acr{ acr\\ acr| acr< acr> acr` acr~ acr/'
  - ';acr@ ;acr# ;acr$ ;acr% ;acr^ ;acr& ;acr* ;acr( ;acr_ ;acr= ;acr+ ;acr[ ;acr{ ;acr\\ ;acr| ;acr< ;acr> ;acr` ;acr~ ;acr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'across-xl across-([{''"xl across-/xl across-$xl'
  - 'acr-xl acr-([{''"xl acr-/xl acr-$xl'
  - xfail: ...

- - 'across(xl across[xl across{xl across''xl across"xl across=([{''"-xl across([{''"-xl across/-xl across$-xl'
  - 'acr(xl acr[xl acr{xl acr''xl acr"xl acr=([{''"-xl acr([{''"-xl acr/-xl acr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(acrosss [acrosss {acrosss ''acrosss "acrosss -acrosss'
  - '(acrs [acrs {acrs ''acrs "acrs -acrs'
  - xfail: ...

- - '!acrosss @acrosss #acrosss $acrosss %acrosss ^acrosss &acrosss *acrosss )acrosss _acrosss =acrosss +acrosss ]acrosss }acrosss \\acrosss |acrosss .acrosss ,acrosss ;acrosss :acrosss ?acrosss <acrosss >acrosss `acrosss ~acrosss /acrosss'
  - '!acrs @acrs #acrs $acrs %acrs ^acrs &acrs *acrs )acrs _acrs =acrs +acrs ]acrs }acrs \\acrs |acrs .acrs ,acrs ;acrs :acrs ?acrs <acrs >acrs ?acrs `acrs ~acrs /acrs'
  - xfail: contraction following special characters is ignored

- - 'acrs  (acrs [acrs {acrs ''acrs "acrs -acrs !acrs @acrs #acrs $acrs %acrs ^acrs &acrs *acrs )acrs _acrs =acrs +acrs ]acrs }acrs \\acrs |acrs .acrs ,acrs ;acrs :acrs ?acrs <acrs >acrs ?acrs `acrs ~acrs /acrs'
  - ';acrs  (;acrs [;acrs {;acrs '';acrs ";acrs -;acrs !;acrs @;acrs #;acrs $;acrs %;acrs ^;acrs &;acrs *;acrs );acrs _;acrs =;acrs +;acrs ];acrs };acrs \\;acrs |;acrs .;acrs ,;acrs ;;acrs :;acrs ?;acrs <;acrs >;acrs `;acrs ~;acrs /;acrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-acrosss xl-([{''"acrosss xl/-acrosss xl$-acrosss'
  - 'xl-acrs xl-([{''"acrs xl/-acrs xl$-acrs'
  - xfail: ...

- - 'xl(acrosss xl[acrosss xl{acrosss xl''acrosss xl"acrosss xl-=([{''"acrosss'
  - 'xl(acrs xl[acrs xl{acrs xl''acrs xl"acrs xl-=([{''"acrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'acrosss) acrosss] acrosss} acrosss'' acrosss" acrosss- acrosss, acrosss. acrosss; acrosss: acrosss? acrosss!'
  - 'acrs) acrs] acrs} acrs'' acrs" acrs- acrs, acrs. acrs; acrs: acrs? acrs!'
  - xfail: ...

- - 'acrosss@ acrosss# acrosss$ acrosss% acrosss^ acrosss& acrosss* acrosss( acrosss_ acrosss= acrosss+ acrosss[ acrosss{ acrosss\\ acrosss| acrosss< acrosss> acrosss` acrosss~ acrosss/'
  - 'acrs@ acrs# acrs$ acrs% acrs^ acrs& acrs* acrs( acrs_ acrs= acrs+ acrs[ acrs{ acrs\\ acrs| acrs< acrs> acrs` acrs~ acrs/'
  - xfail: contraction followed by special characters is ignored

- - 'acrs) acrs] acrs} acrs'' acrs" acrs- acrs, acrs. acrs; acrs: acrs? acrs! acrs@ acrs# acrs$ acrs% acrs^ acrs& acrs* acrs( acrs_ acrs= acrs+ acrs[ acrs{ acrs\\ acrs| acrs< acrs> acrs` acrs~ acrs/'
  - ';acrs) ;acrs] ;acrs} ;acrs'' ;acrs" ;acrs- ;acrs, ;acrs. ;acrs; ;acrs: ;acrs? ;acrs! ;acrs@ ;acrs# ;acrs$ ;acrs% ;acrs^ ;acrs& ;acrs* ;acrs( ;acrs_ ;acrs= ;acrs+ ;acrs[ ;acrs{ ;acrs\\ ;acrs| ;acrs< ;acrs> ;acrs` ;acrs~ ;acrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'acrosss-xl acrosss-([{''"xl acrosss-/xl acrosss-$xl'
  - 'acrs-xl acrs-([{''"xl acrs-/xl acrs-$xl'
  - xfail: ...

- - 'acrosss(xl acrosss[xl acrosss{xl acrosss''xl acrosss"xl acrosss=([{''"-xl acrosss([{''"-xl acrosss/-xl acrosss$-xl'
  - 'acrs(xl acrs[xl acrs{xl acrs''xl acrs"xl acrs=([{''"-xl acrs([{''"-xl acrs/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordings [accordings {accordings ''accordings "accordings -accordings'
  - '(acs [acs {acs ''acs "acs -acs'
  - xfail: ...

- - '!accordings @accordings #accordings $accordings %accordings ^accordings &accordings *accordings )accordings _accordings =accordings +accordings ]accordings }accordings \\accordings |accordings .accordings ,accordings ;accordings :accordings ?accordings'
  - '!acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs ;acs :acs ?acs'
  - xfail: contraction following special characters is ignored

- - '<accordings >accordings `accordings, ~accordings /accordings'
  - '<acs >acs `acs ~acs /acs'
  - xfail: contraction following special characters is ignored

- - 'acs (acs [acs {acs ''acs "acs -acs !acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs ;acs :acs ?acs <acs >acs `acs ~acs /acs'
  - ';acs (;acs [;acs {;acs '';acs ";acs -;acs !;acs @;acs #;acs $;acs %;acs ^;acs &;acs *;acs );acs _;acs =;acs +;acs ];acs };acs \\;acs |;acs .;acs ,;acs ;;acs :;acs ?;acs <;acs >;acs `;acs ~;acs /;acs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-accordings xl-([{''"accordings xl/-accordings xl$-accordings'
  - 'xl-acs xl-([{''"acs xl/-acs xl$-acs'
  - xfail: ...

- - 'xl(accordings xl[accordings xl{accordings xl''accordings xl"accordings xl-=([{''"accordings'
  - 'xl(acs xl[acs xl{acs xl''acs xl"acs xl-=([{''"acs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'accordings) accordings] accordings} accordings'' accordings" accordings- accordings, accordings. accordings; accordings: accordings? accordings!'
  - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs!'
  - xfail: ...

- - 'accordings@ accordings# accordings$ accordings% accordings^ accordings& accordings* accordings( accordings_ accordings= accordings+ accordings[ accordings{ accordings\\ accordings| accordings< accordings> accordings` accordings~ accordings/'
  - 'acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs` acs~ acs/'
  - xfail: contraction followed by special characters is ignored

- - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs! acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs` acs~ acs/'
  - ';acs) ;acs] ;acs} ;acs'' ;acs" ;acs- ;acs, ;acs. ;acs; ;acs: ;acs? ;acs! ;acs@ ;acs# ;acs$ ;acs% ;acs^ ;acs& ;acs* ;acs( ;acs_ ;acs= ;acs+ ;acs[ ;acs{ ;acs\\ ;acs| ;acs< ;acs> ;acs` ;acs~ ;acs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'accordings-xl accordings-([{''"xl accordings-/xl accordings-$xl'
  - 'acs-xl acs-([{''"xl acs-/xl acs-$xl'
  - xfail: ...

- - 'accordings(xl accordings[xl accordings{xl accordings''xl accordings"xl accordings=([{''"-xl accordings([{''"-xl accordings/-xl accordings$-xl'
  - 'acs(xl acs[xl acs{xl acs''xl acs"xl acs=([{''"-xl acs([{''"-xl acs/-xl acs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(after [after {after ''after "after -after'
  - '(af [af {af ''af "af -af'
  - xfail: ...

- - '!after @after #after $after %after ^after &after *after )after _after =after +after ]after }after \\after |after .after ,after ;after :after ?after <after >after `after ~after /after'
  - '!af @af #af $af %af ^af &af *af )af _af =af +af ]af }af \\af |af .af ,af ;af :af ?af <af >af `af ~af /af'
  - xfail: contraction following special characters is ignored

- - '(af [af {af ''af "af -af'
  - '(;af [;af {;af '';af ";af -;af'
  - xfail: ...

- - '!af @af #af $af %af ^af &af *af )af _af =af +af ]af }af \\af |af .af ,af ;af :af ?af <af >af `af ~af /af'
  - '!;af @;af #;af $;af %;af ^;af &;af *;af );af _;af =;af +;af ];af };af \\;af |;af .;af ,;af ;;af :;af ?;af <;af >;af `;af ~;af /;af'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-after xl-([{''"after xl/-after xl$-after'
  - 'xl-af xl-([{''"af xl/-af xl$-af'
  - xfail: ...

- - 'xl(after xl[after xl{after xl''after xl"after xl-=([{''"after'
  - 'xl(af xl[af xl{af xl''af xl"af xl-=([{''"af'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'after) after] after} after'' after" after- after, after. after; after: after? after!'
  - 'af) af] af} af'' af" af- af, af. af; af: af? af!'
  - xfail: ...

- - 'after@ after# after$ after% after^ after& after* after( after_ after= after+ after[ after{ after\\ after| after< after> after` after~ after/'
  - 'af@ af# af$ af% af^ af& af* af( af_ af= af+ af[ af{ af\\ af| af< af> af` af~ af/'
  - xfail: contraction followed by special characters is ignored

- - 'af) af] af} af'' af" af- af, af. af; af: af? af!'
  - ';af) ;af] ;af} ;af'' ;af" ;af- ;af, ;af. ;af; ;af: ;af? ;af!'
  - xfail: ...

- - 'af@ af# af$ af% af^ af& af* af( af_ af= af+ af[ af{ af\\ af| af< af> af` af~ af/'
  - ';af@ ;af# ;af$ ;af% ;af^ ;af& ;af* ;af( ;af_ ;af= ;af+ ;af[ ;af{ ;af\\ ;af| ;af< ;af> ;af` ;af~ ;af/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'after-xl after-([{''"xl after-/xl after-$xl'
  - 'af-xl af-([{''"xl af-/xl af-$xl'
  - xfail: ...

- - 'after(xl after[xl after{xl after''xl after"xl after=([{''"-xl after([{''"-xl after/-xl after$-xl'
  - 'af(xl af[xl af{xl af''xl af"xl af=([{''"-xl af([{''"-xl af/-xl af$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'afterr afterraid'
  - 'af;r af;raid'
  - xfail: contraction of "af" followed by "ra" has a missing grade 1 indicator before "a" due to conflict with contraction of "fr" followingy "a"

- - 'afterb afterc afterd afterf afterg afterh afterj afterk afterl afterm aftern afterp afterq afters aftert afterv afterw afterx afterz'
  - 'afb afc afd aff afg afh afj afk afl afm afn afp afq afs aft afv afw afx afz'

- - 'afb afc afd aff afg afh afj afk afl afm afn afp afq afr afs aft afv afw afx afz'
  - ';afb ;afc ;afd ;aff ;afg ;afh ;afj ;afk ;afl ;afm ;afn ;afp ;afq a;fr ;afs ;aft ;afv ;afw ;afx ;afz'
  - xfail: non-contraction of "af" followed by non-vowel letter has a missing grade 1 indicator due to conflict with contraction of "after"

- - 'aafter bafter cafter eafter  fafter gafter hafter iafter jafter kafter lafter  mafter nafter oafter paf qafter safter tafter uafter  vafter wafter xafter yafter zafter stafterf raftert afterford'
  - 'aaf baf caf eaf  faf gaf haf iaf jaf kaf laf  maf naf oaf paf qaf saf taf uaf  vaf waf xaf yaf zaf staff raft af=d'
  - xfail: ...

- - 'aaf baf caf eaf  faf gaf haf iaf jaf kaf laf  maf naf oaf paf qaf saf taf uaf  vaf waf xaf yaf zaf staff raft afford'
  - 'a;af b;af c;af e;af  f;af g;af h;af i;af j;af k;af l;af  m;af n;af o;af p;af q;af s;af t;af u;af  v;af w;af x;af y;af z;af st;aff r;aft ;af=d'
  - xfail: non-contraction of "af" following letter excluding "d" and "r"  has a missing grade 1 indicator due to conflict with contraction of "after"

- - '(aftern [aftern {aftern ''aftern "aftern -aftern'
  - '(af;n [af;n {af;n ''af;n "af;n -af;n'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoon"

- - '!aftern @aftern #aftern $aftern %aftern ^aftern &aftern *aftern )aftern _aftern =aftern +aftern ]aftern }aftern \\aftern |aftern .aftern ,aftern ;aftern :aftern ?aftern <aftern >aftern'
  - '!af;n @af;n #af;n $af;n %af;n ^af;n &af;n *af;n )af;n _af;n =af;n +af;n ]af;n }af;n \\af;n |af;n .af;n ,af;n ;af;n :af;n ?af;n <af;n >af;n'
  - xfail: contraction following special characters is ignored

- - '`aftern, ~aftern /aftern'
  - '`af;n ~af;n /af;n'
  - xfail: contraction following special characters is ignored

- - 'aftern) aftern] aftern} aftern'' aftern" aftern- aftern, aftern. aftern; aftern: aftern? aftern!'
  - 'af;n) af;n] af;n} af;n'' af;n" af;n- af;n, af;n. af;n; af;n: af;n? af;n!'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoon"

- - 'aftern@ aftern# aftern$ aftern% aftern^ aftern& aftern* aftern( aftern_ aftern= aftern+ aftern[ aftern{ aftern\\ aftern| aftern< aftern> aftern` aftern~ aftern/'
  - 'af;n@ af;n# af;n$ af;n% af;n^ af;n& af;n* af;n( af;n_ af;n= af;n+ af;n[ af;n{ af;n\\ af;n| af;n< af;n> af;n` af;n~ af;n/'
  - xfail: contraction followed by special characters is ignored

- - '(afterns [afterns {afterns ''afterns "afterns -afterns'
  - '(af;ns [af;ns {af;ns ''af;ns "af;ns -af;ns'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoons"

- - '!afterns @afterns #afterns $afterns %afterns ^afterns &afterns *afterns )afterns _afterns =afterns +afterns ]afterns }afterns \\afterns |afterns .afterns ,afterns af;ns :afterns ?afterns'
  - '!af;ns @af;ns #af;ns $af;ns %af;ns ^af;ns &af;ns *af;ns )af;ns _af;ns =af;ns +af;ns ]af;ns }af;ns \\af;ns |af;ns .af;ns ,af;ns ;af;ns :af;ns ?af;ns'
  - xfail: contraction following special characters is ignored

- - '<afterns >afterns `afterns, ~afterns /afterns'
  - '<af;ns >af;ns `af;ns ~af;ns /af;ns'
  - xfail: contraction following special characters is ignored

- - 'afterns) afterns] afterns} afterns'' afterns" afterns- afterns, afterns. afterns; afterns: afterns? afterns!'
  - 'af;ns) af;ns] af;ns} af;ns'' af;ns" af;ns- af;ns, af;ns. af;ns; af;ns: af;ns? af;ns!'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoons"

- - 'afterns@ afterns# afterns$ afterns% afterns^ afterns& afterns* afterns( afterns_ afterns= afterns+ afterns[ afterns{ afterns\\ afterns| afterns< afterns> afterns` afterns~ afterns/'
  - 'af;ns@ af;ns# af;ns$ af;ns% af;ns^ af;ns& af;ns* af;ns( af;ns_ af;ns= af;ns+ af;ns[ af;ns{ af;ns\\ af;ns| af;ns< af;ns> af;ns` af;ns~ af;ns/'
  - xfail: contraction followed by special characters is ignored

- - '(afterw [afterw {afterw ''afterw "afterw -afterw'
  - '(af;w [af;w {af;w ''af;w "af;w -af;w'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterward"

- - '!afterw @afterw #afterw $afterw %afterw ^afterw &afterw *afterw )afterw _afterw =afterw +afterw ]afterw }afterw \\afterw |afterw .afterw ,afterw ;afterw ?afterw <afterw >afterw'
  - '!af;w @af;w #af;w $af;w %af;w ^af;w &af;w *af;w )af;w _af;w =af;w +af;w ]af;w }af;w \\af;w |af;w .af;w ,af;w ;af;w :af;w ?af;w <af;w >af;w'
  - xfail: contraction following special characters is ignored

- - '`afterw, ~afterw /afterw'
  - '`af;w ~af;w /af;w'
  - xfail: contraction following special characters is ignored

- - 'afterw) afterw] afterw} afterw'' afterw" afterw- afterw, afterw. afterw; afterw: afterw? afterw!'
  - 'af;w) af;w] af;w} af;w'' af;w" af;w- af;w, af;w. af;w; af;w: af;w? af;w!'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterward"

- - 'afterw@ afterw# afterw$ afterw% afterw^ afterw& afterw* afterw( afterw_ afterw= afterw+ afterw[ afterw{ afterw\\ afterw| afterw< afterw> afterw` afterw~ afterw/'
  - 'af;w@ af;w# af;w$ af;w% af;w^ af;w& af;w* af;w( af;w_ af;w= af;w+ af;w[ af;w{ af;w\\ af;w| af;w< af;w> af;w` af;w~ af;w/'
  - xfail: contraction followed by special characters is ignored

- - '(afterws [afterws {afterws ''afterws "afterws -afterws'
  - '(af;ws [af;ws {af;ws ''af;ws "af;ws -af;ws'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterwards"

- - '!afterws @afterws #afterws $afterws %afterws ^afterws &afterws *afterws )afterws _afterws =afterws +afterws ]afterws }afterws \\afterws |afterws .afterws ,afterws af;ws :afterws ?afterws'
  - '!af;ws @af;ws #af;ws $af;ws %af;ws ^af;ws &af;ws *af;ws )af;ws _af;ws =af;ws +af;ws ]af;ws }af;ws \\af;ws |af;ws .af;ws ,af;ws ;af;ws :af;ws ?af;ws'
  - xfail: contraction following special characters is ignored

- - '<afterws >afterws `afterws, ~afterws /afterws'
  - '<af;ws >af;ws `af;ws ~af;ws /af;ws'
  - xfail: contraction following special characters is ignored

- - 'afterws) afterws] afterws} afterws'' afterws" afterws- afterws, afterws. afterws; afterws: afterws? afterws!'
  - 'af;ws) af;ws] af;ws} af;ws'' af;ws" af;ws- af;ws, af;ws. af;ws; af;ws: af;ws? af;ws!'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterwards"

- - 'afterws@ afterws# afterws$ afterws% afterws^ afterws& afterws* afterws( afterws_ afterws= afterws+ afterws[ afterws{ afterws\\ afterws| afterws< afterws> afterws` afterws~ afterws/'
  - 'af;ws@ af;ws# af;ws$ af;ws% af;ws^ af;ws& af;ws* af;ws( af;ws_ af;ws= af;ws+ af;ws[ af;ws{ af;ws\\ af;ws| af;ws< af;ws> af;ws` af;ws~ af;ws/'
  - xfail: contraction followed by special characters is ignored

- - '(afternoon [afternoon {afternoon ''afternoon "afternoon -afternoon'
  - '(afn [afn {afn ''afn "afn -afn'
  - xfail: ...

- - '!afternoon @afternoon #afternoon $afternoon %afternoon ^afternoon &afternoon *afternoon )afternoon _afternoon =afternoon +afternoon ]afternoon }afternoon \\afternoon |afternoon .afternoon ,afternoon ;afternoon :afternoon ?afternoon <afternoon >afternoon'
  - '!afn @afn #afn $afn %afn ^afn &afn *afn )afn _afn =afn +afn ]afn }afn \\afn |afn .afn ,afn ;afn :afn ?afn <afn >afn'
  - xfail: contraction following special characters is ignored

- - '`afternoon, ~afternoon /afternoon'
  - '`afn ~afn /afn'
  - xfail: contraction following special characters is ignored

- - '(afn [afn {afn ''afn "afn -afn'
  - '(;afn [;afn {;afn '';afn ";afn -;afn'
  - xfail: ...

- - '!afn @afn #afn $afn %afn ^afn &afn *afn )afn _afn =afn +afn ]afn }afn \\afn |afn .afn ,afn ;afn :afn ?afn <afn >afn `afn ~afn /afn'
  - '!;afn @;afn #;afn $;afn %;afn ^;afn &;afn *;afn );afn _;afn =;afn +;afn ];afn };afn \\;afn |;afn .;afn ,;afn ;;afn :;afn ?;afn <;afn >;afn `;afn ~;afn /;afn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afternoon xl-([{''"afternoon xl/-afternoon xl$-afternoon'
  - 'xl-afn xl-([{''"afn xl/-afn xl$-afn'
  - xfail: ...

- - 'xl(afternoon xl[afternoon xl{afternoon xl''afternoon xl"afternoon xl-=([{''"afternoon'
  - 'xl(afn xl[afn xl{afn xl''afn xl"afn xl-=([{''"afn'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afternoon) afternoon] afternoon} afternoon'' afternoon" afternoon- afternoon, afternoon. afternoon; afternoon: afternoon? afternoon!'
  - 'afn) afn] afn} afn'' afn" afn- afn, afn. afn; afn: afn? afn!'
  - xfail: ...

- - 'afternoon@ afternoon# afternoon$ afternoon% afternoon^ afternoon& afternoon* afternoon( afternoon_ afternoon= afternoon+ afternoon[ afternoon{ afternoon\\ afternoon| afternoon< afternoon> afternoon` afternoon~ afternoon/'
  - 'afn@ afn# afn$ afn% afn^ afn& afn* afn( afn_ afn= afn+ afn[ afn{ afn\\ afn| afn< afn> afn` afn~ afn/'
  - xfail: contraction followed by special characters is ignored

- - 'afn) afn] afn} afn'' afn" afn- afn, afn. afn; afn: afn? afn!'
  - ';afn) ;afn] ;afn} ;afn'' ;afn" ;afn- ;afn, ;afn. ;afn; ;afn: ;afn? ;afn!'
  - xfail: ...

- - 'afn@ afn# afn$ afn% afn^ afn& afn* afn( afn_ afn= afn+ afn[ afn{ afn\\ afn| afn< afn> afn` afn~ afn/'
  - ';afn@ ;afn# ;afn$ ;afn% ;afn^ ;afn& ;afn* ;afn( ;afn_ ;afn= ;afn+ ;afn[ ;afn{ ;afn\\ ;afn| ;afn< ;afn> ;afn` ;afn~ ;afn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afternoon-xl afternoon-([{''"xl afternoon-/xl afternoon-$xl'
  - 'afn-xl afn-([{''"xl afn-/xl afn-$xl'
  - xfail: ...

- - 'afternoon(xl afternoon[xl afternoon{xl afternoon''xl afternoon"xl afternoon=([{''"-xl afternoon([{''"-xl afternoon/-xl afternoon$-xl'
  - 'afn(xl afn[xl afn{xl afn''xl afn"xl afn=([{''"-xl afn([{''"-xl afn/-xl afn$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afternoons [afternoons {afternoons ''afternoons "afternoons -afternoons'
  - '(afns [afns {afns ''afns "afns -afns'
  - xfail: ...

- - '!afternoons @afternoons #afternoons $afternoons %afternoons ^afternoons &afternoons *afternoons )afternoons _afternoons =afternoons +afternoons ]afternoons }afternoons \\afternoons |afternoons .afternoons ,afternoons ;afternoons :afternoons ?afternoons'
  - '!afns @afns #afns $afns %afns ^afns &afns *afns )afns _afns =afns +afns ]afns }afns \\afns |afns .afns ,afns ;afns :afns ?afns'
  - xfail: contraction following special characters is ignored

- - '<afternoons >afternoons `afternoons, ~afternoons /afternoons'
  - '<afns >afns `afns ~afns /afns'
  - xfail: contraction following special characters is ignored

- - 'afns (afns [afns {afns ''afns "afns -afns !afns @afns #afns $afns %afns ^afns &afns *afns )afns _afns =afns +afns ]afns }afns \\afns |afns .afns ,afns ;afns :afns ?afns <afns >afns `afns ~afns /afns'
  - ';afns (;afns [;afns {;afns '';afns ";afns -;afns !;afns @;afns #;afns $;afns %;afns ^;afns &;afns *;afns );afns _;afns =;afns +;afns ];afns };afns \\;afns |;afns .;afns ,;afns ;;afns :;afns ?;afns <;afns >;afns `;afns ~;afns /;afns'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afternoons xl-([{''"afternoons xl/-afternoons xl$-afternoons'
  - 'xl-afns xl-([{''"afns xl/-afns xl$-afns'
  - xfail: ...

- - 'xl(afternoons xl[afternoons xl{afternoons xl''afternoons xl"afternoons xl-=([{''"afternoons'
  - 'xl(afns xl[afns xl{afns xl''afns xl"afns xl-=([{''"afns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afternoons) afternoons] afternoons} afternoons'' afternoons" afternoons- afternoons, afternoons. afternoons; afternoons: afternoons? afternoons!'
  - 'afns) afns] afns} afns'' afns" afns- afns, afns. afns; afns: afns? afns!'
  - xfail: ...

- - 'afternoons@ afternoons# afternoons$ afternoons% afternoons^ afternoons& afternoons* afternoons( afternoons_ afternoons= afternoons+ afternoons[ afternoons{ afternoons\\ afternoons| afternoons< afternoons> afternoons` afternoons~ afternoons/'
  - 'afns@ afns# afns$ afns% afns^ afns& afns* afns( afns_ afns= afns+ afns[ afns{ afns\\ afns| afns< afns> afns` afns~ afns/'
  - xfail: contraction followed by special characters is ignored

- - 'afns) afns] afns} afns'' afns" afns- afns, afns. afns; afns: afns? afns! afns@ afns# afns$ afns% afns^ afns& afns* afns( afns_ afns= afns+ afns[ afns{ afns\\ afns| afns< afns> afns` afns~ afns/'
  - ';afns) ;afns] ;afns} ;afns'' ;afns" ;afns- ;afns, ;afns. ;afns; ;afns: ;afns? ;afns! ;afns@ ;afns# ;afns$ ;afns% ;afns^ ;afns& ;afns* ;afns( ;afns_ ;afns= ;afns+ ;afns[ ;afns{ ;afns\\ ;afns| ;afns< ;afns> ;afns` ;afns~ ;afns/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afternoons-xl afternoons-([{''"xl afternoons-/xl afternoons-$xl'
  - 'afns-xl afns-([{''"xl afns-/xl afns-$xl'
  - xfail: ...

- - 'afternoons(xl afternoons[xl afternoons{xl afternoons''xl afternoons"xl afternoons=([{''"-xl afternoons([{''"-xl afternoons/-xl afternoons$-xl'
  - 'afns(xl afns[xl afns{xl afns''xl afns"xl afns=([{''"-xl afns([{''"-xl afns/-xl afns$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afterward [afterward {afterward ''afterward "afterward -afterward'
  - '(afw [afw {afw ''afw "afw -afw'
  - xfail: ...

- - '!afterward @afterward #afterward $afterward %afterward ^afterward &afterward *afterward )afterward _afterward =afterward +afterward ]afterward }afterward \\afterward |afterward .afterward ,afterward ;afterward :afterward ?afterward <afterward >afterward'
  - '!afw @afw #afw $afw %afw ^afw &afw *afw )afw _afw =afw +afw ]afw }afw \\afw |afw .afw ,afw ;afw :afw ?afw <afw >afw'
  - xfail: contraction following special characters is ignored

- - '`afterward, ~afterward /afterward'
  - '`afw ~afw /afw'
  - xfail: contraction following special characters is ignored

- - '(afw [afw {afw ''afw "afw -afw'
  - '(;afw [;afw {;afw '';afw ";afw -;afw'
  - xfail: ...

- - '!afw @afw #afw $afw %afw ^afw &afw *afw )afw _afw =afw +afw ]afw }afw \\afw |afw .afw ,afw ;afw :afw ?afw <afw >afw `afw ~afw /afw'
  - '!;afw @;afw #;afw $;afw %;afw ^;afw &;afw *;afw );afw _;afw =;afw +;afw ];afw };afw \\;afw |;afw .;afw ,;afw ;;afw :;afw ?;afw <;afw >;afw `;afw ~;afw /;afw'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afterward xl-([{''"afterward xl/-afterward xl$-afterward'
  - 'xl-afw xl-([{''"afw xl/-afw xl$-afw'
  - xfail: ...

- - 'xl(afterward xl[afterward xl{afterward xl''afterward xl"afterward xl-=([{''"afterward'
  - 'xl(afw xl[afw xl{afw xl''afw xl"afw xl-=([{''"afw'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afterward) afterward] afterward} afterward'' afterward" afterward- afterward, afterward. afterward; afterward: afterward? afterward!'
  - 'afw) afw] afw} afw'' afw" afw- afw, afw. afw; afw: afw? afw!'
  - xfail: ...

- - 'afterward@ afterward# afterward$ afterward% afterward^ afterward& afterward* afterward( afterward_ afterward= afterward+ afterward[ afterward{ afterward\\ afterward| afterward< afterward> afterward` afterward~ afterward/'
  - 'afw@ afw# afw$ afw% afw^ afw& afw* afw( afw_ afw= afw+ afw[ afw{ afw\\ afw| afw< afw> afw` afw~ afw/'
  - xfail: contraction followed by special characters is ignored

- - 'afw) afw] afw} afw'' afw" afw- afw, afw. afw; afw: afw? afw!'
  - ';afw) ;afw] ;afw} ;afw'' ;afw" ;afw- ;afw, ;afw. ;afw; ;afw: ;afw? ;afw!'
  - xfail: ...

- - 'afw@ afw# afw$ afw% afw^ afw& afw* afw( afw_ afw= afw+ afw[ afw{ afw\\ afw| afw< afw> afw` afw~ afw/'
  - ';afw@ ;afw# ;afw$ ;afw% ;afw^ ;afw& ;afw* ;afw( ;afw_ ;afw= ;afw+ ;afw[ ;afw{ ;afw\\ ;afw| ;afw< ;afw> ;afw` ;afw~ ;afw/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afterward-xl afterward-([{''"xl afterward-/xl afterward-$xl'
  - 'afw-xl afw-([{''"xl afw-/xl afw-$xl'
  - xfail: ...

- - 'afterward(xl afterward[xl afterward{xl afterward''xl afterward"xl afterward=([{''"-xl afterward([{''"-xl afterward/-xl afterward$-xl'
  - 'afw(xl afw[xl afw{xl afw''xl afw"xl afw=([{''"-xl afw([{''"-xl afw/-xl afw$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afterwards [afterwards {afterwards ''afterwards "afterwards -afterwards'
  - '(afws [afws {afws ''afws "afws -afws'
  - xfail: ...

- - '!afterwards @afterwards #afterwards $afterwards %afterwards ^afterwards &afterwards *afterwards )afterwards _afterwards =afterwards +afterwards ]afterwards }afterwards \\afterwards |afterwards .afterwards ,afterwards ;afterwards :afterwards ?afterwards'
  - '!afws @afws #afws $afws %afws ^afws &afws *afws )afws _afws =afws +afws ]afws }afws \\afws |afws .afws ,afws ;afws :afws ?afws'
  - xfail: contraction following special characters is ignored

- - '<afterwards >afterwards `afterwards, ~afterwards /afterwards'
  - '<afws >afws `afws ~afws /afws'
  - xfail: contraction following special characters is ignored

- - 'afws (afws [afws {afws ''afws "afws -afws !afws @afws #afws $afws %afws ^afws &afws *afws )afws _afws =afws +afws ]afws }afws \\afws |afws .afws ,afws ;afws :afws ?afws <afws >afws `afws ~afws /afws'
  - ';afws (;afws [;afws {;afws '';afws ";afws -;afws !;afws @;afws #;afws $;afws %;afws ^;afws &;afws *;afws );afws _;afws =;afws +;afws ];afws };afws \\;afws |;afws .;afws ,;afws ;;afws :;afws ?;afws <;afws >;afws `;afws ~;afws /;afws'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afterwards xl-([{''"afterwards xl/-afterwards xl$-afterwards'
  - 'xl-afws xl-([{''"afws xl/-afws xl$-afws'
  - xfail: ...

- - 'xl(afterwards xl[afterwards xl{afterwards xl''afterwards xl"afterwards xl-=([{''"afterwards'
  - 'xl(afws xl[afws xl{afws xl''afws xl"afws xl-=([{''"afws'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afterwards) afterwards] afterwards} afterwards'' afterwards" afterwards- afterwards, afterwards. afterwards; afterwards: afterwards? afterwards!'
  - 'afws) afws] afws} afws'' afws" afws- afws, afws. afws; afws: afws? afws!'
  - xfail: ...

- - 'afterwards@ afterwards# afterwards$ afterwards% afterwards^ afterwards& afterwards* afterwards( afterwards_ afterwards= afterwards+ afterwards[ afterwards{ afterwards\\ afterwards| afterwards< afterwards> afterwards` afterwards~ afterwards/'
  - 'afws@ afws# afws$ afws% afws^ afws& afws* afws( afws_ afws= afws+ afws[ afws{ afws\\ afws| afws< afws> afws` afws~ afws/'
  - xfail: contraction followed by special characters is ignored

- - 'afws) afws] afws} afws'' afws" afws- afws, afws. afws; afws: afws? afws! afws@ afws# afws$ afws% afws^ afws& afws* afws( afws_ afws= afws+ afws[ afws{ afws\\ afws| afws< afws> afws` afws~ afws/'
  - ';afws) ;afws] ;afws} ;afws'' ;afws" ;afws- ;afws, ;afws. ;afws; ;afws: ;afws? ;afws! ;afws@ ;afws# ;afws$ ;afws% ;afws^ ;afws& ;afws* ;afws( ;afws_ ;afws= ;afws+ ;afws[ ;afws{ ;afws\\ ;afws| ;afws< ;afws> ;afws` ;afws~ ;afws/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afterwards-xl afterwards-([{''"xl afterwards-/xl afterwards-$xl'
  - 'afws-xl afws-([{''"xl afws-/xl afws-$xl'
  - xfail: ...

- - 'afterwards(xl afterwards[xl afterwards{xl afterwards''xl afterwards"xl afterwards=([{''"-xl afterwards([{''"-xl afterwards/-xl afterwards$-xl'
  - 'afws(xl afws[xl afws{xl afws''xl afws"xl afws=([{''"-xl afws([{''"-xl afws/-xl afws$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(again [again {again ''again "again -again'
  - '(ag [ag {ag ''ag "ag -ag'
  - xfail: ...

- - '!again @again #again $again %again ^again &again *again )again _again =again +again ]again }again \\again |again .again ,again ;again :again ?again <again >again `again ~again /again'
  - '!ag @ag #ag $ag %ag ^ag &ag *ag )ag _ag =ag +ag ]ag }ag \\ag |ag .ag ,ag ;ag :ag ?ag <ag >ag ?ag `ag ~ag /ag'
  - xfail: contraction following special characters is ignored

- - '(ag [ag {ag ''ag "ag -ag'
  - '(;ag [;ag {;ag '';ag ";ag -;ag'
  - xfail: ...

- - '!ag @ag #ag $ag %ag ^ag &ag *ag )ag _ag =ag +ag ]ag }ag \\ag |ag .ag ,ag ;ag :ag ?ag <ag >ag ?ag `ag ~ag /ag'
  - '!;ag @;ag #;ag $;ag %;ag ^;ag &;ag *;ag );ag _;ag =;ag +;ag ];ag };ag \\;ag |;ag .;ag ,;ag ;;ag :;ag ?;ag <;ag >;ag `;ag ~;ag /;ag'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-again xl-([{''"again xl/-again xl$-again'
  - 'xl-ag xl-([{''"ag xl/-ag xl$-ag'
  - xfail: ...

- - 'xl(again xl[again xl{again xl''again xl"again xl-=([{''"again'
  - 'xl(ag xl[ag xl{ag xl''ag xl"ag xl-=([{''"ag'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'again) again] again} again'' again" again- again, again. again; again: again? again!'
  - 'ag) ag] ag} ag'' ag" ag- ag, ag. ag; ag: ag? ag!'
  - xfail: ...

- - 'again@ again# again$ again% again^ again& again* again( again_ again= again+ again[ again{ again\\ again| again< again> again` again~ again/'
  - 'ag@ ag# ag$ ag% ag^ ag& ag* ag( ag_ ag= ag+ ag[ ag{ ag\\ ag| ag< ag> ag` ag~ ag/'
  - xfail: contraction followed by special characters is ignored

- - 'ag) ag] ag} ag'' ag" ag- ag, ag. ag; ag: ag? ag!'
  - ';ag) ;ag] ;ag} ;ag'' ;ag" ;ag- ;ag, ;ag. ;ag; ;ag: ;ag? ;ag!'
  - xfail: ...

- - 'ag@ ag# ag$ ag% ag^ ag& ag* ag( ag_ ag= ag+ ag[ ag{ ag\\ ag| ag< ag> ag` ag~ ag/'
  - ';ag@ ;ag# ;ag$ ;ag% ;ag^ ;ag& ;ag* ;ag( ;ag_ ;ag= ;ag+ ;ag[ ;ag{ ;ag\\ ;ag| ;ag< ;ag> ;ag` ;ag~ ;ag/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'again-xl again-([{''"xl again-/xl again-$xl'
  - 'ag-xl ag-([{''"xl ag-/xl ag-$xl'
  - xfail: ...

- - 'again(xl again[xl again{xl again''xl again"xl again=([{''"-xl again([{''"-xl again/-xl again$-xl'
  - 'ag(xl ag[xl ag{xl ag''xl ag"xl ag=([{''"-xl ag([{''"-xl ag/-xl ag$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(agains [agains {agains ''agains "agains -agains'
  - '(ags [ags {ags ''ags "ags -ags'
  - xfail: ...

- - '!agains @agains #agains $agains %agains ^agains &agains *agains )agains _agains =agains +agains ]agains }agains \\agains |agains .agains ,agains ;agains :agains ?agains <agains >agains `agains ~agains /agains'
  - '!ags @ags #ags $ags %ags ^ags &ags *ags )ags _ags =ags +ags ]ags }ags \\ags |ags .ags ,ags ;ags :ags ?ags <ags >ags ?ags `ags ~ags /ags'
  - xfail: contraction following special characters is ignored

- - 'ags  (ags [ags {ags ''ags "ags -ags !ags @ags #ags $ags %ags ^ags &ags *ags )ags _ags =ags +ags ]ags }ags \\ags |ags .ags ,ags ;ags :ags ?ags <ags >ags ?ags `ags ~ags /ags'
  - ';ags  (;ags [;ags {;ags '';ags ";ags -;ags !;ags @;ags #;ags $;ags %;ags ^;ags &;ags *;ags );ags _;ags =;ags +;ags ];ags };ags \\;ags |;ags .;ags ,;ags ;;ags :;ags ?;ags <;ags >;ags `;ags ~;ags /;ags'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-agains xl-([{''"agains xl/-agains xl$-agains'
  - 'xl-ags xl-([{''"ags xl/-ags xl$-ags'
  - xfail: ...

- - 'xl(agains xl[agains xl{agains xl''agains xl"agains xl-=([{''"agains'
  - 'xl(ags xl[ags xl{ags xl''ags xl"ags xl-=([{''"ags'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'agains) agains] agains} agains'' agains" agains- agains, agains. agains; agains: agains? agains!'
  - 'ags) ags] ags} ags'' ags" ags- ags, ags. ags; ags: ags? ags!'
  - xfail: ...

- - 'agains@ agains# agains$ agains% agains^ agains& agains* agains( agains_ agains= agains+ agains[ agains{ agains\\ agains| agains< agains> agains` agains~ agains/'
  - 'ags@ ags# ags$ ags% ags^ ags& ags* ags( ags_ ags= ags+ ags[ ags{ ags\\ ags| ags< ags> ags` ags~ ags/'
  - xfail: contraction followed by special characters is ignored

- - 'ags) ags] ags} ags'' ags" ags- ags, ags. ags; ags: ags? ags! ags@ ags# ags$ ags% ags^ ags& ags* ags( ags_ ags= ags+ ags[ ags{ ags\\ ags| ags< ags> ags` ags~ ags/'
  - ';ags) ;ags] ;ags} ;ags'' ;ags" ;ags- ;ags, ;ags. ;ags; ;ags: ;ags? ;ags! ;ags@ ;ags# ;ags$ ;ags% ;ags^ ;ags& ;ags* ;ags( ;ags_ ;ags= ;ags+ ;ags[ ;ags{ ;ags\\ ;ags| ;ags< ;ags> ;ags` ;ags~ ;ags/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'agains-xl agains-([{''"xl agains-/xl agains-$xl'
  - 'ags-xl ags-([{''"xl ags-/xl ags-$xl'
  - xfail: ...

- - 'agains(xl agains[xl agains{xl agains''xl agains"xl agains=([{''"-xl agains([{''"-xl agains/-xl agains$-xl'
  - 'ags(xl ags[xl ags{xl ags''xl ags"xl ags=([{''"-xl ags([{''"-xl ags/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(against [against {against ''against "against -against'
  - '(ag/ [ag/ {ag/ ''ag/ "ag/ -ag/'
  - xfail: ...

- - '!against @against #against $against %against ^against &against *against )against _against =against +against ]against }against \\against |against .against ,against ;against :against ?against <against >against `against ~against /against'
  - '!ag/ @ag/ #ag/ $ag/ %ag/ ^ag/ &ag/ *ag/ )ag/ _ag/ =ag/ +ag/ ]ag/ }ag/ \\ag/ |ag/ .ag/ ,ag/ ;ag/ :ag/ ?ag/ <ag/ >ag/ ?ag/ `ag/ ~ag/ /ag/'
  - xfail: contraction following special characters is ignored

- - 'xl-against xl-([{''"against xl/-against xl$-against'
  - 'xl-ag/ xl-([{''"ag/ xl/-ag/ xl$-ag/'
  - xfail: ...

- - 'xl(against xl[against xl{against xl''against xl"against xl-=([{''"against'
  - 'xl(ag/ xl[ag/ xl{ag/ xl''ag/ xl"ag/ xl-=([{''"ag/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'against) against] against} against'' against" against- against, against. against; against: against? against!'
  - 'ag/) ag/] ag/} ag/'' ag/" ag/- ag/, ag/. ag/; ag/: ag/? ag/!'
  - xfail: ...

- - 'against@ against# against$ against% against^ against& against* against( against_ against= against+ against[ against{ against\\ against| against< against> against` against~ against/'
  - 'ag/@ ag/# ag/$ ag/% ag/^ ag/& ag/* ag/( ag/_ ag/= ag/+ ag/[ ag/{ ag/\\ ag/| ag/< ag/> ag/` ag/~ ag//'
  - xfail: contraction followed by special characters is ignored

- - 'against-xl against-([{''"xl against-/xl against-$xl'
  - 'ag/-xl ag/-([{''"xl ag/-/xl ag/-$xl'
  - xfail: ...

- - 'against(xl against[xl against{xl against''xl against"xl against=([{''"-xl against([{''"-xl against/-xl against$-xl'
  - 'ag/(xl ag/[xl ag/{xl ag/''xl ag/"xl ag/=([{''"-xl ag/([{''"-xl ag//-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(almost [almost {almost ''almost "almost -almost'
  - '(alm [alm {alm ''alm "alm -alm'
  - xfail: ...

- - '!almost @almost #almost $almost %almost ^almost &almost *almost )almost _almost =almost +almost ]almost }almost \\almost |almost .almost ,almost ;almost :almost ?almost <almost >almost `almost ~almost /almost'
  - '!alm @alm #alm $alm %alm ^alm &alm *alm )alm _alm =alm +alm ]alm }alm \\alm |alm .alm ,alm ;alm :alm ?alm <alm >alm ?alm `alm ~alm /alm'
  - xfail: contraction following special characters is ignored

- - '(alm [alm {alm ''alm "alm -alm'
  - '(;alm [;alm {;alm '';alm ";alm -;alm'
  - xfail: ...

- - '!alm @alm #alm $alm %alm ^alm &alm *alm )alm _alm =alm +alm ]alm }alm \\alm |alm .alm ,alm ;alm :alm ?alm <alm >alm ?alm `alm ~alm /alm'
  - '!;alm @;alm #;alm $;alm %;alm ^;alm &;alm *;alm );alm _;alm =;alm +;alm ];alm };alm \\;alm |;alm .;alm ,;alm ;;alm :;alm ?;alm <;alm >;alm `;alm ~;alm /;alm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-almost xl-([{''"almost xl/-almost xl$-almost'
  - 'xl-alm xl-([{''"alm xl/-alm xl$-alm'
  - xfail: ...

- - 'xl(almost xl[almost xl{almost xl''almost xl"almost xl-=([{''"almost'
  - 'xl(alm xl[alm xl{alm xl''alm xl"alm xl-=([{''"alm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'almost) almost] almost} almost'' almost" almost- almost, almost. almost; almost: almost? almost!'
  - 'alm) alm] alm} alm'' alm" alm- alm, alm. alm; alm: alm? alm!'
  - xfail: ...

- - 'almost@ almost# almost$ almost% almost^ almost& almost* almost( almost_ almost= almost+ almost[ almost{ almost\\ almost| almost< almost> almost` almost~ almost/'
  - 'alm@ alm# alm$ alm% alm^ alm& alm* alm( alm_ alm= alm+ alm[ alm{ alm\\ alm| alm< alm> alm` alm~ alm/'
  - xfail: contraction followed by special characters is ignored

- - 'alm) alm] alm} alm'' alm" alm- alm, alm. alm; alm: alm? alm!'
  - ';alm) ;alm] ;alm} ;alm'' ;alm" ;alm- ;alm, ;alm. ;alm; ;alm: ;alm? ;alm!'
  - xfail: ...

- - 'alm@ alm# alm$ alm% alm^ alm& alm* alm( alm_ alm= alm+ alm[ alm{ alm\\ alm| alm< alm> alm` alm~ alm/'
  - ';alm@ ;alm# ;alm$ ;alm% ;alm^ ;alm& ;alm* ;alm( ;alm_ ;alm= ;alm+ ;alm[ ;alm{ ;alm\\ ;alm| ;alm< ;alm> ;alm` ;alm~ ;alm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'almost-xl almost-([{''"xl almost-/xl almost-$xl'
  - 'alm-xl alm-([{''"xl alm-/xl alm-$xl'
  - xfail: ...

- - 'almost(xl almost[xl almost{xl almost''xl almost"xl almost=([{''"-xl almost([{''"-xl almost/-xl almost$-xl'
  - 'alm(xl alm[xl alm{xl alm''xl alm"xl alm=([{''"-xl alm([{''"-xl alm/-xl alm$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(already [already {already ''already "already -already'
  - '(alr [alr {alr ''alr "alr -alr'
  - xfail: ...

- - '!already @already #already $already %already ^already &already *already )already _already =already +already ]already }already \\already |already .already ,already ;already :already ?already <already >already `already ~already /already'
  - '!alr @alr #alr $alr %alr ^alr &alr *alr )alr _alr =alr +alr ]alr }alr \\alr |alr .alr ,alr ;alr :alr ?alr <alr >alr `alr ~alr /alr'
  - xfail: contraction following special characters is ignored

- - '(alr [alr {alr ''alr "alr -alr'
  - '(;alr [;alr {;alr '';alr ";alr -;alr'
  - xfail: ...

- - '!alr @alr #alr $alr %alr ^alr &alr *alr )alr _alr =alr +alr ]alr }alr \\alr |alr .alr ,alr ;alr :alr ?alr <alr >alr `alr ~alr /alr'
  - '!;alr @;alr #;alr $;alr %;alr ^;alr &;alr *;alr );alr _;alr =;alr +;alr ];alr };alr \\;alr |;alr .;alr ,;alr ;;alr :;alr ?;alr <;alr >;alr `;alr ~;alr /;alr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-already xl-([{''"already xl/-already xl$-already'
  - 'xl-alr xl-([{''"alr xl/-alr xl$-alr'
  - xfail: ...

- - 'xl(already xl[already xl{already xl''already xl"already xl-=([{''"already'
  - 'xl(alr xl[alr xl{alr xl''alr xl"alr xl-=([{''"alr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'already) already] already} already'' already" already- already, already. already; already: already? already!'
  - 'alr) alr] alr} alr'' alr" alr- alr, alr. alr; alr: alr? alr!'
  - xfail: ...

- - 'already@ already# already$ already% already^ already& already* already( already_ already= already+ already[ already{ already\\ already| already< already> already` already~ already/'
  - 'alr@ alr# alr$ alr% alr^ alr& alr* alr( alr_ alr= alr+ alr[ alr{ alr\\ alr| alr< alr> alr` alr~ alr/'
  - xfail: contraction followed by special characters is ignored

- - 'alr) alr] alr} alr'' alr" alr- alr, alr. alr; alr: alr? alr!'
  - ';alr) ;alr] ;alr} ;alr'' ;alr" ;alr- ;alr, ;alr. ;alr; ;alr: ;alr? ;alr!'
  - xfail: ...

- - 'alr@ alr# alr$ alr% alr^ alr& alr* alr( alr_ alr= alr+ alr[ alr{ alr\\ alr| alr< alr> alr` alr~ alr/'
  - ';alr@ ;alr# ;alr$ ;alr% ;alr^ ;alr& ;alr* ;alr( ;alr_ ;alr= ;alr+ ;alr[ ;alr{ ;alr\\ ;alr| ;alr< ;alr> ;alr` ;alr~ ;alr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'already-xl already-([{''"xl already-/xl already-$xl'
  - 'alr-xl alr-([{''"xl alr-/xl alr-$xl'
  - xfail: ...

- - 'already(xl already[xl already{xl already''xl already"xl already=([{''"-xl already([{''"-xl already/-xl already$-xl'
  - 'alr(xl alr[xl alr{xl alr''xl alr"xl alr=([{''"-xl alr([{''"-xl alr/-xl alr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alreadys [alreadys {alreadys ''alreadys "alreadys -alreadys'
  - '(alrs [alrs {alrs ''alrs "alrs -alrs'
  - xfail: ...

- - '!alreadys @alreadys #alreadys $alreadys %alreadys ^alreadys &alreadys *alreadys )alreadys _alreadys =alreadys +alreadys ]alreadys }alreadys \\alreadys |alreadys .alreadys ,alreadys ;alreadys :alreadys ?alreadys <alreadys >alreadys `alreadys ~alreadys /alreadys'
  - '!alrs @alrs #alrs $alrs %alrs ^alrs &alrs *alrs )alrs _alrs =alrs +alrs ]alrs }alrs \\alrs |alrs .alrs ,alrs ;alrs :alrs ?alrs <alrs >alrs ?alrs `alrs ~alrs /alrs'
  - xfail: contraction following special characters is ignored

- - 'alrs (alrs [alrs {alrs ''alrs "alrs -alrs !alrs @alrs #alrs $alrs %alrs ^alrs &alrs *alrs )alrs _alrs =alrs +alrs ]alrs }alrs \\alrs |alrs .alrs ,alrs ;alrs :alrs ?alrs <alrs >alrs ?alrs `alrs ~alrs /alrs'
  - ';alrs (;alrs [;alrs {;alrs '';alrs ";alrs -;alrs !;alrs @;alrs #;alrs $;alrs %;alrs ^;alrs &;alrs *;alrs );alrs _;alrs =;alrs +;alrs ];alrs };alrs \\;alrs |;alrs .;alrs ,;alrs ;;alrs :;alrs ?;alrs <;alrs >;alrs `;alrs ~;alrs /;alrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alreadys xl-([{''"alreadys xl/-alreadys xl$-alreadys'
  - 'xl-alrs xl-([{''"alrs xl/-alrs xl$-alrs'
  - xfail: ...

- - 'xl(alreadys xl[alreadys xl{alreadys xl''alreadys xl"alreadys xl-=([{''"alreadys'
  - 'xl(alrs xl[alrs xl{alrs xl''alrs xl"alrs xl-=([{''"alrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alreadys) alreadys] alreadys} alreadys'' alreadys" alreadys- alreadys, alreadys. alreadys; alreadys: alreadys? alreadys!'
  - 'alrs) alrs] alrs} alrs'' alrs" alrs- alrs, alrs. alrs; alrs: alrs? alrs!'
  - xfail: ...

- - 'alreadys@ alreadys# alreadys$ alreadys% alreadys^ alreadys& alreadys* alreadys( alreadys_ alreadys= alreadys+ alreadys[ alreadys{ alreadys\\ alreadys| alreadys< alreadys> alreadys` alreadys~ alreadys/'
  - 'alrs@ alrs# alrs$ alrs% alrs^ alrs& alrs* alrs( alrs_ alrs= alrs+ alrs[ alrs{ alrs\\ alrs| alrs< alrs> alrs` alrs~ alrs/'
  - xfail: contraction followed by special characters is ignored

- - 'alrs) alrs] alrs} alrs'' alrs" alrs- alrs, alrs. alrs; alrs: alrs? alrs! alrs@ alrs# alrs$ alrs% alrs^ alrs& alrs* alrs( alrs_ alrs= alrs+ alrs[ alrs{ alrs\\ alrs| alrs< alrs> alrs` alrs~ alrs/'
  - ';alrs) ;alrs] ;alrs} ;alrs'' ;alrs" ;alrs- ;alrs, ;alrs. ;alrs; ;alrs: ;alrs? ;alrs! ;alrs@ ;alrs# ;alrs$ ;alrs% ;alrs^ ;alrs& ;alrs* ;alrs( ;alrs_ ;alrs= ;alrs+ ;alrs[ ;alrs{ ;alrs\\ ;alrs| ;alrs< ;alrs> ;alrs` ;alrs~ ;alrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alreadys-xl alreadys-([{''"xl alreadys-/xl alreadys-$xl'
  - 'alrs-xl alrs-([{''"xl alrs-/xl alrs-$xl'
  - xfail: ...

- - 'alreadys(xl alreadys[xl alreadys{xl alreadys''xl alreadys"xl alreadys=([{''"-xl alreadys([{''"-xl alreadys/-xl alreadys$-xl'
  - 'alrs(xl alrs[xl alrs{xl alrs''xl alrs"xl alrs=([{''"-xl alrs([{''"-xl alrs/-xl alrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(also [also {also ''also "also -also'
  - '(al [al {al ''al "al -al'
  - xfail: ...

- - '!also @also #also $also %also ^also &also *also )also _also =also +also ]also }also \\also |also .also ,also ;also :also ?also <also >also `also ~also /also'
  - '!al @al #al $al %al ^al &al *al )al _al =al +al ]al }al \\al |al .al ,al ;al :al ?al <al >al `al ~al /al'
  - xfail: contraction following special characters is ignored

- - '(al [al {al ''al "al -al'
  - '(;al [;al {;al '';al ";al -;al'
  - xfail: ...

- - '!al @al #al $al %al ^al &al *al )al _al =al +al ]al }al \\al |al .al ,al ;al :al ?al <al >al `al ~al /al'
  - '!;al @;al #;al $;al %;al ^;al &;al *;al );al _;al =;al +;al ];al };al \\;al |;al .;al ,;al ;;al :;al ?;al <;al >;al `;al ~;al /;al'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-also xl-([{''"also xl/-also xl$-also'
  - 'xl-al xl-([{''"al xl/-al xl$-al'
  - xfail: ...

- - 'xl(also xl[also xl{also xl''also xl"also xl-=([{''"also'
  - 'xl(al xl[al xl{al xl''al xl"al xl-=([{''"al'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'also) also] also} also'' also" also- also, also. also; also: also? also!'
  - 'al) al] al} al'' al" al- al, al. al; al: al? al!'
  - xfail: ...

- - 'also@ also# also$ also% also^ also& also* also( also_ also= also+ also[ also{ also\\ also| also< also> also` also~ also/'
  - 'al@ al# al$ al% al^ al& al* al( al_ al= al+ al[ al{ al\\ al| al< al> al` al~ al/'
  - xfail: contraction followed by special characters is ignored

- - 'al) al] al} al'' al" al- al, al. al; al: al? al!'
  - ';al) ;al] ;al} ;al'' ;al" ;al- ;al, ;al. ;al; ;al: ;al? ;al!'
  - xfail: ...

- - 'al@ al# al$ al% al^ al& al* al( al_ al= al+ al[ al{ al\\ al| al< al> al` al~ al/'
  - ';al@ ;al# ;al$ ;al% ;al^ ;al& ;al* ;al( ;al_ ;al= ;al+ ;al[ ;al{ ;al\\ ;al| ;al< ;al> ;al` ;al~ ;al/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'also-xl also-([{''"xl also-/xl also-$xl'
  - 'al-xl al-([{''"xl al-/xl al-$xl'
  - xfail: ...

- - 'also(xl also[xl also{xl also''xl also"xl also=([{''"-xl also([{''"-xl also/-xl also$-xl'
  - 'al(xl al[xl al{xl al''xl al"xl al=([{''"-xl al([{''"-xl al/-xl al$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alsos [alsos {alsos ''alsos "alsos -alsos'
  - '(als [als {als ''als "als -als'
  - xfail: ...

- - '!alsos @alsos #alsos $alsos %alsos ^alsos &alsos *alsos )alsos _alsos =alsos +alsos ]alsos }alsos \\alsos |alsos .alsos ,alsos ;alsos :alsos ?alsos <alsos >alsos `alsos ~alsos /alsos'
  - '!als @als #als $als %als ^als &als *als )als _als =als +als ]als }als \\als |als .als ,als ;als :als ?als <als >als ?als `als ~als /als'
  - xfail: contraction following special characters is ignored

- - 'als (als [als {als ''als "als -als !als @als #als $als %als ^als &als *als )als _als =als +als ]als }als \\als |als .als ,als ;als :als ?als <als >als ?als `als ~als /als'
  - ';als (;als [;als {;als '';als ";als -;als !;als @;als #;als $;als %;als ^;als &;als *;als );als _;als =;als +;als ];als };als \\;als |;als .;als ,;als ;;als :;als ?;als <;als >;als `;als ~;als /;als'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alsos xl-([{''"alsos xl/-alsos xl$-alsos'
  - 'xl-als xl-([{''"als xl/-als xl$-als'
  - xfail: ...

- - 'xl(alsos xl[alsos xl{alsos xl''alsos xl"alsos xl-=([{''"alsos'
  - 'xl(als xl[als xl{als xl''als xl"als xl-=([{''"als'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alsos) alsos] alsos} alsos'' alsos" alsos- alsos, alsos. alsos; alsos: alsos? alsos!'
  - 'als) als] als} als'' als" als- als, als. als; als: als? als!'
  - xfail: ...

- - 'alsos@ alsos# alsos$ alsos% alsos^ alsos& alsos* alsos( alsos_ alsos= alsos+ alsos[ alsos{ alsos\\ alsos| alsos< alsos> alsos` alsos~ alsos/'
  - 'als@ als# als$ als% als^ als& als* als( als_ als= als+ als[ als{ als\\ als| als< als> als` als~ als/'
  - xfail: contraction followed by special characters is ignored

- - 'als) als] als} als'' als" als- als, als. als; als: als? als! als@ als# als$ als% als^ als& als* als( als_ als= als+ als[ als{ als\\ als| als< als> als` als~ als/'
  - ';als) ;als] ;als} ;als'' ;als" ;als- ;als, ;als. ;als; ;als: ;als? ;als! ;als@ ;als# ;als$ ;als% ;als^ ;als& ;als* ;als( ;als_ ;als= ;als+ ;als[ ;als{ ;als\\ ;als| ;als< ;als> ;als` ;als~ ;als/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alsos-xl alsos-([{''"xl alsos-/xl alsos-$xl'
  - 'als-xl als-([{''"xl als-/xl als-$xl'
  - xfail: ...

- - 'alsos(xl alsos[xl alsos{xl alsos''xl alsos"xl alsos=([{''"-xl alsos([{''"-xl alsos/-xl alsos$-xl'
  - 'als(xl als[xl als{xl als''xl als"xl als=([{''"-xl als([{''"-xl als/-xl als$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(although [although {although ''although "although -although'
  - '(al? [al? {al? ''al? "al? -al?'
  - xfail: ...

- - '!although @although #although $although %although ^although &although *although )although _although =although +although ]although }although \\although |although .although ,although ;although :although ?although <although >although `although ~although /although'
  - '!al? @al? #al? $al? %al? ^al? &al? *al? )al? _al? =al? +al? ]al? }al? \\al? |al? .al? ,al? ;al? :al? ?al? <al? >al? `al? ~al? /al?'
  - xfail: contraction following special characters is ignored

- - '(alth [alth {alth ''alth "alth -alth'
  - '(alth [alth {alth ''alth "alth -alth'
  - xfail: ...

- - '!alth @alth #alth $alth %alth ^alth &alth *alth )alth _alth =alth +alth ]alth eralth \\alth |alth .alth ,alth ;alth :alth ?alth <alth >alth `alth ~alth /alth'
  - '!alth @alth #alth $alth %alth ^alth &alth *alth )alth _alth =alth +alth ]alth eralth \\alth |alth .alth ,alth ;alth :alth ?alth <alth >alth `alth ~alth /alth'
  - xfail: non-contraction of "alth" conflicts witcv contraction of "although"

- - 'xl-although xl-([{''"although xl/-although xl$-although'
  - 'xl-al? xl-([{''"al? xl/-al? xl$-al?'
  - xfail: ...

- - 'xl(although xl[although xl{although xl''although xl"although xl-=([{''"although'
  - 'xl(al? xl[al? xl{al? xl''al? xl"al? xl-=([{''"al?'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'although) although] although} although'' although" although- although, although. although; although: although? although!'
  - 'al?) al?] al?} al?'' al?" al?- al?, al?. al?; al?: al?? al?!'
  - xfail: ...

- - 'although@ although# although$ although% although^ although& although* although( although_ although= although+ although[ although{ although\\ although| although< although> although` although~ although/'
  - 'al?@ al?# al?$ al?% al?^ al?& al?* al?( al?_ al?= al?+ al?[ al?{ al?\\ al?| al?< al?> al?` al?~ al?/'
  - xfail: contraction followed by special characters is ignored

- - 'alth) alth] alth} alth'' alth" alth- alth, alth. alth; alth: alth? alth!'
  - 'alth) alth] alth} alth'' alth" alth- alth, alth. alth; alth: alth? alth!'
  - xfail: ...

- - 'alth@ alth# alth$ alth% alth^ alth& alth* alth( alth_ alth= alth+ alth[ alth{ alth\\ alth| alth< alth> alth` alth~ alth/'
  - 'alth@ alth# alth$ alth% alth^ alth& alth* alth( alth_ alth= alth+ alth[ alth{ alth\\ alth| alth< alth> alth` alth~ alth/'
  - xfail: non-contraction of "alth" conflicts with contraction of "although"

- - 'although-xl although-([{''"xl although-/xl although-$xl'
  - 'al?-xl al?-([{''"xl al?-/xl al?-$xl'
  - xfail: ...

- - 'although(xl although[xl although{xl although''xl although"xl although=([{''"-xl although([{''"-xl although/-xl although$-xl'
  - 'al?(xl al?[xl al?{xl al?''xl al?"xl al?=([{''"-xl al?([{''"-xl al?/-xl al?$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(althoughs [althoughs {althoughs ''althoughs "althoughs -althoughs'
  - '(al?s [al?s {al?s ''al?s "al?s -al?s'
  - xfail: ...

- - '!althoughs @althoughs #althoughs $althoughs %althoughs ^althoughs &althoughs *althoughs )althoughs _althoughs =althoughs +althoughs ]althoughs }althoughs \\althoughs |althoughs .althoughs ,althoughs ;althoughs :althoughs ?althoughs <althoughs >althoughs'
  - '!al?s @al?s #al?s $al?s %al?s ^al?s &al?s *al?s )al?s _al?s =al?s +al?s ]al?s }al?s \\al?s |al?s .al?s ,al?s ;al?s :al?s ?al?s <al?s >al?s'
  - xfail: contraction following special characters is ignored

- - '`althoughs ~althoughs /althoughs'
  - '`al?s ~al?s /al?s'
  - xfail: contraction following special characters is ignored

- - 'alths (alths [alths {alths ''alths "alths -alths !alths @alths #alths $alths %alths ^alths &alths *alths )alths _alths =alths +alths ]alths eralths \\alths |alths .alths ,alths ;alths :alths ?alths <alths >alths `alths ~alths /alths'
  - 'alths (alths [alths {alths ''alths "alths -alths !alths @alths #alths $alths %alths ^alths &alths *alths )alths _alths =alths +alths ]alths eralths \\alths |alths .alths ,alths ;alths :alths ?alths <alths >alths `alths ~alths /alths'
  - xfail: non-contraction of "alths" conflicts witcv contraction of "althsoughs"

- - 'xl-althoughs xl-([{''"althoughs xl/-althoughs xl$-althoughs'
  - 'xl-al?s xl-([{''"al?s xl/-al?s xl$-al?s'
  - xfail: ...

- - 'xl(althoughs xl[althoughs xl{althoughs xl''althoughs xl"althoughs xl-=([{''"althoughs'
  - 'xl(al?s xl[al?s xl{al?s xl''al?s xl"al?s xl-=([{''"al?s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'althoughs) althoughs] althoughs} althoughs'' althoughs" althoughs- althoughs, althoughs. althoughs; althoughs: althoughs? althoughs!'
  - 'al?s) al?s] al?s} al?s'' al?s" al?s- al?s, al?s. al?s; al?s: al?s? al?s!'
  - xfail: ...

- - 'althoughs@ althoughs# althoughs$ althoughs% althoughs^ althoughs& althoughs* althoughs( althoughs_ althoughs= althoughs+ althoughs[ althoughs{ althoughs\\ althoughs| althoughs< althoughs> althoughs` althoughs~ althoughs/'
  - 'al?s@ al?s# al?s$ al?s% al?s^ al?s& al?s* al?s( al?s_ al?s= al?s+ al?s[ al?s{ al?s\\ al?s| al?s< al?s> al?s` al?s~ al?s/'
  - xfail: contraction followed by special characters is ignored

- - 'alths) alths] alths} alths'' alths" alths- alths, alths. alths; alths: alths? alths! alths@ alths# alths$ alths% alths^ alths& alths* alths( alths_ alths= alths+ alths[ alths{ alths\\ alths| alths< alths> alths` alths~ alths/'
  - 'alths) alths] alths} alths'' alths" alths- alths, alths. alths; alths: alths? alths! alths@ alths# alths$ alths% alths^ alths& alths* alths( alths_ alths= alths+ alths[ alths{ alths\\ alths| alths< alths> alths` alths~ alths/'
  - xfail: non-contraction of "alths" conflicts with contraction of "althoughs"

- - 'althoughs-xl althoughs-([{''"xl althoughs-/xl althoughs-$xl'
  - 'al?s-xl al?s-([{''"xl al?s-/xl al?s-$xl'
  - xfail: ...

- - 'althoughs(xl althoughs[xl althoughs{xl althoughs''xl althoughs"xl althoughs=([{''"-xl althoughs([{''"-xl althoughs/-xl althoughs$-xl'
  - 'al?s(xl al?s[xl al?s{xl al?s''xl al?s"xl al?s=([{''"-xl al?s([{''"-xl al?s/-xl al?s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(altogether [altogether {altogether ''altogether "altogether -altogether'
  - '(alt [alt {alt ''alt "alt -alt'
  - xfail: ...

- - '!altogether @altogether #altogether $altogether %altogether ^altogether &altogether *altogether )altogether _altogether =altogether +altogether ]altogether }altogether \\altogether |altogether .altogether ,altogether ;altogether :altogether ?altogether'
  - '!alt @alt #alt $alt %alt ^alt &alt *alt )alt _alt =alt +alt ]alt }alt \\alt |alt .alt ,alt ;alt :alt ?alt'
  - xfail: contraction following special characters is ignored

- - '<altogether >altogether `altogether ~altogether /altogether'
  - '<alt >alt `alt ~alt /alt'
  - xfail: contraction following special characters is ignored

- - '(alt [alt {alt ''alt "alt -alt'
  - '(;alt [;alt {;alt '';alt ";alt -;alt'
  - xfail: ...

- - '!alt @alt #alt $alt %alt ^alt &alt *alt )alt _alt =alt +alt ]alt }alt \\alt |alt .alt ,alt ;alt :alt ?alt <alt >alt ?alt `alt ~alt /alt'
  - '!;alt @;alt #;alt $;alt %;alt ^;alt &;alt *;alt );alt _;alt =;alt +;alt ];alt };alt \\;alt |;alt .;alt ,;alt ;;alt :;alt ?;alt <;alt >;alt `;alt ~;alt /;alt'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-altogether xl-([{''"altogether xl/-altogether xl$-altogether'
  - 'xl-alt xl-([{''"alt xl/-alt xl$-alt'
  - xfail: ...

- - 'xl(altogether xl[altogether xl{altogether xl''altogether xl"altogether xl-=([{''"altogether'
  - 'xl(alt xl[alt xl{alt xl''alt xl"alt xl-=([{''"alt'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'altogether) altogether] altogether} altogether'' altogether" altogether- altogether, altogether. altogether; altogether: altogether? altogether!'
  - 'alt) alt] alt} alt'' alt" alt- alt, alt. alt; alt: alt? alt!'
  - xfail: ...

- - 'altogether@ altogether# altogether$ altogether% altogether^ altogether& altogether* altogether( altogether_ altogether= altogether+ altogether[ altogether{ altogether\\ altogether| altogether< altogether> altogether` altogeth'
  - 'alt@ alt# alt$ alt% alt^ alt& alt* alt( alt_ alt= alt+ alt[ alt{ alt\\ alt| alt< alt> alt` alt~ alt/'
  - xfail: contraction followed by special characters is ignored

- - 'alt) alt] alt} alt'' alt" alt- alt, alt. alt; alt: alt? alt!'
  - ';alt) ;alt] ;alt} ;alt'' ;alt" ;alt- ;alt, ;alt. ;alt; ;alt: ;alt? ;alt!'
  - xfail: ...

- - 'alt@ alt# alt$ alt% alt^ alt& alt* alt( alt_ alt= alt+ alt[ alt{ alt\\ alt| alt< alt> alt` alt~ alt/'
  - ';alt@ ;alt# ;alt$ ;alt% ;alt^ ;alt& ;alt* ;alt( ;alt_ ;alt= ;alt+ ;alt[ ;alt{ ;alt\\ ;alt| ;alt< ;alt> ;alt` ;alt~ ;alt/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'altogether-xl altogether-([{''"xl altogether-/xl altogether-$xl'
  - 'alt-xl alt-([{''"xl alt-/xl alt-$xl'
  - xfail: ...

- - 'altogether(xl altogether[xl altogether{xl altogether''xl altogether"xl altogether=([{''"-xl altogether([{''"-xl altogether/-xl altogether$-xl'
  - 'alt(xl alt[xl alt{xl alt''xl alt"xl alt=([{''"-xl alt([{''"-xl alt/-xl alt$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(altogethers [altogethers {altogethers ''altogethers "altogethers -altogethers'
  - '(alts [alts {alts ''alts "alts -alts'
  - xfail: ...

- - '!altogethers @altogethers #altogethers $altogethers %altogethers ^altogethers &altogethers *altogethers )altogethers _altogethers =altogethers +altogethers ]altogethers }altogethers \\altogethers |altogethers .altogethers ,altogethers ;altogethers :altogethers'
  - '!alts @alts #alts $alts %alts ^alts &alts *alts )alts _alts =alts +alts ]alts }alts \\alts |alts .alts ,alts ;alts :alts'
  - xfail: contraction following special characters is ignored

- - '?altogethers <altogethers >altogethers `altogethers ~altogethers /altogethers'
  - '?alts <alts >alts `alts ~alts /alts'
  - xfail: contraction following special characters is ignored

- - 'alts (alts [alts {alts ''alts "alts -alts !alts @alts #alts $alts %alts ^alts &alts *alts )alts _alts =alts +alts ]alts }alts \\alts |alts .alts ,alts ;alts :alts ?alts <alts >alts ?alts `alts ~alts /alts'
  - ';alts (;alts [;alts {;alts '';alts ";alts -;alts !;alts @;alts #;alts $;alts %;alts ^;alts &;alts *;alts );alts _;alts =;alts +;alts ];alts };alts \\;alts |;alts .;alts ,;alts ;;alts :;alts ?;alts <;alts >;alts `;alts ~;alts /;alts'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-altogethers xl-([{''"altogethers xl/-altogethers xl$-altogethers'
  - 'xl-alts xl-([{''"alts xl/-alts xl$-alts'
  - xfail: ...

- - 'xl(altogethers xl[altogethers xl{altogethers xl''altogethers xl"altogethers xl-=([{''"altogethers'
  - 'xl(alts xl[alts xl{alts xl''alts xl"alts xl-=([{''"alts'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'altogethers) altogethers] altogethers} altogethers'' altogethers" altogethers- altogethers, altogethers. altogethers; altogethers: altogethers? altogethers!'
  - 'alts) alts] alts} alts'' alts" alts- alts, alts. alts; alts: alts? alts!'
  - xfail: ...

- - 'altogethers@ altogethers# altogethers$ altogethers% altogethers^ altogethers& altogethers* altogethers( altogethers_ altogethers= altogethers+ altogethers[ altogethers{ altogethers\\ altogethers| altogethers< altogethers> altogethers` altogeth'
  - 'alts@ alts# alts$ alts% alts^ alts& alts* alts( alts_ alts= alts+ alts[ alts{ alts\\ alts| alts< alts> alts` alts~ alts/'
  - xfail: contraction followed by special characters is ignored

- - 'alts) alts] alts} alts'' alts" alts- alts, alts. alts; alts: alts? alts! alts@ alts# alts$ alts% alts^ alts& alts* alts( alts_ alts= alts+ alts[ alts{ alts\\ alts| alts< alts> alts` alts~ alts/'
  - ';alts) ;alts] ;alts} ;alts'' ;alts" ;alts- ;alts, ;alts. ;alts; ;alts: ;alts? ;alts! ;alts@ ;alts# ;alts$ ;alts% ;alts^ ;alts& ;alts* ;alts( ;alts_ ;alts= ;alts+ ;alts[ ;alts{ ;alts\\ ;alts| ;alts< ;alts> ;alts` ;alts~ ;alts/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'altogethers-xl altogethers-([{''"xl altogethers-/xl altogethers-$xl'
  - 'alts-xl alts-([{''"xl alts-/xl alts-$xl'
  - xfail: ...

- - 'altogethers(xl altogethers[xl altogethers{xl altogethers''xl altogethers"xl altogethers=([{''"-xl altogethers([{''"-xl altogethers/-xl altogethers$-xl'
  - 'alts(xl alts[xl alts{xl alts''xl alts"xl alts=([{''"-xl alts([{''"-xl alts/-xl alts$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(always [always {always ''always "always -always'
  - '(alw [alw {alw ''alw "alw -alw'
  - xfail: ...

- - '!always @always #always $always %always ^always &always *always )always _always =always +always ]always }always \\always |always .always ,always ;always :always ?always <always >always `always ~always /always'
  - '!alw @alw #alw $alw %alw ^alw &alw *alw )alw _alw =alw +alw ]alw }alw \\alw |alw .alw ,alw ;alw :alw ?alw <alw >alw ?alw `alw ~alw /alw'
  - xfail: contraction following special characters is ignored

- - '(alw [alw {alw ''alw "alw -alw'
  - '(;alw [;alw {;alw '';alw ";alw -;alw'
  - xfail: ...

- - '!alw @alw #alw $alw %alw ^alw &alw *alw )alw _alw =alw +alw ]alw }alw \\alw |alw .alw ,alw ;alw :alw ?alw <alw >alw ?alw `alw ~alw /alw'
  - '!;alw @;alw #;alw $;alw %;alw ^;alw &;alw *;alw );alw _;alw =;alw +;alw ];alw };alw \\;alw |;alw .;alw ,;alw ;;alw :;alw ?;alw <;alw >;alw `;alw ~;alw /;alw'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-always xl-([{''"always xl/-always xl$-always'
  - 'xl-alw xl-([{''"alw xl/-alw xl$-alw'
  - xfail: ...

- - 'xl(always xl[always xl{always xl''always xl"always xl-=([{''"always'
  - 'xl(alw xl[alw xl{alw xl''alw xl"alw xl-=([{''"alw'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'always) always] always} always'' always" always- always, always. always; always: always? always!'
  - 'alw) alw] alw} alw'' alw" alw- alw, alw. alw; alw: alw? alw!'
  - xfail: ...

- - 'always@ always# always$ always% always^ always& always* always( always_ always= always+ always[ always{ always\\ always| always< always> always` always~ always/'
  - 'alw@ alw# alw$ alw% alw^ alw& alw* alw( alw_ alw= alw+ alw[ alw{ alw\\ alw| alw< alw> alw` alw~ alw/'
  - xfail: contraction followed by special characters is ignored

- - 'alw) alw] alw} alw'' alw" alw- alw, alw. alw; alw: alw? alw!'
  - ';alw) ;alw] ;alw} ;alw'' ;alw" ;alw- ;alw, ;alw. ;alw; ;alw: ;alw? ;alw!'
  - xfail: ...

- - 'alw@ alw# alw$ alw% alw^ alw& alw* alw( alw_ alw= alw+ alw[ alw{ alw\\ alw| alw< alw> alw` alw~ alw/'
  - ';alw@ ;alw# ;alw$ ;alw% ;alw^ ;alw& ;alw* ;alw( ;alw_ ;alw= ;alw+ ;alw[ ;alw{ ;alw\\ ;alw| ;alw< ;alw> ;alw` ;alw~ ;alw/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'always-xl always-([{''"xl always-/xl always-$xl'
  - 'alw-xl alw-([{''"xl alw-/xl alw-$xl'
  - xfail: ...

- - 'always(xl always[xl always{xl always''xl always"xl always=([{''"-xl always([{''"-xl always/-xl always$-xl'
  - 'alw(xl alw[xl alw{xl alw''xl alw"xl alw=([{''"-xl alw([{''"-xl alw/-xl alw$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alwayss [alwayss {alwayss ''alwayss "alwayss -alwayss'
  - '(alws [alws {alws ''alws "alws -alws'
  - xfail: ...

- - '!alwayss @alwayss #alwayss $alwayss %alwayss ^alwayss &alwayss *alwayss )alwayss _alwayss =alwayss +alwayss ]alwayss }alwayss \\alwayss |alwayss .alwayss ,alwayss ;alwayss :alwayss ?alwayss <alwayss >alwayss `alwayss ~alwayss /alwayss'
  - '!alws @alws #alws $alws %alws ^alws &alws *alws )alws _alws =alws +alws ]alws }alws \\alws |alws .alws ,alws ;alws :alws ?alws <alws >alws ?alws `alws ~alws /alws'
  - xfail: contraction following special characters is ignored

- - 'alws (alws [alws {alws ''alws "alws -alws !alws @alws #alws $alws %alws ^alws &alws *alws )alws _alws =alws +alws ]alws }alws \\alws |alws .alws ,alws ;alws :alws ?alws <alws >alws ?alws `alws ~alws /alws'
  - ';alws (;alws [;alws {;alws '';alws ";alws -;alws !;alws @;alws #;alws $;alws %;alws ^;alws &;alws *;alws );alws _;alws =;alws +;alws ];alws };alws \\;alws |;alws .;alws ,;alws ;;alws :;alws ?;alws <;alws >;alws `;alws ~;alws /;alws'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alwayss xl-([{''"alwayss xl/-alwayss xl$-alwayss'
  - 'xl-alws xl-([{''"alws xl/-alws xl$-alws'
  - xfail: ...

- - 'xl(alwayss xl[alwayss xl{alwayss xl''alwayss xl"alwayss xl-=([{''"alwayss'
  - 'xl(alws xl[alws xl{alws xl''alws xl"alws xl-=([{''"alws'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alwayss) alwayss] alwayss} alwayss'' alwayss" alwayss- alwayss, alwayss. alwayss; alwayss: alwayss? alwayss!'
  - 'alws) alws] alws} alws'' alws" alws- alws, alws. alws; alws: alws? alws!'
  - xfail: ...

- - 'alwayss@ alwayss# alwayss$ alwayss% alwayss^ alwayss& alwayss* alwayss( alwayss_ alwayss= alwayss+ alwayss[ alwayss{ alwayss\\ alwayss| alwayss< alwayss> alwayss` alwayss~ alwayss/'
  - 'alws@ alws# alws$ alws% alws^ alws& alws* alws( alws_ alws= alws+ alws[ alws{ alws\\ alws| alws< alws> alws` alws~ alws/'
  - xfail: contraction followed by special characters is ignored

- - 'alws) alws] alws} alws'' alws" alws- alws, alws. alws; alws: alws? alws! alws@ alws# alws$ alws% alws^ alws& alws* alws( alws_ alws= alws+ alws[ alws{ alws\\ alws| alws< alws> alws` alws~ alws/'
  - ';alws) ;alws] ;alws} ;alws'' ;alws" ;alws- ;alws, ;alws. ;alws; ;alws: ;alws? ;alws! ;alws@ ;alws# ;alws$ ;alws% ;alws^ ;alws& ;alws* ;alws( ;alws_ ;alws= ;alws+ ;alws[ ;alws{ ;alws\\ ;alws| ;alws< ;alws> ;alws` ;alws~ ;alws/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alwayss-xl alwayss-([{''"xl alwayss-/xl alwayss-$xl'
  - 'alws-xl alws-([{''"xl alws-/xl alws-$xl'
  - xfail: ...

- - 'alwayss(xl alwayss[xl alwayss{xl alwayss''xl alwayss"xl alwayss=([{''"-xl alwayss([{''"-xl alwayss/-xl alwayss$-xl'
  - 'alws(xl alws[xl alws{xl alws''xl alws"xl alws=([{''"-xl alws([{''"-xl alws/-xl alws$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '!ar @ar #ar $ar %ar ^ar &ar *ar )ar _ar =ar +ar ]ar }ar \\ar |ar .ar ,ar ;ar :ar ?ar <ar >ar `ar ~ar /ar'
  - '!> @> #> $> %> ^> &> *> )> _> => +> ]> }> \\> |> .> ,> ;> :> ?> <> >> `> ~> />'
  - xfail: ...

- - 'ar (ar [ar {ar ''ar "ar -ar'
  - '> (> [> {> ''> "> ->'
  - xfail: contraction following special characters is ignored

- - 'xl(ar xl[ar xl{ar xl''ar xl"ar xl-=([{''"ar'
  - 'xl(> xl[> xl{> xl''> xl"> xl-=([{''">'
  - xfail: ...

- - 'xl-ar xl-([{''"ar xl/-ar xl$-ar'
  - 'xl-> xl-([{''"> xl/-> xl$->'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ar@ ar# ar$ ar% ar^ ar& ar* ar( ar_ ar= ar+ ar[ ar{ ar\\ ar| ar< ar> ar` ar~ ar/'
  - '>@ ># >$ >% >^ >& >* >( >_ >= >+ >[ >{ >\\ >| >< >> >` >~ >/'
  - xfail: ...

- - 'ar) ar] ar} ar'' ar" ar- ar, ar. ar; ar: ar? ar!'
  - '>) >] >} >'' >" >- >, >. >; >: >? >!'
  - xfail: contraction followed by special characters is ignored

- - 'ar(xl ar[xl ar{xl ar''xl ar"xl ar=([{''"-xl ar([{''"-xl ar/-xl ar$-xl'
  - '>(xl >[xl >{xl >''xl >"xl >=([{''"-xl >([{''"-xl >/-xl >$-xl'
  - xfail: ...

- - 'ar-xl ar-([{''"xl ar-/xl ar-$xl'
  - '>-xl >-([{''"xl >-/xl >-$xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(as [as {as ''as "as -as'
  - '(z [z {z ''z "z -z'
  - xfail: ...

- - '!as @as #as $as %as ^as &as *as )as _as =as +as ]as }as \\as |as .as ,as ;as :as ?as <as >as `as ~as /as'
  - '!z @z #z $z %z ^z &z *z )z _z =z +z ]z }z \\z |z .z ,z ;z :z ?z <z >z `z ~z /z'
  - xfail: contraction following special characters is ignored

- - '(z [z {z ''z "z -z'
  - '(;z [;z {;z '';z ";z -;z'
  - xfail: ...

- - '!z @z #z $z %z ^z &z *z )z _z =z +z ]z }z \\z |z .z ,z ;z :z ?z <z >z `z ~z /z'
  - '!;z @;z #;z $;z %;z ^;z &;z *;z );z _;z =;z +;z ];z };z \\;z |;z .;z ,;z ;;z :;z ?;z <;z >;z `;z ~;z /;z'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-as xl-([{''"as xl/-as xl$-as'
  - 'xl-z xl-([{''"z xl/-z xl$-z'
  - xfail: ...

- - 'xl(as xl[as xl{as xl''as xl"as xl-=([{''"as'
  - 'xl(z xl[z xl{z xl''z xl"z xl-=([{''"z'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'as) as] as} as'' as" as- as, as. as; as: as? as!'
  - 'z) z] z} z'' z" z- z, z. z; z: z? z!'
  - xfail: ...

- - 'as@ as# as$ as% as^ as& as* as( as_ as= as+ as[ as{ as\\ as| as< as> as` as~ as/'
  - 'z@ z# z$ z% z^ z& z* z( z_ z= z+ z[ z{ z\\ z| z< z> z` z~ z/'
  - xfail: contraction followed by special characters is ignored

- - 'z) z] z} z'' z" z- z, z. z; z: z? z!'
  - ';z) ;z] ;z} ;z'' ;z" ;z- ;z, ;z. ;z; ;z: ;z? ;z!'
  - xfail: ...

- - 'z@ z# z$ z% z^ z& z* z( z_ z= z+ z[ z{ z\\ z| z< z> z` z~ z/'
  - ';z@ ;z# ;z$ ;z% ;z^ ;z& ;z* ;z( ;z_ ;z= ;z+ ;z[ ;z{ ;z\\ ;z| ;z< ;z> ;z` ;z~ ;z/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'as-xl as-([{''"xl as-/xl as-$xl'
  - 'z-xl z-([{''"xl z-/xl z-$xl'
  - xfail: ...

- - 'as(xl as[xl as{xl as''xl as"xl as=([{''"-xl as([{''"-xl as/-xl as$-xl'
  - 'z(xl z[xl z{xl z''xl z"xl z=([{''"-xl z([{''"-xl z/-xl z$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(be [be {be ''be "be -be !be .be ,be ;be :be ?be'
  - '(2 [2 {2 ''be "be -be !be .be ,be ;be :be ?be'
  - xfail: ...

- - '*be =be +be @be #be $be %be ^be &be )be _be ]be }be \\be |be <be >be `be ~be /be'
  - '*2 =2 +2 @2 #2 $2 %2 ^2 &2 )2 _2 ]2 }2 \\2 |2 <2 >2 ?2 `2 ~2 /2'
  - xfail: contraction following special characters is ignored

- - 'xl(be xl[be xl{be'
  - 'xl(2 xl[2 xl{2'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'be) be] be} be'' be" be- be, be. be? be!'
  - '2) 2] 2} be'' be" be- be, be. be? be!'
  - xfail: ...

- - 'be; be: be@ be# be$ be% be^ be& be* be( be_ be= be+ be[ be{ be\\ be| be< be> be` be~ be/'
  - 'be; be: 2@ 2# 2$ 2% 2^ 2& 2* 2( 2_ 2= 2+ 2[ 2{ 2\\ 2| 2< 2> 2` 2~ 2/'
  - xfail: contraction followed by special characters is ignored

- - 'be(xl be[be be{xl'
  - '2(xl 2[xl'
  - xfail: ...

- - '(because [because {because ''because "because -because'
  - '(2c [2c {2c ''2c "2c -2c'
  - xfail: ...

- - '!because @because #because $because %because ^because &because *because )because _because =because +because ]because }because \\because |because .because ,because ;because :because ?because <because >because `because ~because /because'
  - '!2c @2c #2c $2c %2c ^2c &2c *2c )2c _2c =2c +2c ]2c }2c \\2c |2c .2c ,2c ;2c :2c ?2c <2c >2c `2c ~2c /2c'
  - xfail: contraction following special characters is ignored

- - 'xl-because xl-([{''"because xl/-because xl$-because'
  - 'xl-2c xl-([{''"2c xl/-2c xl$-2c'
  - xfail: ...

- - 'xl(because xl[because xl{because xl''because xl"because xl-=([{''"because'
  - 'xl(2c xl[2c xl{2c xl''2c xl"2c xl-=([{''"2c'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'because) because] because} because'' because" because- because, because. because; because: because? because!'
  - '2c) 2c] 2c} 2c'' 2c" 2c- 2c, 2c. 2c; 2c: 2c? 2c!'
  - xfail: ...

- - 'because@ because# because$ because% because^ because& because* because( because_ because= because+ because[ because{ because\\ because| because< because> because` because~ because/'
  - '2c@ 2c# 2c$ 2c% 2c^ 2c& 2c* 2c( 2c_ 2c= 2c+ 2c[ 2c{ 2c\\ 2c| 2c< 2c> 2c` 2c~ 2c/'
  - xfail: contraction followed by special characters is ignored

- - 'bec) bec] bec} bec'' bec" bec- bec, bec. bec; bec: bec? bec!'
  - 'bec) bec] bec} bec'' bec" bec- bec, bec. bec; bec: bec? bec!'
  - xfail: ...

- - 'bec@ bec# bec$ bec% bec^ bec& bec* bec( bec_ bec= bec+ bec[ bec{ bec\\ bec| bec< bec> bec` bec~ bec/'
  - 'bec@ bec# bec$ bec% bec^ bec& bec* bec( bec_ bec= bec+ bec[ bec{ bec\\ bec| bec< bec> bec` bec~ bec/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'because-xl because-([{''"xl because-/xl because-$xl'
  - '2c-xl 2c-([{''"xl 2c-/xl 2c-$xl'
  - xfail: ...

- - 'because(xl because[xl because{xl because''xl because"xl because=([{''"-xl because([{''"-xl because/-xl because$-xl'
  - '2c(xl 2c[xl 2c{xl 2c''xl 2c"xl 2c=([{''"-xl 2c([{''"-xl 2c/-xl 2c$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(becauses [becauses {becauses ''becauses "becauses -becauses'
  - '(2cs [2cs {2cs ''2cs "2cs -2cs'
  - xfail: ...

- - '!becauses @becauses #becauses $becauses %becauses ^becauses &becauses *becauses )becauses _becauses =becauses +becauses ]becauses }becauses \\becauses |becauses .becauses ,becauses ;becauses :becauses ?becauses <becauses >becauses `becauses ~becauses /becauses'
  - '!2cs @2cs #2cs $2cs %2cs ^2cs &2cs *2cs )2cs _2cs =2cs +2cs ]2cs }2cs \\2cs |2cs .2cs ,2cs ;2cs :2cs ?2cs <2cs >2cs `2cs ~2cs /2cs'
  - xfail: contraction following special characters is ignored

- - '!becs @becs #becs $becs %becs ^becs &becs *becs )becs _becs =becs +becs ]becs erbecs \\becs |becs .becs ,becs ;becs :becs ?becs <becs >becs `becs ~becs /becs'
  - '!becs @becs #becs $becs %becs ^becs &becs *becs )becs _becs =becs +becs ]becs erbecs \\becs |becs .becs ,becs ;becs :becs ?becs <becs >becs `becs ~becs /becs'
  - xfail: ...

- - 'becs (becs [becs {becs ''becs "becs -becs'
  - 'becs (becs [becs {becs ''becs "becs -becs'
  - xfail: non-contraction of "becs" conflicts witcv contraction of "becauses"

- - 'xl-becauses xl-([{''"becauses xl/-becauses xl$-becauses'
  - 'xl-2cs xl-([{''"2cs xl/-2cs xl$-2cs'
  - xfail: ...

- - 'xl(becauses xl[becauses xl{becauses xl''becauses xl"becauses xl-=([{''"becauses'
  - 'xl(2cs xl[2cs xl{2cs xl''2cs xl"2cs xl-=([{''"2cs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'becauses) becauses] becauses} becauses'' becauses" becauses- becauses, becauses. becauses; becauses: becauses? becauses!'
  - '2cs) 2cs] 2cs} 2cs'' 2cs" 2cs- 2cs, 2cs. 2cs; 2cs: 2cs? 2cs!'
  - xfail: ...

- - 'becauses@ becauses# becauses$ becauses% becauses^ becauses& becauses* becauses( becauses_ becauses= becauses+ becauses[ becauses{ becauses\\ becauses| becauses< becauses> becauses` becauses~ becauses/'
  - '2cs@ 2cs# 2cs$ 2cs% 2cs^ 2cs& 2cs* 2cs( 2cs_ 2cs= 2cs+ 2cs[ 2cs{ 2cs\\ 2cs| 2cs< 2cs> 2cs` 2cs~ 2cs/'
  - xfail: contraction followed by special characters is ignored

- - 'becs) becs] becs} becs'' becs" becs- becs, becs. becs; becs: becs? becs! becs@ becs# becs$ becs% becs^ becs& becs* becs( becs_ becs= becs+ becs[ becs{ becs\\ becs| becs< becs> becs` becs~ becs/'
  - 'becs) becs] becs} becs'' becs" becs- becs, becs. becs; becs: becs? becs! becs@ becs# becs$ becs% becs^ becs& becs* becs( becs_ becs= becs+ becs[ becs{ becs\\ becs| becs< becs> becs` becs~ becs/'
  - xfail: non-contraction of "becs" conflicts with contraction of "becauses"

- - 'becauses-xl becauses-([{''"xl becauses-/xl becauses-$xl'
  - '2cs-xl 2cs-([{''"xl 2cs-/xl 2cs-$xl'
  - xfail: ...

- - 'becauses(xl becauses[xl becauses{xl becauses''xl becauses"xl becauses=([{''"-xl becauses([{''"-xl becauses/-xl becauses$-xl'
  - '2cs(xl 2cs[xl 2cs{xl 2cs''xl 2cs"xl 2cs=([{''"-xl 2cs([{''"-xl 2cs/-xl 2cs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(before [before {before ''before "before -before'
  - '(2f [2f {2f ''2f "2f -2f'
  - xfail: ...

- - '!before @before #before $before %before ^before &before *before )before _before =before +before ]before }before \\before |before .before ,before ;before :before ?before <before >before `before ~before /before'
  - '!2f @2f #2f $2f %2f ^2f &2f *2f )2f _2f =2f +2f ]2f }2f \\2f |2f .2f ,2f ;2f :2f ?2f <2f >2f ?2f `2f ~2f /2f'
  - xfail: contraction following special characters is ignored

- - 'xl-before xl-([{''"before xl/-before xl$-before'
  - 'xl-2f xl-([{''"2f xl/-2f xl$-2f'
  - xfail: ...

- - 'xl(before xl[before xl{before xl''before xl"before xl-=([{''"before'
  - 'xl(2f xl[2f xl{2f xl''2f xl"2f xl-=([{''"2f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'before) before] before} before'' before" before- before, before. before; before: before? before!'
  - '2f) 2f] 2f} 2f'' 2f" 2f- 2f, 2f. 2f; 2f: 2f? 2f!'
  - xfail: ...

- - 'before@ before# before$ before% before^ before& before* before( before_ before= before+ before[ before{ before\\ before| before< before> before` before~ before/'
  - '2f@ 2f# 2f$ 2f% 2f^ 2f& 2f* 2f( 2f_ 2f= 2f+ 2f[ 2f{ 2f\\ 2f| 2f< 2f> 2f` 2f~ 2f/'
  - xfail: contraction followed by special characters is ignored

- - 'bef) bef] bef} bef'' bef" bef- bef, bef. bef; bef: bef? bef!'
  - 'bef) bef] bef} bef'' bef" bef- bef, bef. bef; bef: bef? bef!'
  - xfail: ...

- - 'bef@ bef# bef$ bef% bef^ bef& bef* bef( bef_ bef= bef+ bef[ bef{ bef\\ bef| bef< bef> bef` bef~ bef/'
  - 'bef@ bef# bef$ bef% bef^ bef& bef* bef( bef_ bef= bef+ bef[ bef{ bef\\ bef| bef< bef> bef` bef~ bef/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'before-xl before-([{''"xl before-/xl before-$xl'
  - '2f-xl 2f-([{''"xl 2f-/xl 2f-$xl'
  - xfail: ...

- - 'before(xl before[xl before{xl before''xl before"xl before=([{''"-xl before([{''"-xl before/-xl before$-xl'
  - '2f(xl 2f[xl 2f{xl 2f''xl 2f"xl 2f=([{''"-xl 2f([{''"-xl 2f/-xl 2f$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(befores [befores {befores ''befores "befores -befores'
  - '(2fs [2fs {2fs ''2fs "2fs -2fs'
  - xfail: ...

- - '!befores @befores #befores $befores %befores ^befores &befores *befores )befores _befores =befores +befores ]befores }befores \\befores |befores .befores ,befores ;befores :befores ?befores <befores >befores `befores ~befores /befores'
  - '!2fs @2fs #2fs $2fs %2fs ^2fs &2fs *2fs )2fs _2fs =2fs +2fs ]2fs }2fs \\2fs |2fs .2fs ,2fs ;2fs :2fs ?2fs <2fs >2fs ?2fs `2fs ~2fs /2fs'
  - xfail: contraction following special characters is ignored

- - 'befs (befs [befs {befs ''befs "befs -befs'
  - 'befs (befs [befs {befs ''befs "befs -befs'
  - xfail: non-contraction of "befs" conflicts witcv contraction of "befores"

- - 'xl-befores xl-([{''"befores xl/-befores xl$-befores'
  - 'xl-2fs xl-([{''"2fs xl/-2fs xl$-2fs'
  - xfail: ...

- - 'xl(befores xl[befores xl{befores xl''befores xl"befores xl-=([{''"befores'
  - 'xl(2fs xl[2fs xl{2fs xl''2fs xl"2fs xl-=([{''"2fs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'befores) befores] befores} befores'' befores" befores- befores, befores. befores; befores: befores? befores!'
  - '2fs) 2fs] 2fs} 2fs'' 2fs" 2fs- 2fs, 2fs. 2fs; 2fs: 2fs? 2fs!'
  - xfail: ...

- - 'befores@ befores# befores$ befores% befores^ befores& befores* befores( befores_ befores= befores+ befores[ befores{ befores\\ befores| befores< befores> befores` befores~ befores/'
  - '2fs@ 2fs# 2fs$ 2fs% 2fs^ 2fs& 2fs* 2fs( 2fs_ 2fs= 2fs+ 2fs[ 2fs{ 2fs\\ 2fs| 2fs< 2fs> 2fs` 2fs~ 2fs/'
  - xfail: contraction followed by special characters is ignored

- - 'befs) befs] befs} befs'' befs" befs- befs, befs. befs; befs: befs? befs! befs@ befs# befs$ befs% befs^ befs& befs* befs( befs_ befs= befs+ befs[ befs{ befs\\ befs| befs< befs> befs` befs~ befs/'
  - 'befs) befs] befs} befs'' befs" befs- befs, befs. befs; befs: befs? befs! befs@ befs# befs$ befs% befs^ befs& befs* befs( befs_ befs= befs+ befs[ befs{ befs\\ befs| befs< befs> befs` befs~ befs/'
  - xfail: non-contraction of "befs" conflicts with contraction of "befores"

- - 'befores-xl befores-([{''"xl befores-/xl befores-$xl'
  - '2fs-xl 2fs-([{''"xl 2fs-/xl 2fs-$xl'
  - xfail: ...

- - 'befores(xl befores[xl befores{xl befores''xl befores"xl befores=([{''"-xl befores([{''"-xl befores/-xl befores$-xl'
  - '2fs(xl 2fs[xl 2fs{xl 2fs''xl 2fs"xl 2fs=([{''"-xl 2fs([{''"-xl 2fs/-xl 2fs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(behind [behind {behind ''behind "behind -behind'
  - '(2h [2h {2h ''2h "2h -2h'
  - xfail: ...

- - '!behind @behind #behind $behind %behind ^behind &behind *behind )behind _behind =behind +behind ]behind }behind \\behind |behind .behind ,behind ;behind :behind ?behind <behind >behind `behind ~behind /behind'
  - '!2h @2h #2h $2h %2h ^2h &2h *2h )2h _2h =2h +2h ]2h }2h \\2h |2h .2h ,2h ;2h :2h ?2h <2h >2h ?2h `2h ~2h /2h'
  - xfail: contraction following special characters is ignored

- - 'xl-behind xl-([{''"behind xl/-behind xl$-behind'
  - 'xl-2h xl-([{''"2h xl/-2h xl$-2h'
  - xfail: ...

- - 'xl(behind xl[behind xl{behind xl''behind xl"behind xl-=([{''"behind'
  - 'xl(2h xl[2h xl{2h xl''2h xl"2h xl-=([{''"2h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'behind) behind] behind} behind'' behind" behind- behind, behind. behind; behind: behind? behind!'
  - '2h) 2h] 2h} 2h'' 2h" 2h- 2h, 2h. 2h; 2h: 2h? 2h!'
  - xfail: ...

- - 'behind@ behind# behind$ behind% behind^ behind& behind* behind( behind_ behind= behind+ behind[ behind{ behind\\ behind| behind< behind> behind` behind~ behind/'
  - '2h@ 2h# 2h$ 2h% 2h^ 2h& 2h* 2h( 2h_ 2h= 2h+ 2h[ 2h{ 2h\\ 2h| 2h< 2h> 2h` 2h~ 2h/'
  - xfail: contraction followed by special characters is ignored

- - 'beh) beh] beh} beh'' beh" beh- beh, beh. beh; beh: beh? beh!'
  - 'beh) beh] beh} beh'' beh" beh- beh, beh. beh; beh: beh? beh!'
  - xfail: ...

- - 'beh@ beh# beh$ beh% beh^ beh& beh* beh( beh_ beh= beh+ beh[ beh{ beh\\ beh| beh< beh> beh` beh~ beh/'
  - 'beh@ beh# beh$ beh% beh^ beh& beh* beh( beh_ beh= beh+ beh[ beh{ beh\\ beh| beh< beh> beh` beh~ beh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'behind-xl behind-([{''"xl behind-/xl behind-$xl'
  - '2h-xl 2h-([{''"xl 2h-/xl 2h-$xl'
  - xfail: ...

- - 'behind(xl behind[xl behind{xl behind''xl behind"xl behind=([{''"-xl behind([{''"-xl behind/-xl behind$-xl'
  - '2h(xl 2h[xl 2h{xl 2h''xl 2h"xl 2h=([{''"-xl 2h([{''"-xl 2h/-xl 2h$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(behinds [behinds {behinds ''behinds "behinds -behinds'
  - '(2hs [2hs {2hs ''2hs "2hs -2hs'
  - xfail: ...

- - '!behinds @behinds #behinds $behinds %behinds ^behinds &behinds *behinds )behinds _behinds =behinds +behinds ]behinds }behinds \\behinds |behinds .behinds ,behinds ;behinds :behinds ?behinds <behinds >behinds `behinds ~behinds /behinds'
  - '!2hs @2hs #2hs $2hs %2hs ^2hs &2hs *2hs )2hs _2hs =2hs +2hs ]2hs }2hs \\2hs |2hs .2hs ,2hs ;2hs :2hs ?2hs <2hs >2hs ?2hs `2hs ~2hs /2hs'
  - xfail: contraction following special characters is ignored

- - '!behs @behs #behs $behs %behs ^behs &behs *behs )behs _behs =behs +behs ]behs erbehs \\behs |behs .behs ,behs ;behs :behs ?behs <behs >behs `behs ~behs /behs'
  - '!behs @behs #behs $behs %behs ^behs &behs *behs )behs _behs =behs +behs ]behs erbehs \\behs |behs .behs ,behs ;behs :behs ?behs <behs >behs `behs ~behs /behs'
  - xfail: ...

- - 'behs (behs [behs {behs ''behs "behs -behs'
  - 'behs (behs [behs {behs ''behs "behs -behs'
  - xfail: non-contraction of "behs" conflicts witcv contraction of "behinds"

- - 'xl-behinds xl-([{''"behinds xl/-behinds xl$-behinds'
  - 'xl-2hs xl-([{''"2hs xl/-2hs xl$-2hs'
  - xfail: ...

- - 'xl(behinds xl[behinds xl{behinds xl''behinds xl"behinds xl-=([{''"behinds'
  - 'xl(2hs xl[2hs xl{2hs xl''2hs xl"2hs xl-=([{''"2hs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'behinds) behinds] behinds} behinds'' behinds" behinds- behinds, behinds. behinds; behinds: behinds? behinds!'
  - '2hs) 2hs] 2hs} 2hs'' 2hs" 2hs- 2hs, 2hs. 2hs; 2hs: 2hs? 2hs!'
  - xfail: ...

- - 'behinds@ behinds# behinds$ behinds% behinds^ behinds& behinds* behinds( behinds_ behinds= behinds+ behinds[ behinds{ behinds\\ behinds| behinds< behinds> behinds` behinds~ behinds/'
  - '2hs@ 2hs# 2hs$ 2hs% 2hs^ 2hs& 2hs* 2hs( 2hs_ 2hs= 2hs+ 2hs[ 2hs{ 2hs\\ 2hs| 2hs< 2hs> 2hs` 2hs~ 2hs/'
  - xfail: contraction followed by special characters is ignored

- - 'behs) behs] behs} behs'' behs" behs- behs, behs. behs; behs: behs? behs! behs@ behs# behs$ behs% behs^ behs& behs* behs( behs_ behs= behs+ behs[ behs{ behs\\ behs| behs< behs> behs` behs~ behs/'
  - 'behs) behs] behs} behs'' behs" behs- behs, behs. behs; behs: behs? behs! behs@ behs# behs$ behs% behs^ behs& behs* behs( behs_ behs= behs+ behs[ behs{ behs\\ behs| behs< behs> behs` behs~ behs/'
  - xfail: non-contraction of "behs" conflicts with contraction of "behinds"

- - 'behinds-xl behinds-([{''"xl behinds-/xl behinds-$xl'
  - '2hs-xl 2hs-([{''"xl 2hs-/xl 2hs-$xl'
  - xfail: ...

- - 'behinds(xl behinds[xl behinds{xl behinds''xl behinds"xl behinds=([{''"-xl behinds([{''"-xl behinds/-xl behinds$-xl'
  - '2hs(xl 2hs[xl 2hs{xl 2hs''xl 2hs"xl 2hs=([{''"-xl 2hs([{''"-xl 2hs/-xl 2hs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(below [below {below ''below "below -below'
  - '(2l [2l {2l ''2l "2l -2l'
  - xfail: ...

- - '!below @below #below $below %below ^below &below *below )below _below =below +below ]below }below \\below |below .below ,below ;below :below ?below <below >below `below ~below /below'
  - '!2l @2l #2l $2l %2l ^2l &2l *2l )2l _2l =2l +2l ]2l }2l \\2l |2l .2l ,2l ;2l :2l ?2l <2l >2l `2l ~2l /2l'
  - xfail: contraction following special characters is ignored

- - 'xl-below xl-([{''"below xl/-below xl$-below'
  - 'xl-2l xl-([{''"2l xl/-2l xl$-2l'
  - xfail: ...

- - 'xl(below xl[below xl{below xl''below xl"below xl-=([{''"below'
  - 'xl(2l xl[2l xl{2l xl''2l xl"2l xl-=([{''"2l'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'below) below] below} below'' below" below- below, below. below; below: below? below!'
  - '2l) 2l] 2l} 2l'' 2l" 2l- 2l, 2l. 2l; 2l: 2l? 2l!'
  - xfail: ...

- - 'below@ below# below$ below% below^ below& below* below( below_ below= below+ below[ below{ below\\ below| below< below> below` below~ below/'
  - '2l@ 2l# 2l$ 2l% 2l^ 2l& 2l* 2l( 2l_ 2l= 2l+ 2l[ 2l{ 2l\\ 2l| 2l< 2l> 2l` 2l~ 2l/'
  - xfail: contraction followed by special characters is ignored

- - 'below-xl below-([{''"xl below-/xl below-$xl'
  - '2l-xl 2l-([{''"xl 2l-/xl 2l-$xl'
  - xfail: ...

- - 'below(xl below[xl below{xl below''xl below"xl below=([{''"-xl below([{''"-xl below/-xl below$-xl'
  - '2l(xl 2l[xl 2l{xl 2l''xl 2l"xl 2l=([{''"-xl 2l([{''"-xl 2l/-xl 2l$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(belows [belows {belows ''belows "belows -belows'
  - '(2ls [2ls {2ls ''2ls "2ls -2ls'
  - xfail: ...

- - '!belows @belows #belows $belows %belows ^belows &belows *belows )belows _belows =belows +belows ]belows }belows \\belows |belows .belows ,belows ;belows :belows ?belows <belows >belows `belows ~belows /belows'
  - '!2ls @2ls #2ls $2ls %2ls ^2ls &2ls *2ls )2ls _2ls =2ls +2ls ]2ls }2ls \\2ls |2ls .2ls ,2ls ;2ls :2ls ?2ls <2ls >2ls `2ls ~2ls /2ls'
  - xfail: contraction following special characters is ignored

- - 'xl-belows xl-([{''"belows xl/-belows xl$-belows'
  - 'xl-2ls xl-([{''"2ls xl/-2ls xl$-2ls'
  - xfail: ...

- - 'xl(belows xl[belows xl{belows xl''belows xl"belows xl-=([{''"belows'
  - 'xl(2ls xl[2ls xl{2ls xl''2ls xl"2ls xl-=([{''"2ls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'belows) belows] belows} belows'' belows" belows- belows, belows. belows; belows: belows? belows!'
  - '2ls) 2ls] 2ls} 2ls'' 2ls" 2ls- 2ls, 2ls. 2ls; 2ls: 2ls? 2ls!'
  - xfail: ...

- - 'belows@ belows# belows$ belows% belows^ belows& belows* belows( belows_ belows= belows+ belows[ belows{ belows\\ belows| belows< belows> belows` belows~ belows/'
  - '2ls@ 2ls# 2ls$ 2ls% 2ls^ 2ls& 2ls* 2ls( 2ls_ 2ls= 2ls+ 2ls[ 2ls{ 2ls\\ 2ls| 2ls< 2ls> 2ls` 2ls~ 2ls/'
  - xfail: contraction followed by special characters is ignored

- - 'belows-xl belows-([{''"xl belows-/xl belows-$xl'
  - '2ls-xl 2ls-([{''"xl 2ls-/xl 2ls-$xl'
  - xfail: ...

- - 'belows(xl belows[xl belows{xl belows''xl belows"xl belows=([{''"-xl belows([{''"-xl belows/-xl belows$-xl'
  - '2ls(xl 2ls[xl 2ls{xl 2ls''xl 2ls"xl 2ls=([{''"-xl 2ls([{''"-xl 2ls/-xl 2ls$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beneath [beneath {beneath ''beneath "beneath -beneath'
  - '(2n [2n {2n ''2n "2n -2n'
  - xfail: ...

- - '!beneath @beneath #beneath $beneath %beneath ^beneath &beneath *beneath )beneath _beneath =beneath +beneath ]beneath }beneath \\beneath |beneath .beneath ,beneath ;beneath :beneath ?beneath <beneath >beneath `beneath ~beneath /beneath'
  - '!2n @2n #2n $2n %2n ^2n &2n *2n )2n _2n =2n +2n ]2n }2n \\2n |2n .2n ,2n ;2n :2n ?2n <2n >2n `2n ~2n /2n'
  - xfail: contraction following special characters is ignored

- - 'xl-beneath xl-([{''"beneath xl/-beneath xl$-beneath'
  - 'xl-2n xl-([{''"2n xl/-2n xl$-2n'
  - xfail: ...

- - 'xl(beneath xl[beneath xl{beneath xl''beneath xl"beneath xl-=([{''"beneath'
  - 'xl(2n xl[2n xl{2n xl''2n xl"2n xl-=([{''"2n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beneath) beneath] beneath} beneath'' beneath" beneath- beneath, beneath. beneath; beneath: beneath? beneath!'
  - '2n) 2n] 2n} 2n'' 2n" 2n- 2n, 2n. 2n; 2n: 2n? 2n!'
  - xfail: ...

- - 'beneath@ beneath# beneath$ beneath% beneath^ beneath& beneath* beneath( beneath_ beneath= beneath+ beneath[ beneath{ beneath\\ beneath| beneath< beneath> beneath` beneath~ beneath/'
  - '2n@ 2n# 2n$ 2n% 2n^ 2n& 2n* 2n( 2n_ 2n= 2n+ 2n[ 2n{ 2n\\ 2n| 2n< 2n> 2n` 2n~ 2n/'
  - xfail: contraction followed by special characters is ignored

- - 'beneath-xl beneath-([{''"xl beneath-/xl beneath-$xl'
  - '2n-xl 2n-([{''"xl 2n-/xl 2n-$xl'
  - xfail: ...

- - 'beneath(xl beneath[xl beneath{xl beneath''xl beneath"xl beneath=([{''"-xl beneath([{''"-xl beneath/-xl beneath$-xl'
  - '2n(xl 2n[xl 2n{xl 2n''xl 2n"xl 2n=([{''"-xl 2n([{''"-xl 2n/-xl 2n$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beneaths [beneaths {beneaths ''beneaths "beneaths -beneaths'
  - '(2ns [2ns {2ns ''2ns "2ns -2ns'
  - xfail: ...

- - '!beneaths @beneaths #beneaths $beneaths %beneaths ^beneaths &beneaths *beneaths )beneaths _beneaths =beneaths +beneaths ]beneaths }beneaths \\beneaths |beneaths .beneaths ,beneaths ;beneaths :beneaths ?beneaths <beneaths >beneaths `beneaths ~beneaths /beneaths'
  - '!2ns @2ns #2ns $2ns %2ns ^2ns &2ns *2ns )2ns _2ns =2ns +2ns ]2ns }2ns \\2ns |2ns .2ns ,2ns ;2ns :2ns ?2ns <2ns >2ns ?2ns `2ns ~2ns /2ns'
  - xfail: contraction following special characters is ignored

- - 'xl-beneaths xl-([{''"beneaths xl/-beneaths xl$-beneaths'
  - 'xl-2ns xl-([{''"2ns xl/-2ns xl$-2ns'
  - xfail: ...

- - 'xl(beneaths xl[beneaths xl{beneaths xl''beneaths xl"beneaths xl-=([{''"beneaths'
  - 'xl(2ns xl[2ns xl{2ns xl''2ns xl"2ns xl-=([{''"2ns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beneaths) beneaths] beneaths} beneaths'' beneaths" beneaths- beneaths, beneaths. beneaths; beneaths: beneaths? beneaths!'
  - '2ns) 2ns] 2ns} 2ns'' 2ns" 2ns- 2ns, 2ns. 2ns; 2ns: 2ns? 2ns!'
  - xfail: ...

- - 'beneaths@ beneaths# beneaths$ beneaths% beneaths^ beneaths& beneaths* beneaths( beneaths_ beneaths= beneaths+ beneaths[ beneaths{ beneaths\\ beneaths| beneaths< beneaths> beneaths` beneaths~ beneaths/'
  - '2ns@ 2ns# 2ns$ 2ns% 2ns^ 2ns& 2ns* 2ns( 2ns_ 2ns= 2ns+ 2ns[ 2ns{ 2ns\\ 2ns| 2ns< 2ns> 2ns` 2ns~ 2ns/'
  - xfail: contraction followed by special characters is ignored

- - 'beneaths-xl beneaths-([{''"xl beneaths-/xl beneaths-$xl'
  - '2ns-xl 2ns-([{''"xl 2ns-/xl 2ns-$xl'
  - xfail: ...

- - 'beneaths(xl beneaths[xl beneaths{xl beneaths''xl beneaths"xl beneaths=([{''"-xl beneaths([{''"-xl beneaths/-xl beneaths$-xl'
  - '2ns(xl 2ns[xl 2ns{xl 2ns''xl 2ns"xl 2ns=([{''"-xl 2ns([{''"-xl 2ns/-xl 2ns$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beside [beside {beside ''beside "beside -beside'
  - '(2s [2s {2s ''2s "2s -2s'
  - xfail: ...

- - '!beside @beside #beside $beside %beside ^beside &beside *beside )beside _beside =beside +beside ]beside }beside \\beside |beside .beside ,beside ;beside :beside ?beside <beside >beside `beside ~beside /beside'
  - '!2s @2s #2s $2s %2s ^2s &2s *2s )2s _2s =2s +2s ]2s }2s \\2s |2s .2s ,2s ;2s :2s ?2s <2s >2s `2s ~2s /2s'
  - xfail: contraction following special characters is ignored

- - 'xl-beside xl-([{''"beside xl/-beside xl$-beside'
  - 'xl-2s xl-([{''"2s xl/-2s xl$-2s'
  - xfail: ...

- - 'xl(beside xl[beside xl{beside xl''beside xl"beside xl-=([{''"beside'
  - 'xl(2s xl[2s xl{2s xl''2s xl"2s xl-=([{''"2s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beside) beside] beside} beside'' beside" beside- beside, beside. beside; beside: beside? beside!'
  - '2s) 2s] 2s} 2s'' 2s" 2s- 2s, 2s. 2s; 2s: 2s? 2s!'
  - xfail: ...

- - 'beside@ beside# beside$ beside% beside^ beside& beside* beside( beside_ beside= beside+ beside[ beside{ beside\\ beside| beside< beside> beside` beside~ beside/'
  - '2s@ 2s# 2s$ 2s% 2s^ 2s& 2s* 2s( 2s_ 2s= 2s+ 2s[ 2s{ 2s\\ 2s| 2s< 2s> 2s` 2s~ 2s/'
  - xfail: contraction followed by special characters is ignored

- - 'bes) bes] bes} bes'' bes" bes- bes, bes. bes; bes: bes? bes!'
  - 'bes) bes] bes} bes'' bes" bes- bes, bes. bes; bes: bes? bes!'
  - xfail: ...

- - 'bes@ bes# bes$ bes% bes^ bes& bes* bes( bes_ bes= bes+ bes[ bes{ bes\\ bes| bes< bes> bes` bes~ bes/'
  - 'bes@ bes# bes$ bes% bes^ bes& bes* bes( bes_ bes= bes+ bes[ bes{ bes\\ bes| bes< bes> bes` bes~ bes/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'beside-xl beside-([{''"xl beside-/xl beside-$xl'
  - '2s-xl 2s-([{''"xl 2s-/xl 2s-$xl'
  - xfail: ...

- - 'beside(xl beside[xl beside{xl beside''xl beside"xl beside=([{''"-xl beside([{''"-xl beside/-xl beside$-xl'
  - '2s(xl 2s[xl 2s{xl 2s''xl 2s"xl 2s=([{''"-xl 2s([{''"-xl 2s/-xl 2s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(besides [besides {besides ''besides "besides -besides'
  - '(2ss [2ss {2ss ''2ss "2ss -2ss'
  - xfail: ...

- - '!besides @besides #besides $besides %besides ^besides &besides *besides )besides _besides =besides +besides ]besides }besides \\besides |besides .besides ,besides ;besides :besides ?besides <besides >besides `besides ~besides /besides'
  - '!2ss @2ss #2ss $2ss %2ss ^2ss &2ss *2ss )2ss _2ss =2ss +2ss ]2ss }2ss \\2ss |2ss .2ss ,2ss ;2ss :2ss ?2ss <2ss >2ss ?2ss `2ss ~2ss /2ss'
  - xfail: contraction following special characters is ignored

- - 'xl-besides xl-([{''"besides xl/-besides xl$-besides'
  - 'xl-2ss xl-([{''"2ss xl/-2ss xl$-2ss'
  - xfail: ...

- - 'xl(besides xl[besides xl{besides xl''besides xl"besides xl-=([{''"besides'
  - 'xl(2ss xl[2ss xl{2ss xl''2ss xl"2ss xl-=([{''"2ss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'besides) besides] besides} besides'' besides" besides- besides, besides. besides; besides: besides? besides!'
  - '2ss) 2ss] 2ss} 2ss'' 2ss" 2ss- 2ss, 2ss. 2ss; 2ss: 2ss? 2ss!'
  - xfail: ...

- - 'besides@ besides# besides$ besides% besides^ besides& besides* besides( besides_ besides= besides+ besides[ besides{ besides\\ besides| besides< besides> besides` besides~ besides/'
  - '2ss@ 2ss# 2ss$ 2ss% 2ss^ 2ss& 2ss* 2ss( 2ss_ 2ss= 2ss+ 2ss[ 2ss{ 2ss\\ 2ss| 2ss< 2ss> 2ss` 2ss~ 2ss/'
  - xfail: contraction followed by special characters is ignored

- - 'besides-xl besides-([{''"xl besides-/xl besides-$xl'
  - '2ss-xl 2ss-([{''"xl 2ss-/xl 2ss-$xl'
  - xfail: ...

- - 'besides(xl besides[xl besides{xl besides''xl besides"xl besides=([{''"-xl besides([{''"-xl besides/-xl besides$-xl'
  - '2ss(xl 2ss[xl 2ss{xl 2ss''xl 2ss"xl 2ss=([{''"-xl 2ss([{''"-xl 2ss/-xl 2ss$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(between [between {between ''between "between -between'
  - '(2t [2t {2t ''2t "2t -2t'
  - xfail: ...

- - '!between @between #between $between %between ^between &between *between )between _between =between +between ]between }between \\between |between .between ,between ;between :between ?between <between >between `between ~between /between'
  - '!2t @2t #2t $2t %2t ^2t &2t *2t )2t _2t =2t +2t ]2t }2t \\2t |2t .2t ,2t ;2t :2t ?2t <2t >2t `2t ~2t /2t'
  - xfail: contraction following special characters is ignored

- - 'xl-between xl-([{''"between xl/-between xl$-between'
  - 'xl-2t xl-([{''"2t xl/-2t xl$-2t'
  - xfail: ...

- - 'xl(between xl[between xl{between xl''between xl"between xl-=([{''"between'
  - 'xl(2t xl[2t xl{2t xl''2t xl"2t xl-=([{''"2t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'between) between] between} between'' between" between- between, between. between; between: between? between!'
  - '2t) 2t] 2t} 2t'' 2t" 2t- 2t, 2t. 2t; 2t: 2t? 2t!'
  - xfail: ...

- - 'between@ between# between$ between% between^ between& between* between( between_ between= between+ between[ between{ between\\ between| between< between> between` between~ between/'
  - '2t@ 2t# 2t$ 2t% 2t^ 2t& 2t* 2t( 2t_ 2t= 2t+ 2t[ 2t{ 2t\\ 2t| 2t< 2t> 2t` 2t~ 2t/'
  - xfail: contraction followed by special characters is ignored

- - 'bet) bet] bet} bet'' bet" bet- bet, bet. bet; bet: bet? bet!'
  - 'bet) bet] bet} bet'' bet" bet- bet, bet. bet; bet: bet? bet!'
  - xfail: ...

- - 'bet@ bet# bet$ bet% bet^ bet& bet* bet( bet_ bet= bet+ bet[ bet{ bet\\ bet| bet< bet> bet` bet~ bet/'
  - 'bet@ bet# bet$ bet% bet^ bet& bet* bet( bet_ bet= bet+ bet[ bet{ bet\\ bet| bet< bet> bet` bet~ bet/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'between-xl between-([{''"xl between-/xl between-$xl'
  - '2t-xl 2t-([{''"xl 2t-/xl 2t-$xl'
  - xfail: ...

- - 'between(xl between[xl between{xl between''xl between"xl between=([{''"-xl between([{''"-xl between/-xl between$-xl'
  - '2t(xl 2t[xl 2t{xl 2t''xl 2t"xl 2t=([{''"-xl 2t([{''"-xl 2t/-xl 2t$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(betweens [betweens {betweens ''betweens "betweens -betweens'
  - '(2ts [2ts {2ts ''2ts "2ts -2ts'
  - xfail: ...

- - '!betweens @betweens #betweens $betweens %betweens ^betweens &betweens *betweens )betweens _betweens =betweens +betweens ]betweens }betweens \\betweens |betweens .betweens ,betweens ;betweens :betweens ?betweens <betweens >betweens `betweens ~betweens /betweens'
  - '!2ts @2ts #2ts $2ts %2ts ^2ts &2ts *2ts )2ts _2ts =2ts +2ts ]2ts }2ts \\2ts |2ts .2ts ,2ts ;2ts :2ts ?2ts <2ts >2ts ?2ts `2ts ~2ts /2ts'
  - xfail: contraction following special characters is ignored

- - 'xl-betweens xl-([{''"betweens xl/-betweens xl$-betweens'
  - 'xl-2ts xl-([{''"2ts xl/-2ts xl$-2ts'
  - xfail: ...

- - 'xl(betweens xl[betweens xl{betweens xl''betweens xl"betweens xl-=([{''"betweens'
  - 'xl(2ts xl[2ts xl{2ts xl''2ts xl"2ts xl-=([{''"2ts'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'betweens) betweens] betweens} betweens'' betweens" betweens- betweens, betweens. betweens; betweens: betweens? betweens!'
  - '2ts) 2ts] 2ts} 2ts'' 2ts" 2ts- 2ts, 2ts. 2ts; 2ts: 2ts? 2ts!'
  - xfail: ...

- - 'betweens@ betweens# betweens$ betweens% betweens^ betweens& betweens* betweens( betweens_ betweens= betweens+ betweens[ betweens{ betweens\\ betweens| betweens< betweens> betweens` betweens~ betweens/'
  - '2ts@ 2ts# 2ts$ 2ts% 2ts^ 2ts& 2ts* 2ts( 2ts_ 2ts= 2ts+ 2ts[ 2ts{ 2ts\\ 2ts| 2ts< 2ts> 2ts` 2ts~ 2ts/'
  - xfail: contraction followed by special characters is ignored

- - 'betweens-xl betweens-([{''"xl betweens-/xl betweens-$xl'
  - '2ts-xl 2ts-([{''"xl 2ts-/xl 2ts-$xl'
  - xfail: ...

- - 'betweens(xl betweens[xl betweens{xl betweens''xl betweens"xl betweens=([{''"-xl betweens([{''"-xl betweens/-xl betweens$-xl'
  - '2ts(xl 2ts[xl 2ts{xl 2ts''xl 2ts"xl 2ts=([{''"-xl 2ts([{''"-xl 2ts/-xl 2ts$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beyond [beyond {beyond ''beyond "beyond -beyond'
  - '(2y [2y {2y ''2y "2y -2y'
  - xfail: ...

- - '!beyond @beyond #beyond $beyond %beyond ^beyond &beyond *beyond )beyond _beyond =beyond +beyond ]beyond }beyond \\beyond |beyond .beyond ,beyond ;beyond :beyond ?beyond <beyond >beyond `beyond ~beyond /beyond'
  - '!2y @2y #2y $2y %2y ^2y &2y *2y )2y _2y =2y +2y ]2y }2y \\2y |2y .2y ,2y ;2y :2y ?2y <2y >2y `2y ~2y /2y'
  - xfail: contraction following special characters is ignored

- - 'xl-beyond xl-([{''"beyond xl/-beyond xl$-beyond'
  - 'xl-2y xl-([{''"2y xl/-2y xl$-2y'
  - xfail: ...

- - 'xl(beyond xl[beyond xl{beyond xl''beyond xl"beyond xl-=([{''"beyond'
  - 'xl(2y xl[2y xl{2y xl''2y xl"2y xl-=([{''"2y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beyond) beyond] beyond} beyond'' beyond" beyond- beyond, beyond. beyond; beyond: beyond? beyond!'
  - '2y) 2y] 2y} 2y'' 2y" 2y- 2y, 2y. 2y; 2y: 2y? 2y!'
  - xfail: ...

- - 'beyond@ beyond# beyond$ beyond% beyond^ beyond& beyond* beyond( beyond_ beyond= beyond+ beyond[ beyond{ beyond\\ beyond| beyond< beyond> beyond` beyond~ beyond/'
  - '2y@ 2y# 2y$ 2y% 2y^ 2y& 2y* 2y( 2y_ 2y= 2y+ 2y[ 2y{ 2y\\ 2y| 2y< 2y> 2y` 2y~ 2y/'
  - xfail: contraction followed by special characters is ignored

- - 'beyond-xl beyond-([{''"xl beyond-/xl beyond-$xl'
  - '2y-xl 2y-([{''"xl 2y-/xl 2y-$xl'
  - xfail: ...

- - 'beyond(xl beyond[xl beyond{xl beyond''xl beyond"xl beyond=([{''"-xl beyond([{''"-xl beyond/-xl beyond$-xl'
  - '2y(xl 2y[xl 2y{xl 2y''xl 2y"xl 2y=([{''"-xl 2y([{''"-xl 2y/-xl 2y$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beyonds [beyonds {beyonds ''beyonds "beyonds -beyonds'
  - '(2ys [2ys {2ys ''2ys "2ys -2ys'
  - xfail: ...

- - '!beyonds @beyonds #beyonds $beyonds %beyonds ^beyonds &beyonds *beyonds )beyonds _beyonds =beyonds +beyonds ]beyonds }beyonds \\beyonds |beyonds .beyonds ,beyonds ;beyonds :beyonds ?beyonds <beyonds >beyonds `beyonds ~beyonds /beyonds'
  - '!2ys @2ys #2ys $2ys %2ys ^2ys &2ys *2ys )2ys _2ys =2ys +2ys ]2ys }2ys \\2ys |2ys .2ys ,2ys ;2ys :2ys ?2ys <2ys >2ys ?2ys `2ys ~2ys /2ys'
  - xfail: contraction following special characters is ignored

- - 'xl-beyonds xl-([{''"beyonds xl/-beyonds xl$-beyonds'
  - 'xl-2ys xl-([{''"2ys xl/-2ys xl$-2ys'
  - xfail: ...

- - 'xl(beyonds xl[beyonds xl{beyonds xl''beyonds xl"beyonds xl-=([{''"beyonds'
  - 'xl(2ys xl[2ys xl{2ys xl''2ys xl"2ys xl-=([{''"2ys'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beyonds) beyonds] beyonds} beyonds'' beyonds" beyonds- beyonds, beyonds. beyonds; beyonds: beyonds? beyonds!'
  - '2ys) 2ys] 2ys} 2ys'' 2ys" 2ys- 2ys, 2ys. 2ys; 2ys: 2ys? 2ys!'
  - xfail: ...

- - 'beyonds@ beyonds# beyonds$ beyonds% beyonds^ beyonds& beyonds* beyonds( beyonds_ beyonds= beyonds+ beyonds[ beyonds{ beyonds\\ beyonds| beyonds< beyonds> beyonds` beyonds~ beyonds/'
  - '2ys@ 2ys# 2ys$ 2ys% 2ys^ 2ys& 2ys* 2ys( 2ys_ 2ys= 2ys+ 2ys[ 2ys{ 2ys\\ 2ys| 2ys< 2ys> 2ys` 2ys~ 2ys/'
  - xfail: contraction followed by special characters is ignored

- - 'beyonds-xl beyonds-([{''"xl beyonds-/xl beyonds-$xl'
  - '2ys-xl 2ys-([{''"xl 2ys-/xl 2ys-$xl'
  - xfail: ...

- - 'beyonds(xl beyonds[xl beyonds{xl beyonds''xl beyonds"xl beyonds=([{''"-xl beyonds([{''"-xl beyonds/-xl beyonds$-xl'
  - '2ys(xl 2ys[xl 2ys{xl 2ys''xl 2ys"xl 2ys=([{''"-xl 2ys([{''"-xl 2ys/-xl 2ys$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(blind [blind {blind ''blind "blind -blind'
  - '(bl [bl {bl ''bl "bl -bl'
  - xfail: ...

- - '!blind @blind #blind $blind %blind ^blind &blind *blind )blind _blind =blind +blind ]blind }blind \\blind |blind .blind ,blind ;blind :blind ?blind <blind >blind `blind ~blind /blind'
  - '!bl @bl #bl $bl %bl ^bl &bl *bl )bl _bl =bl +bl ]bl }bl \\bl |bl .bl ,bl ;bl :bl ?bl <bl >bl ?bl `bl ~bl /bl'
  - xfail: contraction following special characters is ignored

- - '(bl [bl {bl ''bl "bl -bl'
  - '(;bl [;bl {;bl '';bl ";bl -;bl'
  - xfail: ...

- - '!bl @bl #bl $bl %bl ^bl &bl *bl )bl _bl =bl +bl ]bl }bl \\bl |bl .bl ,bl ;bl :bl ?bl <bl >bl ?bl `bl ~bl /bl'
  - '!;bl @;bl #;bl $;bl %;bl ^;bl &;bl *;bl );bl _;bl =;bl +;bl ];bl };bl \\;bl |;bl .;bl ,;bl ;;bl :;bl ?;bl <;bl >;bl `;bl ~;bl /;bl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-blind xl-([{''"blind xl/-blind xl$-blind'
  - 'xl-bl xl-([{''"bl xl/-bl xl$-bl'
  - xfail: ...

- - 'xl(blind xl[blind xl{blind xl''blind xl"blind xl-=([{''"blind'
  - 'xl(bl xl[bl xl{bl xl''bl xl"bl xl-=([{''"bl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'blind) blind] blind} blind'' blind" blind- blind, blind. blind; blind: blind? blind!'
  - 'bl) bl] bl} bl'' bl" bl- bl, bl. bl; bl: bl? bl!'
  - xfail: ...

- - 'blind@ blind# blind$ blind% blind^ blind& blind* blind( blind_ blind= blind+ blind[ blind{ blind\\ blind| blind< blind> blind` blind~ blind/'
  - 'bl@ bl# bl$ bl% bl^ bl& bl* bl( bl_ bl= bl+ bl[ bl{ bl\\ bl| bl< bl> bl` bl~ bl/'
  - xfail: contraction followed by special characters is ignored

- - 'bl) bl] bl} bl'' bl" bl- bl, bl. bl; bl: bl? bl!'
  - ';bl) ;bl] ;bl} ;bl'' ;bl" ;bl- ;bl, ;bl. ;bl; ;bl: ;bl? ;bl!'
  - xfail: ...

- - 'bl@ bl# bl$ bl% bl^ bl& bl* bl( bl_ bl= bl+ bl[ bl{ bl\\ bl| bl< bl> bl` bl~ bl/'
  - ';bl@ ;bl# ;bl$ ;bl% ;bl^ ;bl& ;bl* ;bl( ;bl_ ;bl= ;bl+ ;bl[ ;bl{ ;bl\\ ;bl| ;bl< ;bl> ;bl` ;bl~ ;bl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'blind-xl blind-([{''"xl blind-/xl blind-$xl'
  - 'bl-xl bl-([{''"xl bl-/xl bl-$xl'
  - xfail: ...

- - 'blind(xl blind[xl blind{xl blind''xl blind"xl blind=([{''"-xl blind([{''"-xl blind/-xl blind$-xl'
  - 'bl(xl bl[xl bl{xl bl''xl bl"xl bl=([{''"-xl bl([{''"-xl bl/-xl bl$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'blindb blindc blindd blindf blindg blindh blindj blindk blindl blindm blindn blindp blindq blindr blinds blindt blindv blindw blindx blindz probablindly'
  - 'blb blc bld blf blg blh blj blk bll blm bln blp blq blr bls blt blv blw blx blz probablly'

- - 'blb blc bld blf blg blh blj blk bll blm bln blp blq blr bls blt blv blw blx blz blful blment blness blsion bltion blless blance blence blity blong probablly'
  - ';blb ;blc ;bld ;blf ;blg ;blh ;blj ;blk ;bll ;blm ;bln ;blp ;blq ;blr ;bls ;blt ;blv ;blw ;blx ;blz ;bl;l ;bl;t ;bl;s ;bl.n ;bl;n ;bl.s ;bl.e ;bl;e ;bl;y ;bl;g proba;blly'
  - xfail: non-contraction of "bl" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "blind"

- - 'ablind bblind cblind dblind eblind  fblind gblind hblind iblind jblind kblind lblind  mblind nblind oblind pbl qblind rblind sblind tblind ublind  vblind wblind xblind yblind zblind'
  - 'abl bbl cbl dbl ebl  fbl gbl hbl ibl jbl kbl lbl  mbl nbl obl pbl qbl rbl sbl tbl ubl  vbl wbl xbl ybl zbl'

- - 'abl bbl cbl dbl ebl  fbl gbl hbl ibl jbl kbl lbl  mbl nbl obl pbl qbl rbl sbl tbl ubl  vbl wbl xbl ybl zbl'
  - 'a;bl b;bl c;bl d;bl e;bl  f;bl g;bl h;bl i;bl j;bl k;bl l;bl  m;bl n;bl o;bl p;bl q;bl r;bl s;bl t;bl u;bl  v;bl w;bl x;bl y;bl z;bl'
  - xfail: non-contraction of "bl" following letter  has a missing grade 1 indicator due to conflict with contraction of "blind"

- - '(braille [braille {braille ''braille "braille -braille'
  - '(brl [brl {brl ''brl "brl -brl'
  - xfail: ...

- - '!braille @braille #braille $braille %braille ^braille &braille *braille )braille _braille =braille +braille ]braille }braille \\braille |braille .braille ,braille ;braille :braille ?braille <braille >braille `braille ~braille /'
  - '!brl @brl #brl $brl %brl ^brl &brl *brl )brl _brl =brl +brl ]brl }brl \\brl |brl .brl ,brl ;brl :brl ?brl <brl >brl ?brl `brl ~brl /brl'
  - xfail: contraction following special characters is ignored

- - '(brl [brl {brl ''brl "brl -brl'
  - '(;brl [;brl {;brl '';brl ";brl -;brl'
  - xfail: ...

- - '!brl @brl #brl $brl %brl ^brl &brl *brl )brl _brl =brl +brl ]brl }brl \\brl |brl .brl ,brl ;brl :brl ?brl <brl >brl ?brl `brl ~brl /brl'
  - '!;brl @;brl #;brl $;brl %;brl ^;brl &;brl *;brl );brl _;brl =;brl +;brl ];brl };brl \\;brl |;brl .;brl ,;brl ;;brl :;brl ?;brl <;brl >;brl `;brl ~;brl /;brl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-braille xl-([{''"braille xl/-braille xl$-braille'
  - 'xl-brl xl-([{''"brl xl/-brl xl$-brl'
  - xfail: ...

- - 'xl(braille xl[braille xl{braille xl''braille xl"braille xl-=([{''"braille'
  - 'xl(brl xl[brl xl{brl xl''brl xl"brl xl-=([{''"brl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'braille) braille] braille} braille'' braille" braille- braille, braille. braille; braille: braille? braille!'
  - 'brl) brl] brl} brl'' brl" brl- brl, brl. brl; brl: brl? brl!'
  - xfail: ...

- - 'braille@ braille# braille$ braille% braille^ braille& braille* braille( braille_ braille= braille+ braille[ braille{ braille\\ braille| braille< braille> braille` braille~ braille/'
  - 'brl@ brl# brl$ brl% brl^ brl& brl* brl( brl_ brl= brl+ brl[ brl{ brl\\ brl| brl< brl> brl` brl~ brl/'
  - xfail: contraction followed by special characters is ignored

- - 'brl) brl] brl} brl'' brl" brl- brl, brl. brl; brl: brl? brl!'
  - ';brl) ;brl] ;brl} ;brl'' ;brl" ;brl- ;brl, ;brl. ;brl; ;brl: ;brl? ;brl!'
  - xfail: ...

- - 'brl@ brl# brl$ brl% brl^ brl& brl* brl( brl_ brl= brl+ brl[ brl{ brl\\ brl| brl< brl> brl` brl~ brl/'
  - ';brl@ ;brl# ;brl$ ;brl% ;brl^ ;brl& ;brl* ;brl( ;brl_ ;brl= ;brl+ ;brl[ ;brl{ ;brl\\ ;brl| ;brl< ;brl> ;brl` ;brl~ ;brl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'braille-xl braille-([{''"xl braille-/xl braille-$xl'
  - 'brl-xl brl-([{''"xl brl-/xl brl-$xl'
  - xfail: ...

- - 'braille(xl braille[xl braille{xl braille''xl braille"xl braille=([{''"-xl braille([{''"-xl braille/-xl braille$-xl'
  - 'brl(xl brl[xl brl{xl brl''xl brl"xl brl=([{''"-xl brl([{''"-xl brl/-xl brl$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'braillea brailleb braillec brailled braillee braillef brailleg brailleh braillei braillej braillek braillel braillem braillen brailleo braillep brailleq brailler brailles braillet brailleu braillev braillew braillex brailley braillez'
  - 'brla brlb brlc brld brle brlf brlg brlh brli brlj brlk brll brlm brln brlo brlp brlq brlr brls brlt brlu brlv brlw brlx brly brlz'

- - 'brla brlb brlc brld brle brlf brlg brlh brli brlj brlk brll brlm brln brlo brlp brlq brlr brls brlt brlu brlv brlw brlx brly brlz brlful brlment brlness brlsion brltion brlless brlance brlence brlity brlong'
  - ';brla ;brlb ;brlc ;brld ;brle ;brlf ;brlg ;brlh ;brli ;brlj ;brlk ;brll ;brlm ;brln ;brlo ;brlp ;brlq ;brlr ;brls ;brlt ;brlu ;brlv ;brlw ;brlx ;brly ;brlz ;brl;l ;brl;t ;brl;s ;brl.n ;brl;n ;brl.s ;brl.e ;brl;e ;brl;y ;brl;g'
  - xfail: non-contraction of "brl" followed by letter has a missing grade 1 indicator due to conflict with contraction of "braille"

- - 'abraille bbraille cbraille dbraille ebraille  fbraille gbraille hbraille ibraille jbraille kbraille lbraille  mbraille nbraille obraille pbrl qbraille rbraille sbraille tbraille ubraille  vbraille wbraille xbraille ybraille zbraille'
  - 'abrl bbrl cbrl dbrl ebrl  fbrl gbrl hbrl ibrl jbrl kbrl lbrl  mbrl nbrl obrl pbrl qbrl rbrl sbrl tbrl ubrl  vbrl wbrl xbrl ybrl zbrl'

- - 'abrl bbrl cbrl dbrl ebrl  fbrl gbrl hbrl ibrl jbrl kbrl lbrl  mbrl nbrl obrl pbrl qbrl rbrl sbrl tbrl ubrl  vbrl wbrl xbrl ybrl zbrl'
  - 'a;brl b;brl c;brl d;brl e;brl  f;brl g;brl h;brl i;brl j;brl k;brl l;brl  m;brl n;brl o;brl p;brl q;brl r;brl s;brl t;brl u;brl  v;brl w;brl x;brl y;brl z;brl'
  - xfail: non-contraction of "brl" following letter  has a missing grade 1 indicator due to conflict with contraction of "braille"

- - '(brailled [brailled {brailled ''brailled "brailled -brailled'
  - '(brld [brld {brld ''brld "brld -brld'
  - xfail: ...

- - '!brailled @brailled #brailled $brailled %brailled ^brailled &brailled *brailled )brailled _brailled =brailled +brailled ]brailled }brailled \\brailled |brailled .brailled ,brailled ;brailled :brailled ?brailled <brailled >braille /brailled'
  - '!brld @brld #brld $brld %brld ^brld &brld *brld )brld _brld =brld +brld ]brld }brld \\brld |brld .brld ,brld ;brld :brld ?brld <brld >brld `brld ~brld /brld'
  - xfail: contraction following special characters is ignored

- - '(brld [brld {brld ''brld "brld -brld'
  - '(;brld [;brld {;brld '';brld ";brld -;brld'
  - xfail: ...

- - '!brld @brld #brld $brld %brld ^brld &brld *brld )brld _brld =brld +brld ]brld }brld \\brld |brld .brld ,brld ;brld :brld ?brld <brld >brld `brld ~brld /brld'
  - '!;brld @;brld #;brld $;brld %;brld ^;brld &;brld *;brld );brld _;brld =;brld +;brld ];brld };brld \\;brld |;brld .;brld ,;brld ;;brld :;brld ?;brld <;brld >;brld `;brld ~;brld /;brld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailled xl-([{''"brailled xl/-brailled xl$-brailled'
  - 'xl-brld xl-([{''"brld xl/-brld xl$-brld'
  - xfail: ...

- - 'xl(brailled xl[brailled xl{brailled xl''brailled xl"brailled xl-=([{''"brailled'
  - 'xl(brld xl[brld xl{brld xl''brld xl"brld xl-=([{''"brld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailled) brailled] brailled} brailled'' brailled" brailled- brailled, brailled. brailled; brailled: brailled? brailled!'
  - 'brld) brld] brld} brld'' brld" brld- brld, brld. brld; brld: brld? brld!'
  - xfail: ...

- - 'brailled@ brailled# brailled$ brailled% brailled^ brailled& brailled* brailled( brailled_ brailled= brailled+ brailled[ brailled{ brailled\\ brailled| brailled< brailled> brailled` brailled~ brailled/'
  - 'brld@ brld# brld$ brld% brld^ brld& brld* brld( brld_ brld= brld+ brld[ brld{ brld\\ brld| brld< brld> brld` brld~ brld/'
  - xfail: contraction followed by special characters is ignored

- - 'brld) brld] brld} brld'' brld" brld- brld, brld. brld; brld: brld? brld!'
  - ';brld) ;brld] ;brld} ;brld'' ;brld" ;brld- ;brld, ;brld. ;brld; ;brld: ;brld? ;brld!'
  - xfail: ...

- - 'brld@ brld# brld$ brld% brld^ brld& brld* brld( brld_ brld= brld+ brld[ brld{ brld\\ brld| brld< brld> brld` brld~ brld/'
  - ';brld@ ;brld# ;brld$ ;brld% ;brld^ ;brld& ;brld* ;brld( ;brld_ ;brld= ;brld+ ;brld[ ;brld{ ;brld\\ ;brld| ;brld< ;brld> ;brld` ;brld~ ;brld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailled-xl brailled-([{''"xl brailled-/xl brailled-$xl'
  - 'brld-xl brld-([{''"xl brld-/xl brld-$xl'
  - xfail: ...

- - 'brailled(xl brailled[xl brailled{xl brailled''xl brailled"xl brailled=([{''"-xl brailled([{''"-xl brailled/-xl brailled$-xl'
  - 'brld(xl brld[xl brld{xl brld''xl brld"xl brld=([{''"-xl brld([{''"-xl brld/-xl brld$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(brailler [brailler {brailler ''brailler "brailler -brailler'
  - '(brlr [brlr {brlr ''brlr "brlr -brlr'
  - xfail: ...

- - '!brailler @brailler #brailler $brailler %brailler ^brailler &brailler *brailler )brailler _brailler =brailler +brailler ]brailler }brailler \\brailler |brailler .brailler ,brailler ;brailler :brailler ?brailler <brailler >braille /brailler'
  - '!brlr @brlr #brlr $brlr %brlr ^brlr &brlr *brlr )brlr _brlr =brlr +brlr ]brlr }brlr \\brlr |brlr .brlr ,brlr ;brlr :brlr ?brlr <brlr >brlr `brlr ~brlr /brlr'
  - xfail: contraction following special characters is ignored

- - '(brlr [brlr {brlr ''brlr "brlr -brlr'
  - '(;brlr [;brlr {;brlr '';brlr ";brlr -;brlr'
  - xfail: ...

- - '!brlr @brlr #brlr $brlr %brlr ^brlr &brlr *brlr )brlr _brlr =brlr +brlr ]brlr }brlr \\brlr |brlr .brlr ,brlr ;brlr :brlr ?brlr <brlr >brlr `brlr ~brlr /brlr'
  - '!;brlr @;brlr #;brlr $;brlr %;brlr ^;brlr &;brlr *;brlr );brlr _;brlr =;brlr +;brlr ];brlr };brlr \\;brlr |;brlr .;brlr ,;brlr ;;brlr :;brlr ?;brlr <;brlr >;brlr `;brlr ~;brlr /;brlr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailler xl-([{''"brailler xl/-brailler xl$-brailler'
  - 'xl-brlr xl-([{''"brlr xl/-brlr xl$-brlr'
  - xfail: ...

- - 'xl(brailler xl[brailler xl{brailler xl''brailler xl"brailler xl-=([{''"brailler'
  - 'xl(brlr xl[brlr xl{brlr xl''brlr xl"brlr xl-=([{''"brlr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailler) brailler] brailler} brailler'' brailler" brailler- brailler, brailler. brailler; brailler: brailler? brailler!'
  - 'brlr) brlr] brlr} brlr'' brlr" brlr- brlr, brlr. brlr; brlr: brlr? brlr!'
  - xfail: ...

- - 'brailler@ brailler# brailler$ brailler% brailler^ brailler& brailler* brailler( brailler_ brailler= brailler+ brailler[ brailler{ brailler\\ brailler| brailler< brailler> brailler` brailler~ brailler/'
  - 'brlr@ brlr# brlr$ brlr% brlr^ brlr& brlr* brlr( brlr_ brlr= brlr+ brlr[ brlr{ brlr\\ brlr| brlr< brlr> brlr` brlr~ brlr/'
  - xfail: contraction followed by special characters is ignored

- - 'brlr) brlr] brlr} brlr'' brlr" brlr- brlr, brlr. brlr; brlr: brlr? brlr!'
  - ';brlr) ;brlr] ;brlr} ;brlr'' ;brlr" ;brlr- ;brlr, ;brlr. ;brlr; ;brlr: ;brlr? ;brlr!'
  - xfail: ...

- - 'brlr@ brlr# brlr$ brlr% brlr^ brlr& brlr* brlr( brlr_ brlr= brlr+ brlr[ brlr{ brlr\\ brlr| brlr< brlr> brlr` brlr~ brlr/'
  - ';brlr@ ;brlr# ;brlr$ ;brlr% ;brlr^ ;brlr& ;brlr* ;brlr( ;brlr_ ;brlr= ;brlr+ ;brlr[ ;brlr{ ;brlr\\ ;brlr| ;brlr< ;brlr> ;brlr` ;brlr~ ;brlr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailler-xl brailler-([{''"xl brailler-/xl brailler-$xl'
  - 'brlr-xl brlr-([{''"xl brlr-/xl brlr-$xl'
  - xfail: ...

- - 'brailler(xl brailler[xl brailler{xl brailler''xl brailler"xl brailler=([{''"-xl brailler([{''"-xl brailler/-xl brailler$-xl'
  - 'brlr(xl brlr[xl brlr{xl brlr''xl brlr"xl brlr=([{''"-xl brlr([{''"-xl brlr/-xl brlr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(braillers [braillers {braillers ''braillers "braillers -braillers'
  - '(brlrs [brlrs {brlrs ''brlrs "brlrs -brlrs'
  - xfail: ...

- - '!braillers @braillers #braillers $braillers %braillers ^braillers &braillers *braillers )braillers _braillers =braillers +braillers ]braillers }braillers \\braillers |braillers .braillers ,braillers ;braillers :braillers ?braillers <braillers >braille `braillers'
  - '!brlrs @brlrs #brlrs $brlrs %brlrs ^brlrs &brlrs *brlrs )brlrs _brlrs =brlrs +brlrs ]brlrs }brlrs \\brlrs |brlrs .brlrs ,brlrs ;brlrs :brlrs ?brlrs <brlrs >brlrs `brlrs'
  - xfail: contraction following special characters is ignored

- - '~braillers /brailers'
  - '~brlrs /brlrs'
  - xfail: contraction following special characters is ignored

- - 'brlers (brlrs [brlrs {brlrs ''brlrs "brlrs -brlrs !brlrs @brlrs #brlrs $brlrs %brlrs ^brlrs &brlrs *brlrs )brlrs _brlrs =brlrs +brlrs ]brlrs }brlrs \\brlrs |brlrs .brlrs ,brlrs ;brlrs :brlrs ?brlrs <brlrs >brlrs `brlrs ~brlrs /brlrs'
  - ';brlers (;brlrs [;brlrs {;brlrs '';brlrs ";brlrs -;brlrs !;brlrs @;brlrs #;brlrs $;brlrs %;brlrs ^;brlrs &;brlrs *;brlrs );brlrs _;brlrs =;brlrs +;brlrs ];brlrs };brlrs \\;brlrs |;brlrs .;brlrs ,;brlrs ;;brlrs :;brlrs ?;brlrs <;brlrs >;brlrs `;brlrs ~;brlrs /;brlrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-braillers xl-([{''"braillers xl/-braillers xl$-braillers'
  - 'xl-brlrs xl-([{''"brlrs xl/-brlrs xl$-brlrs'
  - xfail: ...

- - 'xl(braillers xl[braillers xl{braillers xl''braillers xl"braillers xl-=([{''"braillers'
  - 'xl(brlrs xl[brlrs xl{brlrs xl''brlrs xl"brlrs xl-=([{''"brlrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'braillers) braillers] braillers} braillers'' braillers" braillers- braillers, braillers. braillers; braillers: braillers? braillers!'
  - 'brlrs) brlrs] brlrs} brlrs'' brlrs" brlrs- brlrs, brlrs. brlrs; brlrs: brlrs? brlrs!'
  - xfail: ...

- - 'braillers@ braillers# braillers$ braillers% braillers^ braillers& braillers* braillers( braillers_ braillers= braillers+ braillers[ braillers{ braillers\\ braillers| braillers< braillers> braillers` braillers~ braillers/'
  - 'brlrs@ brlrs# brlrs$ brlrs% brlrs^ brlrs& brlrs* brlrs( brlrs_ brlrs= brlrs+ brlrs[ brlrs{ brlrs\\ brlrs| brlrs< brlrs> brlrs` brlrs~ brlrs/'
  - xfail: contraction followed by special characters is ignored

- - 'brlrs) brlrs] brlrs} brlrs'' brlrs" brlrs- brlrs, brlrs. brlrs; brlrs: brlrs? brlrs! brlrs@ brlrs# brlrs$ brlrs% brlrs^ brlrs& brlrs* brlrs( brlrs_ brlrs= brlrs+ brlrs[ brlrs{ brlrs\\ brlrs| brlrs< brlrs> brlrs` brlrs~ brlrs/'
  - ';brlrs) ;brlrs] ;brlrs} ;brlrs'' ;brlrs" ;brlrs- ;brlrs, ;brlrs. ;brlrs; ;brlrs: ;brlrs? ;brlrs! ;brlrs@ ;brlrs# ;brlrs$ ;brlrs% ;brlrs^ ;brlrs& ;brlrs* ;brlrs( ;brlrs_ ;brlrs= ;brlrs+ ;brlrs[ ;brlrs{ ;brlrs\\ ;brlrs| ;brlrs< ;brlrs> ;brlrs` ;brlrs~ ;brlrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'braillers-xl braillers-([{''"xl braillers-/xl braillers-$xl'
  - 'brlrs-xl brlrs-([{''"xl brlrs-/xl brlrs-$xl'
  - xfail: ...

- - 'braillers(xl braillers[xl braillers{xl braillers''xl braillers"xl braillers=([{''"-xl braillers([{''"-xl braillers/-xl braillers$-xl'
  - 'brlrs(xl brlrs[xl brlrs{xl brlrs''xl brlrs"xl brlrs=([{''"-xl brlrs([{''"-xl brlrs/-xl brlrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(brailles [brailles {brailles ''brailles "brailles -brailles'
  - '(brls [brls {brls ''brls "brls -brls'
  - xfail: ...

- - '!brailles @brailles #brailles $brailles %brailles ^brailles &brailles *brailles )brailles _brailles =brailles +brailles ]brailles }brailles \\brailles |brailles .brailles ,brailles ;brailles :brailles ?brailles <brailles >braille /brailles'
  - '!brls @brls #brls $brls %brls ^brls &brls *brls )brls _brls =brls +brls ]brls }brls \\brls |brls .brls ,brls ;brls :brls ?brls <brls >brls `brls ~brls /brls'
  - xfail: contraction following special characters is ignored

- - 'brls (brls [brls {brls ''brls "brls -brls !brls @brls #brls $brls %brls ^brls &brls *brls )brls _brls =brls +brls ]brls }brls \\brls |brls .brls ,brls ;brls :brls ?brls <brls >brls `brls ~brls /brls'
  - 'brls (;brls [;brls {;brls '';brls ";brls -;brls !;brls @;brls #;brls $;brls %;brls ^;brls &;brls *;brls );brls _;brls =;brls +;brls ];brls };brls \\;brls |;brls .;brls ,;brls ;;brls :;brls ?;brls <;brls >;brls `;brls ~;brls /;brls'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailles xl-([{''"brailles xl/-brailles xl$-brailles'
  - 'xl-brls xl-([{''"brls xl/-brls xl$-brls'
  - xfail: ...

- - 'xl(brailles xl[brailles xl{brailles xl''brailles xl"brailles xl-=([{''"brailles'
  - 'xl(brls xl[brls xl{brls xl''brls xl"brls xl-=([{''"brls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailles) brailles] brailles} brailles'' brailles" brailles- brailles, brailles. brailles; brailles: brailles? brailles!'
  - 'brls) brls] brls} brls'' brls" brls- brls, brls. brls; brls: brls? brls!'
  - xfail: ...

- - 'brailles@ brailles# brailles$ brailles% brailles^ brailles& brailles* brailles( brailles_ brailles= brailles+ brailles[ brailles{ brailles\\ brailles| brailles< brailles> brailles` brailles~ brailles/'
  - 'brls@ brls# brls$ brls% brls^ brls& brls* brls( brls_ brls= brls+ brls[ brls{ brls\\ brls| brls< brls> brls` brls~ brls/'
  - xfail: contraction followed by special characters is ignored

- - 'brls) brls] brls} brls'' brls" brls- brls, brls. brls; brls: brls? brls!'
  - ';brls) ;brls] ;brls} ;brls'' ;brls" ;brls- ;brls, ;brls. ;brls; ;brls: ;brls? ;brls!'
  - xfail: ...

- - 'brls@ brls# brls$ brls% brls^ brls& brls* brls( brls_ brls= brls+ brls[ brls{ brls\\ brls| brls< brls> brls` brls~ brls/'
  - ';brls@ ;brls# ;brls$ ;brls% ;brls^ ;brls& ;brls* ;brls( ;brls_ ;brls= ;brls+ ;brls[ ;brls{ ;brls\\ ;brls| ;brls< ;brls> ;brls` ;brls~ ;brls/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailles-xl brailles-([{''"xl brailles-/xl brailles-$xl'
  - 'brls-xl brls-([{''"xl brls-/xl brls-$xl'
  - xfail: ...

- - 'brailles(xl brailles[xl brailles{xl brailles''xl brailles"xl brailles=([{''"-xl brailles([{''"-xl brailles/-xl brailles$-xl'
  - 'brls(xl brls[xl brls{xl brls''xl brls"xl brls=([{''"-xl brls([{''"-xl brls/-xl brls$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(but [but {but ''but "but -but'
  - '(b [b {b ''b "b -b'
  - xfail: ...

- - '!but @but #but $but %but ^but &but *but )but _but =but +but ]but }but \\but |but .but ,but ;but :but ?but <but >but `but ~but /but'
  - '!b @b #b $b %b ^b &b *b )b _b =b +b ]b }b \\b |b .b ,b ;b :b ?b <b >b `b ~b /b'
  - xfail: contraction following special characters is ignored

- - '(b [b {b ''b "b -b'
  - '(;b [;b {;b '';b ";b -;b'
  - xfail: ...

- - '!b @b #b $b %b ^b &b *b )b _b =b +b ]b }b \\b |b .b ,b ;b :b ?b <b >b `b ~b /b'
  - '!;b @;b #;b $;b %;b ^;b &;b *;b );b _;b =;b +;b ];b };b \\;b |;b .;b ,;b ;;b :;b ?;b <;b >;b `;b ~;b /;b'
  - xfail: non-contraction following special characters hbut a missing grade 1 indicator

- - 'xl-but xl-([{''"but xl/-but xl$-but'
  - 'xl-b xl-([{''"b xl/-b xl$-b'
  - xfail: ...

- - 'xl(but xl[but xl{but xl''but xl"but xl-=([{''"but'
  - 'xl(b xl[b xl{b xl''b xl"b xl-=([{''"b'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'but) but] but} but'' but" but- but, but. but; but: but? but!'
  - 'b) b] b} b'' b" b- b, b. b; b: b? b!'
  - xfail: ...

- - 'but@ but# but$ but% but^ but& but* but( but_ but= but+ but[ but{ but\\ but| but< but> but` but~ but/'
  - 'b@ b# b$ b% b^ b& b* b( b_ b= b+ b[ b{ b\\ b| b< b> b` b~ b/'
  - xfail: contraction followed by special characters is ignored

- - 'b) b] b} b'' b" b- b, b. b; b: b? b!'
  - ';b) ;b] ;b} ;b'' ;b" ;b- ;b, ;b. ;b; ;b: ;b? ;b!'
  - xfail: ...

- - 'b@ b# b$ b% b^ b& b* b( b_ b= b+ b[ b{ b\\ b| b< b> b` b~ b/'
  - ';b@ ;b# ;b$ ;b% ;b^ ;b& ;b* ;b( ;b_ ;b= ;b+ ;b[ ;b{ ;b\\ ;b| ;b< ;b> ;b` ;b~ ;b/'
  - xfail: non-contraction following special characters hbut a missing grade 1 indicator

- - 'but-xl but-([{''"xl but-/xl but-$xl'
  - 'b-xl b-([{''"xl b-/xl b-$xl'
  - xfail: ...

- - 'but(xl but[xl but{xl but''xl but"xl but=([{''"-xl but([{''"-xl but/-xl but$-xl'
  - 'b(xl b[xl b{xl b''xl b"xl b=([{''"-xl b([{''"-xl b/-xl b$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(can [can {can ''can "can -can'
  - '(c [c {c ''c "c -c'
  - xfail: ...

- - '!can @can #can $can %can ^can &can *can )can _can =can +can ]can }can \\can |can .can ,can ;can :can ?can <can >can `can ~can /can'
  - '!c @c #c $c %c ^c &c *c )c _c =c +c ]c }c \\c |c .c ,c ;c :c ?c <c >c `c ~c /c'
  - xfail: contraction following special characters is ignored

- - '(c [c {c ''c "c -c'
  - '(;c [;c {;c '';c ";c -;c'
  - xfail: ...

- - '!c @c #c $c %c ^c &c *c )c _c =c +c ]c }c \\c |c .c ,c ;c :c ?c <c >c `c ~c /c'
  - '!;c @;c #;c $;c %;c ^;c &;c *;c );c _;c =;c +;c ];c };c \\;c |;c .;c ,;c ;;c :;c ?;c <;c >;c `;c ~;c /;c'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-can xl-([{''"can xl/-can xl$-can'
  - 'xl-c xl-([{''"c xl/-c xl$-c'
  - xfail: ...

- - 'xl(can xl[can xl{can xl''can xl"can xl-=([{''"can'
  - 'xl(c xl[c xl{c xl''c xl"c xl-=([{''"c'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'can) can] can} can'' can" can- can, can. can; can: can? can!'
  - 'c) c] c} c'' c" c- c, c. c; c: c? c!'
  - xfail: ...

- - 'can@ can# can$ can% can^ can& can* can( can_ can= can+ can[ can{ can\\ can| can< can> can` can~ can/'
  - 'c@ c# c$ c% c^ c& c* c( c_ c= c+ c[ c{ c\\ c| c< c> c` c~ c/'
  - xfail: contraction followed by special characters is ignored

- - 'c) c] c} c'' c" c- c, c. c; c: c? c!'
  - ';c) ;c] ;c} ;c'' ;c" ;c- ;c, ;c. ;c; ;c: ;c? ;c!'
  - xfail: ...

- - 'c@ c# c$ c% c^ c& c* c( c_ c= c+ c[ c{ c\\ c| c< c> c` c~ c/'
  - ';c@ ;c# ;c$ ;c% ;c^ ;c& ;c* ;c( ;c_ ;c= ;c+ ;c[ ;c{ ;c\\ ;c| ;c< ;c> ;c` ;c~ ;c/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'can-xl can-([{''"xl can-/xl can-$xl'
  - 'c-xl c-([{''"xl c-/xl c-$xl'
  - xfail: ...

- - 'can(xl can[xl can{xl can''xl can"xl can=([{''"-xl can([{''"-xl can/-xl can$-xl'
  - 'c(xl c[xl c{xl c''xl c"xl c=([{''"-xl c([{''"-xl c/-xl c$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(child [child {child ''child "child -child'
  - '(* [* {* ''* "* -*'
  - xfail: ...

- - '!child @child #child $child %child ^child &child *child )child _child =child +child ]child }child \\child |child .child ,child ;child :child ?child <child >child `child ~child /child'
  - '!* @* #* $* %* ^* &* ** )* _* =* +* ]* }* \\* |* .* ,* ;* :* ?* <* >* `* ~* /*'
  - xfail: contraction following special characters is ignored

- - '(ch [ch {ch ''ch "ch -ch'
  - '(ch [ch {ch ''ch "ch -ch'
  - xfail: ...

- - '!ch @ch #ch $ch %ch ^ch &ch *ch )ch _ch =ch +ch ]ch }ch \\ch |ch .ch ,ch ;ch :ch ?ch <ch >ch `ch ~ch /ch'
  - '!ch @ch #ch $ch %ch ^ch &ch *ch )ch _ch =ch +ch ]ch }ch \\ch |ch .ch ,ch ;ch :ch ?ch <ch >ch `ch ~ch /ch'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-child xl-([{''"child xl/-child xl$-child'
  - 'xl-* xl-([{''"* xl/-* xl$-*'
  - xfail: ...

- - 'xl(child xl[child xl{child xl''child xl"child xl-=([{''"child'
  - 'xl(* xl[* xl{* xl''* xl"* xl-=([{''"*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'child) child] child} child'' child" child- child, child. child; child: child? child!'
  - '*) *] *} *'' *" *- *, *. *; *: *? *!'
  - xfail: ...

- - 'child@ child# child$ child% child^ child& child* child( child_ child= child+ child[ child{ child\\ child| child< child> child` child~ child/'
  - '*@ *# *$ *% *^ *& ** *( *_ *= *+ *[ *{ *\\ *| *< *> *` *~ */'
  - xfail: contraction followed by special characters is ignored

- - 'ch) ch] ch} ch'' ch" ch- ch, ch. ch; ch: ch? ch!'
  - 'ch) ch] ch} ch'' ch" ch- ch, ch. ch; ch: ch? ch!'
  - xfail: ...

- - 'ch@ ch# ch$ ch% ch^ ch& ch* ch( ch_ ch= ch+ ch[ ch{ ch\\ ch| ch< ch> ch` ch~ ch/'
  - 'ch@ ch# ch$ ch% ch^ ch& ch* ch( ch_ ch= ch+ ch[ ch{ ch\\ ch| ch< ch> ch` ch~ ch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'child-xl child-([{''"xl child-/xl child-$xl'
  - '*-xl *-([{''"xl *-/xl *-$xl'
  - xfail: ...

- - 'child(xl child[xl child{xl child''xl child"xl child=([{''"-xl child([{''"-xl child/-xl child$-xl'
  - '*(xl *[xl *{xl *''xl *"xl *=([{''"-xl *([{''"-xl */-xl *$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(children [children {children ''children "children -children'
  - '(*n [*n {*n ''*n "*n -*n'
  - xfail: ...

- - '!children @children #children $children %children ^children &children *children )children _children =children +children ]children }children \\children |children .children ,children ;children :children ?children <children >children `children ~children /children'
  - '!*n @*n #*n $*n %*n ^*n &*n **n )*n _*n =*n +*n ]*n }*n \\*n |*n .*n ,*n chn :*n ?*n <*n >*n `*n ~*n /*n'
  - xfail: contraction following special characters is ignored

- - '(chn [chn {chn ''chn "chn -chn'
  - '(chn [chn {chn ''chn "chn -chn'
  - xfail: ...

- - '!chn @chn #chn $chn %chn ^chn &chn *chn )chn _chn =chn +chn ]chn }chn \\chn |chn .chn ,chn ;chn :chn ?chn <chn >chn `chn ~chn /chn'
  - '!chn @chn #chn $chn %chn ^chn &chn *chn )chn _chn =chn +chn ]chn }chn \\chn |chn .chn ,chn ;chn :chn ?chn <chn >chn `chn ~chn /chn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-children xl-([{''"children xl/-children xl$-children'
  - 'xl-*n xl-([{''"*n xl/-*n xl$-*n'
  - xfail: ...

- - 'xl(children xl[children xl{children xl''children xl"children xl-=([{''"children'
  - 'xl(*n xl[*n xl{*n xl''*n xl"*n xl-=([{''"*n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'children) children] children} children'' children" children- children, children. children; children: children? children!'
  - '*n) *n] *n} *n'' *n" *n- *n, *n. *n; *n: *n? *n!'
  - xfail: ...

- - 'children@ children# children$ children% children^ children& children* children( children_ children= children+ children[ children{ children\\ children| children< children> children` children~ children/'
  - '*n@ *n# *n$ *n% *n^ *n& *n* *n( *n_ *n= *n+ *n[ *n{ *n\\ *n| *n< *n> *n` *n~ *n/'
  - xfail: contraction followed by special characters is ignored

- - 'chn) chn] chn} chn'' chn" chn- chn, chn. chn; chn: chn? chn!'
  - 'chn) chn] chn} chn'' chn" chn- chn, chn. chn; chn: chn? chn!'
  - xfail: ...

- - 'chn@ chn# chn$ chn% chn^ chn& chn* chn( chn_ chn= chn+ chn[ chn{ chn\\ chn| chn< chn> chn` chn~ chn/'
  - 'chn@ chn# chn$ chn% chn^ chn& chn* chn( chn_ chn= chn+ chn[ chn{ chn\\ chn| chn< chn> chn` chn~ chn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'children-xl children-([{''"xl children-/xl children-$xl'
  - '*n-xl *n-([{''"xl *n-/xl *n-$xl'
  - xfail: ...

- - 'children(xl children[xl children{xl children''xl children"xl children=([{''"-xl children([{''"-xl children/-xl children$-xl'
  - '*n(xl *n[xl *n{xl *n''xl *n"xl *n=([{''"-xl *n([{''"-xl *n/-xl *n$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'childrenb childrenc childrend childrenf childreng childrenh childrenj childrenk childrenl childrenm childrenn childrenp childrenq childrenr childrens childrent childrenv childrenw childrenx childrenz'
  - '*nb *nc *nd *nf *ng *nh *nj *nk *nl *nm *nn *np *nq *nr *ns *nt *nv *nw *nx *nz'

- - 'chnb chnc chnd chnf chng chnh chnj chnk chnl chnm chnn chnp chnq chnr chns chnt chnv chnw chnx chnz'
  - 'chnb chnc chnd chnf chng chnh chnj chnk chnl chnm chnn chnp chnq chnr chns chnt chnv chnw chnx chnz'
  - xfail: non-contraction of "chn" followed by non-vowel letter has a missing grade 1 indicator due to conflict with contraction of "children"

- - 'achildren bchildren cchildren dchildren echildren  fchildren gchildren hchildren ichildren jchildren kchildren lchildren  mchildren nchildren ochildren p*n qchildren rchildren schildren tchildren uchildren  vchildren wchildren xchildren ychildren zchildren'
  - 'a*n b*n c*n d*n e*n  f*n g*n h*n i*n j*n k*n l*n  m*n n*n o*n p*n q*n r*n s*n t*n u*n  v*n w*n x*n y*n z*n'
  - xfail: ...

- - 'achn bchn cchn dchn echn  fchn gchn hchn ichn jchn kchn lchn  mchn nchn ochn pchn qchn rchn schn tchn uchn  vchn wchn xchn ychn zchn'
  - 'achn bchn cchn dchn echn  fchn gchn hchn ichn jchn kchn lchn  mchn nchn ochn pchn qchn rchn schn tchn uchn  vchn wchn xchn ychn zchn'
  - xfail: non-contraction of "chn" following letter has a missing grade 1 indicator due to conflict with contraction of "children"

- - '(conceive [conceive {conceive ''conceive "conceive -conceive'
  - '(3cv [3cv {3cv ''3cv "3cv -3cv'
  - xfail: ...

- - '!conceive @conceive #conceive $conceive %conceive ^conceive &conceive *conceive )conceive _conceive =conceive +conceive ]conceive }conceive \\conceive |conceive .conceive ,conceive ;conceive :conceive ?conceive <conceive >conceive `conceive ~conceive /conceive'
  - '!3cv @3cv #3cv $3cv %3cv ^3cv &3cv *3cv )3cv _3cv =3cv +3cv ]3cv }3cv \\3cv |3cv .3cv ,3cv ;3cv :3cv ?3cv <3cv >3cv `3cv ~3cv /3cv'
  - xfail: contraction following special characters is ignored

- - 'xl-conceive xl-([{''"conceive xl/-conceive xl$-conceive'
  - 'xl-3cv xl-([{''"3cv xl/-3cv xl$-3cv'
  - xfail: ...

- - 'xl(conceive xl[conceive xl{conceive xl''conceive xl"conceive xl-=([{''"conceive'
  - 'xl(3cv xl[3cv xl{3cv xl''3cv xl"3cv xl-=([{''"3cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceive) conceive] conceive} conceive'' conceive" conceive- conceive, conceive. conceive; conceive: conceive? conceive!'
  - '3cv) 3cv] 3cv} 3cv'' 3cv" 3cv- 3cv, 3cv. 3cv; 3cv: 3cv? 3cv!'
  - xfail: ...

- - 'conceive@ conceive# conceive$ conceive% conceive^ conceive& conceive* conceive( conceive_ conceive= conceive+ conceive[ conceive{ conceive\\ conceive| conceive< conceive> conceive` conceive~ conceive/'
  - '3cv@ 3cv# 3cv$ 3cv% 3cv^ 3cv& 3cv* 3cv( 3cv_ 3cv= 3cv+ 3cv[ 3cv{ 3cv\\ 3cv| 3cv< 3cv> 3cv` 3cv~ 3cv/'
  - xfail: contraction followed by special characters is ignored

- - 'concv@ concv# concv$ concv% concv^ concv& concv* concv( concv_ concv= concv+ concv[ concv{ concv\\ concv| concv< concv> concv` concv~ concv/'
  - 'concv@ concv# concv$ concv% concv^ concv& concv* concv( concv_ concv= concv+ concv[ concv{ concv\\ concv| concv< concv> concv` concv~ concv/'
  - xfail: non-contraction of "concv" conflicts with contraction of "conceive"

- - 'conceive-xl conceive-([{''"xl conceive-/xl conceive-$xl'
  - '3cv-xl 3cv-([{''"xl 3cv-/xl 3cv-$xl'
  - xfail: ...

- - 'conceive(xl conceive[xl conceive{xl conceive''xl conceive"xl conceive=([{''"-xl conceive([{''"-xl conceive/-xl conceive$-xl'
  - '3cv(xl 3cv[xl 3cv{xl 3cv''xl 3cv"xl 3cv=([{''"-xl 3cv([{''"-xl 3cv/-xl 3cv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceived [conceived {conceived ''conceived "conceived -conceived'
  - '(3cvd [3cvd {3cvd ''3cvd "3cvd -3cvd'
  - xfail: ...

- - '!conceived @conceived #conceived $conceived %conceived ^conceived &conceived *conceived )conceived _conceived =conceived +conceived ]conceived }conceived \\conceived |conceived .conceived ,conceived ;conceived :conceived ?conceived <conceived >conceived'
  - '!3cvd @3cvd #3cvd $3cvd %3cvd ^3cvd &3cvd *3cvd )3cvd _3cvd =3cvd +3cvd ]3cvd }3cvd \\3cvd |3cvd .3cvd ,3cvd ;3cvd :3cvd ?3cvd <3cvd >3cvd'
  - xfail: contraction following special characters is ignored

- - '`conceived ~conceived /conceived'
  - '`3cvd ~3cvd /3cv'
  - xfail: contraction following special characters is ignored

- - '!concvd @concvd #concvd $concvd %concvd ^concvd &concvd *concvd )concvd _concvd =concvd +concvd ]concvd erconcvd \\concvd |concvd .concvd ,concvd ;concvd :concvd ?concvd <concvd >concvd `concvd ~concvd /concvd'
  - '!concvd @concvd #concvd $concvd %concvd ^concvd &concvd *concvd )concvd _concvd =concvd +concvd ]concvd erconcvd \\concvd |concvd .concvd ,concvd ;concvd :concvd ?concvd <concvd >concvd `concvd ~concvd /concvd'
  - xfail: ...

- - 'concvd  (concvd [concvd {concvd ''concvd "concvd -concvd'
  - 'concvd  (concvd [concvd {concvd ''concvd "concvd -concvd'
  - xfail: non-contraction of "concvd" conflicts witcv contraction of "conceived"

- - 'xl-conceived xl-([{''"conceived xl/-conceived xl$-conceived'
  - 'xl-3cvd xl-([{''"3cvd xl/-3cvd xl$-3cvd'
  - xfail: ...

- - 'xl(conceived xl[conceived xl{conceived xl''conceived xl"conceived xl-=([{''"conceived'
  - 'xl(3cvd xl[3cvd xl{3cvd xl''3cvd xl"3cvd xl-=([{''"3cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceived) conceived] conceived} conceived'' conceived" conceived- conceived, conceived. conceived; conceived: conceived? conceived!'
  - '3cvd) 3cvd] 3cvd} 3cvd'' 3cvd" 3cvd- 3cvd, 3cvd. 3cvd; 3cvd: 3cvd? 3cvd!'
  - xfail: ...

- - 'conceived@ conceived# conceived$ conceived% conceived^ conceived& conceived* conceived( conceived_ conceived= conceived+ conceived[ conceived{ conceived\\ conceived| conceived< conceived> conceived` conceived~ conceived/'
  - '3cvd@ 3cvd# 3cvd$ 3cvd% 3cvd^ 3cvd& 3cvd* 3cvd( 3cvd_ 3cvd= 3cvd+ 3cvd[ 3cvd{ 3cvd\\ 3cvd| 3cvd< 3cvd> 3cvd` 3cvd~ 3cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'concvd) concvd] concvd} concvd'' concvd" concvd- concvd, concvd. concvd; concvd: concvd? concvd! concvd@ concvd# concvd$ concvd% concvd^ concvd& concvd* concvd( concvd_ concvd= concvd+ concvd[ concvd{ concvd\\ concvd| concvd< concvd> concvd` concvd~ concvd/'
  - 'concvd) concvd] concvd} concvd'' concvd" concvd- concvd, concvd. concvd; concvd: concvd? concvd! concvd@ concvd# concvd$ concvd% concvd^ concvd& concvd* concvd( concvd_ concvd= concvd+ concvd[ concvd{ concvd\\ concvd| concvd< concvd> concvd` concvd~ concvd/'
  - xfail: non-contraction of "concvd" conflicts with contraction of "conceived"

- - 'conceived-xl conceived-([{''"xl conceived-/xl conceived-$xl'
  - '3cvd-xl 3cvd-([{''"xl 3cvd-/xl 3cvd-$xl'
  - xfail: ...

- - 'conceived(xl conceived[xl conceived{xl conceived''xl conceived"xl conceived=([{''"-xl conceived([{''"-xl conceived/-xl conceived$-xl'
  - '3cvd(xl 3cvd[xl 3cvd{xl 3cvd''xl 3cvd"xl 3cvd=([{''"-xl 3cvd([{''"-xl 3cvd/-xl 3cvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceiving [conceiving {conceiving ''conceiving "conceiving -conceiving'
  - '(3cvg [3cvg {3cvg ''3cvg "3cvg -3cvg'
  - xfail: ...

- - '!conceiving @conceiving #conceiving $conceiving %conceiving ^conceiving &conceiving *conceiving )conceiving _conceiving =conceiving +conceiving ]conceiving }conceiving \\conceiving |conceiving .conceiving ,conceiving ;conceiving :conceiving ?conceiving'
  - '!3cvg @3cvg #3cvg $3cvg %3cvg ^3cvg &3cvg *3cvg )3cvg _3cvg =3cvg +3cvg ]3cvg }3cvg \\3cvg |3cvg .3cvg ,3cvg ;3cvg :3cvg ?3cvg'
  - xfail: contraction following special characters is ignored

- - '<conceiving >conceiving `conceiving ~conceiving /conceiving'
  - '<3cvg >3cvg `3cvg ~3cvg /3cvg'
  - xfail: contraction following special characters is ignored

- - 'xl-conceiving xl-([{''"conceiving xl/-conceiving xl$-conceiving'
  - 'xl-3cvg xl-([{''"3cvg xl/-3cvg xl$-3cvg'
  - xfail: ...

- - 'xl(conceiving xl[conceiving xl{conceiving xl''conceiving xl"conceiving xl-=([{''"conceiving'
  - 'xl(3cvg xl[3cvg xl{3cvg xl''3cvg xl"3cvg xl-=([{''"3cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceiving) conceiving] conceiving} conceiving'' conceiving" conceiving- conceiving, conceiving. conceiving; conceiving: conceiving? conceiving!'
  - '3cvg) 3cvg] 3cvg} 3cvg'' 3cvg" 3cvg- 3cvg, 3cvg. 3cvg; 3cvg: 3cvg? 3cvg!'
  - xfail: ...

- - 'conceiving@ conceiving# conceiving$ conceiving% conceiving^ conceiving& conceiving* conceiving( conceiving_ conceiving= conceiving+ conceiving[ conceiving{ conceiving\\ conceiving| conceiving< conceiving> conceiving` conceiving~ conceiving/'
  - '3cvg@ 3cvg# 3cvg$ 3cvg% 3cvg^ 3cvg& 3cvg* 3cvg( 3cvg_ 3cvg= 3cvg+ 3cvg[ 3cvg{ 3cvg\\ 3cvg| 3cvg< 3cvg> 3cvg` 3cvg~ 3cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'concvg) concvg] concvg} concvg'' concvg" concvg- concvg, concvg. concvg; concvg: concvg? concvg!'
  - 'concvg) concvg] concvg} concvg'' concvg" concvg- concvg, concvg. concvg; concvg: concvg? concvg!'
  - xfail: ...

- - 'concvg@ concvg# concvg$ concvg% concvg^ concvg& concvg* concvg( concvg_ concvg= concvg+ concvg[ concvg{ concvg\\ concvg| concvg< concvg> concvg` concvg~ concvg/'
  - 'concvg@ concvg# concvg$ concvg% concvg^ concvg& concvg* concvg( concvg_ concvg= concvg+ concvg[ concvg{ concvg\\ concvg| concvg< concvg> concvg` concvg~ concvg/'
  - xfail: non-contraction of "concvg" conflicts with contraction of "conceiving"

- - 'conceiving-xl conceiving-([{''"xl conceiving-/xl conceiving-$xl'
  - '3cvg-xl 3cvg-([{''"xl 3cvg-/xl 3cvg-$xl'
  - xfail: ...

- - 'conceiving(xl conceiving[xl conceiving{xl conceiving''xl conceiving"xl conceiving=([{''"-xl conceiving([{''"-xl conceiving/-xl conceiving$-xl'
  - '3cvg(xl 3cvg[xl 3cvg{xl 3cvg''xl 3cvg"xl 3cvg=([{''"-xl 3cvg([{''"-xl 3cvg/-xl 3cvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceiver [conceiver {conceiver ''conceiver "conceiver -conceiver'
  - '(3cvr [3cvr {3cvr ''3cvr "3cvr -3cvr'
  - xfail: ...

- - '!conceiver @conceiver #conceiver $conceiver %conceiver ^conceiver &conceiver *conceiver )conceiver _conceiver =conceiver +conceiver ]conceiver }conceiver \\conceiver |conceiver .conceiver ,conceiver ;conceiver :conceiver ?conceiver <conceiver >conceiver'
  - '!3cvr @3cvr #3cvr $3cvr %3cvr ^3cvr &3cvr *3cvr )3cvr _3cvr =3cvr +3cvr ]3cvr }3cvr \\3cvr |3cvr .3cvr ,3cvr ;3cvr :3cvr ?3cvr <3cvr >3cvr'
  - xfail: contraction following special characters is ignored

- - '`conceiver ~conceiver /conceiver'
  - '`3cvr ~3cvr /3cv'
  - xfail: contraction following special characters is ignored

- - '!concvr @concvr #concvr $concvr %concvr ^concvr &concvr *concvr )concvr _concvr =concvr +concvr ]concvr erconcvr \\concvr |concvr .concvr ,concvr ;concvr :concvr ?concvr <concvr >concvr `concvr ~concvr /concvr'
  - '!concvr @concvr #concvr $concvr %concvr ^concvr &concvr *concvr )concvr _concvr =concvr +concvr ]concvr erconcvr \\concvr |concvr .concvr ,concvr ;concvr :concvr ?concvr <concvr >concvr `concvr ~concvr /concvr'
  - xfail: ...

- - 'concvr  (concvr [concvr {concvr ''concvr "concvr -concvr'
  - 'concvr  (concvr [concvr {concvr ''concvr "concvr -concvr'
  - xfail: non-contraction of "concvr" conflicts witcv contraction of "conceiver"

- - 'xl-conceiver xl-([{''"conceiver xl/-conceiver xl$-conceiver'
  - 'xl-3cvr xl-([{''"3cvr xl/-3cvr xl$-3cvr'
  - xfail: ...

- - 'xl(conceiver xl[conceiver xl{conceiver xl''conceiver xl"conceiver xl-=([{''"conceiver'
  - 'xl(3cvr xl[3cvr xl{3cvr xl''3cvr xl"3cvr xl-=([{''"3cvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceiver) conceiver] conceiver} conceiver'' conceiver" conceiver- conceiver, conceiver. conceiver; conceiver: conceiver? conceiver!'
  - '3cvr) 3cvr] 3cvr} 3cvr'' 3cvr" 3cvr- 3cvr, 3cvr. 3cvr; 3cvr: 3cvr? 3cvr!'
  - xfail: ...

- - 'conceiver@ conceiver# conceiver$ conceiver% conceiver^ conceiver& conceiver* conceiver( conceiver_ conceiver= conceiver+ conceiver[ conceiver{ conceiver\\ conceiver| conceiver< conceiver> conceiver` conceiver~ conceiver/'
  - '3cvr@ 3cvr# 3cvr$ 3cvr% 3cvr^ 3cvr& 3cvr* 3cvr( 3cvr_ 3cvr= 3cvr+ 3cvr[ 3cvr{ 3cvr\\ 3cvr| 3cvr< 3cvr> 3cvr` 3cvr~ 3cvr/'
  - xfail: contraction followed by special characters is ignored

- - 'concvr) concvr] concvr} concvr'' concvr" concvr- concvr, concvr. concvr; concvr: concvr? concvr! concvr@ concvr# concvr$ concvr% concvr^ concvr& concvr* concvr( concvr_ concvr= concvr+ concvr[ concvr{ concvr\\ concvr| concvr< concvr> concvr` concvr~ concvr/'
  - 'concvr) concvr] concvr} concvr'' concvr" concvr- concvr, concvr. concvr; concvr: concvr? concvr! concvr@ concvr# concvr$ concvr% concvr^ concvr& concvr* concvr( concvr_ concvr= concvr+ concvr[ concvr{ concvr\\ concvr| concvr< concvr> concvr` concvr~ concvr/'
  - xfail: non-contraction of "concvr" conflicts with contraction of "conceiver"

- - 'conceiver-xl conceiver-([{''"xl conceiver-/xl conceiver-$xl'
  - '3cvr-xl 3cvr-([{''"xl 3cvr-/xl 3cvr-$xl'
  - xfail: ...

- - 'conceiver(xl conceiver[xl conceiver{xl conceiver''xl conceiver"xl conceiver=([{''"-xl conceiver([{''"-xl conceiver/-xl conceiver$-xl'
  - '3cvr(xl 3cvr[xl 3cvr{xl 3cvr''xl 3cvr"xl 3cvr=([{''"-xl 3cvr([{''"-xl 3cvr/-xl 3cvr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceivers [conceivers {conceivers ''conceivers "conceivers -conceivers'
  - '(3cvrs [3cvrs {3cvrs ''3cvrs "3cvrs -3cvrs'
  - xfail: ...

- - '!conceivers @conceivers #conceivers $conceivers %conceivers ^conceivers &conceivers *conceivers )conceivers _conceivers =conceivers +conceivers ]conceivers }conceivers \\conceivers |conceivers .conceivers ,conceivers ;conceivers :conceivers ?conceivers'
  - '!3cvrs @3cvrs #3cvrs $3cvrs %3cvrs ^3cvrs &3cvrs *3cvrs )3cvrs _3cvrs =3cvrs +3cvrs ]3cvrs }3cvrs \\3cvrs |3cvrs .3cvrs ,3cvrs ;3cvrs :3cvrs ?3cvrs'
  - xfail: contraction following special characters is ignored

- - '<conceivers >conceivers `conceivers ~conceivers /conceivers'
  - '<3cvrs >3cvrs `3cvrs ~3cvrs /3cv'
  - xfail: contraction following special characters is ignored

- - '!concvrs @concvrs #concvrs $concvrs %concvrs ^concvrs &concvrs *concvrs )concvrs _concvrs =concvrs +concvrs ]concvrs erconcvrs \\concvrs |concvrs .concvrs ,concvrs ;concvrs :concvrs ?concvrs <concvrs >concvrs `concvrs ~concvrs /concvrs'
  - '!concvrs @concvrs #concvrs $concvrs %concvrs ^concvrs &concvrs *concvrs )concvrs _concvrs =concvrs +concvrs ]concvrs erconcvrs \\concvrs |concvrs .concvrs ,concvrs ;concvrs :concvrs ?concvrs <concvrs >concvrs `concvrs ~concvrs /concvrs'
  - xfail: ...

- - 'concvrs  (concvrs [concvrs {concvrs ''concvrs "concvrs -concvrs'
  - 'concvrs  (concvrs [concvrs {concvrs ''concvrs "concvrs -concvrs'
  - xfail: non-contraction of "concvrs" conflicts witcv contraction of "conceivers"

- - 'xl-conceivers xl-([{''"conceivers xl/-conceivers xl$-conceivers'
  - 'xl-3cvrs xl-([{''"3cvrs xl/-3cvrs xl$-3cvrs'
  - xfail: ...

- - 'xl(conceivers xl[conceivers xl{conceivers xl''conceivers xl"conceivers xl-=([{''"conceivers'
  - 'xl(3cvrs xl[3cvrs xl{3cvrs xl''3cvrs xl"3cvrs xl-=([{''"3cvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceivers) conceivers] conceivers} conceivers'' conceivers" conceivers- conceivers, conceivers. conceivers; conceivers: conceivers? conceivers!'
  - '3cvrs) 3cvrs] 3cvrs} 3cvrs'' 3cvrs" 3cvrs- 3cvrs, 3cvrs. 3cvrs; 3cvrs: 3cvrs? 3cvrs!'
  - xfail: ...

- - 'conceivers@ conceivers# conceivers$ conceivers% conceivers^ conceivers& conceivers* conceivers( conceivers_ conceivers= conceivers+ conceivers[ conceivers{ conceivers\\ conceivers| conceivers< conceivers> conceivers` conceivers~ conceivers/'
  - '3cvrs@ 3cvrs# 3cvrs$ 3cvrs% 3cvrs^ 3cvrs& 3cvrs* 3cvrs( 3cvrs_ 3cvrs= 3cvrs+ 3cvrs[ 3cvrs{ 3cvrs\\ 3cvrs| 3cvrs< 3cvrs> 3cvrs` 3cvrs~ 3cvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'concvrs) concvrs] concvrs} concvrs'' concvrs" concvrs- concvrs, concvrs. concvrs; concvrs: concvrs? concvrs! concvrs@ concvrs# concvrs$ concvrs% concvrs^ concvrs& concvrs* concvrs( concvrs_ concvrs= concvrs+ concvrs[ concvrs{ concvrs\\ concvrs| concvrs< concvrs>'
  - 'concvrs) concvrs] concvrs} concvrs'' concvrs" concvrs- concvrs, concvrs. concvrs; concvrs: concvrs? concvrs! concvrs@ concvrs# concvrs$ concvrs% concvrs^ concvrs& concvrs* concvrs( concvrs_ concvrs= concvrs+ concvrs[ concvrs{ concvrs\\ concvrs| concvrs< concvrs>'
  - xfail: non-contraction of "concvrs" conflicts with contraction of "conceivers"

- - 'concvrs` concvrs~ concvrs/'
  - 'concvrs` concvrs~ concvrs/'
  - xfail: non-contraction of "concvrs" conflicts with contraction of "conceivers"

- - 'conceivers-xl conceivers-([{''"xl conceivers-/xl conceivers-$xl'
  - '3cvrs-xl 3cvrs-([{''"xl 3cvrs-/xl 3cvrs-$xl'
  - xfail: ...

- - 'conceivers(xl conceivers[xl conceivers{xl conceivers''xl conceivers"xl conceivers=([{''"-xl conceivers([{''"-xl conceivers/-xl conceivers$-xl'
  - '3cvrs(xl 3cvrs[xl 3cvrs{xl 3cvrs''xl 3cvrs"xl 3cvrs=([{''"-xl 3cvrs([{''"-xl 3cvrs/-xl 3cvrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceives [conceives {conceives ''conceives "conceives -conceives'
  - '(3cvs [3cvs {3cvs ''3cvs "3cvs -3cvs'
  - xfail: ...

- - '!conceives @conceives #conceives $conceives %conceives ^conceives &conceives *conceives )conceives _conceives =conceives +conceives ]conceives }conceives \\conceives |conceives .conceives ,conceives ;conceives :conceives ?conceives <conceives >conceives'
  - '!3cvs @3cvs #3cvs $3cvs %3cvs ^3cvs &3cvs *3cvs )3cvs _3cvs =3cvs +3cvs ]3cvs }3cvs \\3cvs |3cvs .3cvs ,3cvs ;3cvs :3cvs ?3cvs <3cvs >3cvs'
  - xfail: contraction following special characters is ignored

- - '`conceives ~conceives /conceives'
  - '`3cvs ~3cvs /3cv'
  - xfail: contraction following special characters is ignored

- - '!concvs @concvs #concvs $concvs %concvs ^concvs &concvs *concvs )concvs _concvs =concvs +concvs ]concvs erconcvs \\concvs |concvs .concvs ,concvs ;concvs :concvs ?concvs <concvs >concvs `concvs ~concvs /concvs'
  - '!concvs @concvs #concvs $concvs %concvs ^concvs &concvs *concvs )concvs _concvs =concvs +concvs ]concvs erconcvs \\concvs |concvs .concvs ,concvs ;concvs :concvs ?concvs <concvs >concvs `concvs ~concvs /concvs'
  - xfail: ...

- - 'concvs  (concvs [concvs {concvs ''concvs "concvs -concvs'
  - 'concvs  (concvs [concvs {concvs ''concvs "concvs -concvs'
  - xfail: non-contraction of "concvs" conflicts witcv contraction of "conceives"

- - 'xl-conceives xl-([{''"conceives xl/-conceives xl$-conceives'
  - 'xl-3cvs xl-([{''"3cvs xl/-3cvs xl$-3cvs'
  - xfail: ...

- - 'xl(conceives xl[conceives xl{conceives xl''conceives xl"conceives xl-=([{''"conceives'
  - 'xl(3cvs xl[3cvs xl{3cvs xl''3cvs xl"3cvs xl-=([{''"3cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceives) conceives] conceives} conceives'' conceives" conceives- conceives, conceives. conceives; conceives: conceives? conceives!'
  - '3cvs) 3cvs] 3cvs} 3cvs'' 3cvs" 3cvs- 3cvs, 3cvs. 3cvs; 3cvs: 3cvs? 3cvs!'
  - xfail: ...

- - 'conceives@ conceives# conceives$ conceives% conceives^ conceives& conceives* conceives( conceives_ conceives= conceives+ conceives[ conceives{ conceives\\ conceives| conceives< conceives> conceives` conceives~ conceives/'
  - '3cvs@ 3cvs# 3cvs$ 3cvs% 3cvs^ 3cvs& 3cvs* 3cvs( 3cvs_ 3cvs= 3cvs+ 3cvs[ 3cvs{ 3cvs\\ 3cvs| 3cvs< 3cvs> 3cvs` 3cvs~ 3cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'concvs) concvs] concvs} concvs'' concvs" concvs- concvs, concvs. concvs; concvs: concvs? concvs! concvs@ concvs# concvs$ concvs% concvs^ concvs& concvs* concvs( concvs_ concvs= concvs+ concvs[ concvs{ concvs\\ concvs| concvs< concvs> concvs` concvs~ concvs/'
  - 'concvs) concvs] concvs} concvs'' concvs" concvs- concvs, concvs. concvs; concvs: concvs? concvs! concvs@ concvs# concvs$ concvs% concvs^ concvs& concvs* concvs( concvs_ concvs= concvs+ concvs[ concvs{ concvs\\ concvs| concvs< concvs> concvs` concvs~ concvs/'
  - xfail: non-contraction of "concvs" conflicts with contraction of "conceives"

- - 'conceives-xl conceives-([{''"xl conceives-/xl conceives-$xl'
  - '3cvs-xl 3cvs-([{''"xl 3cvs-/xl 3cvs-$xl'
  - xfail: ...

- - 'conceives(xl conceives[xl conceives{xl conceives''xl conceives"xl conceives=([{''"-xl conceives([{''"-xl conceives/-xl conceives$-xl'
  - '3cvs(xl 3cvs[xl 3cvs{xl 3cvs''xl 3cvs"xl 3cvs=([{''"-xl 3cvs([{''"-xl 3cvs/-xl 3cvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conk [conk {conk ''conk "conk -conk !conk .conk ,conk ;conk :conk ?conk *conk =conk +conk @conk #conk $conk %conk ^conk &conk )conk _conk ]conk }conk \\conk |conk <conk >conk `conk ~conk /conk'
  - '(3k [3k {3k ''conk "conk -conk !conk .conk ,conk ;conk :conk ?conk *3k =3k +3k @3k #3k $3k %3k ^3k &3k )3k _3k ]3k }3k \\3k |3k <3k >3k ?3k `3k ~3k /3k'
  - xfail: contraction following special characters and followed by "k"  is ignored

- - 'xl(conk xl[conk xl{conk'
  - 'xl(3k xl[3k xl{3k'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conk) conk] conk} conk'' conk" conk- conk, conk. conk? conk! conk; conk: conk@ conk# conk$ conk% conk^ conk& conk* conk( conk_ conk= conk+ conk[ conk{ conk\\ conk| conk< conk> conk` conk~ conk/'
  - '3k) 3k] 3k} conk'' conk" conk- conk, conk. conk? conk! conk; conk: 3k@ 3k# 3k$ 3k% 3k^ 3k& 3k* 3k( 3k_ 3k= 3k+ 3k[ 3k{ 3k\\ 3k| 3k< 3k> 3k` 3k~ 3k/'
  - xfail: contraction followed by "k" followed by special characters is ignored

- - 'conk(xl conk[conk conk{xl'
  - '3k(xl 3k[xl'
  - xfail: contraction followed by "k" followed by special characters is ignored

- - '(cons [cons {cons ''cons "cons -cons !cons .cons ,cons ;cons :cons ?cons *cons =cons +cons @cons #cons $cons %cons ^cons &cons )cons _cons ]cons }cons \\cons |cons <cons >cons `cons ~cons /cons'
  - '(3s [3s {3s ''cons "cons -cons !cons .cons ,cons ;cons :cons ?cons *3s =3s +3s @3s #3s $3s %3s ^3s &3s )3s _3s ]3s }3s \\3s |3s <3s >3s ?3s `3s ~3s /3s'
  - xfail: contraction following special characters and followed by "s"  is ignored

- - 'xl(cons xl[cons xl{cons'
  - 'xl(3s xl[3s xl{3s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'cons) cons] cons} cons'' cons" cons- cons, cons. cons? cons! cons; cons: cons@ cons# cons$ cons% cons^ cons& cons* cons( cons_ cons= cons+ cons[ cons{ cons\\ cons| cons< cons> cons` cons~ cons/'
  - '3s) 3s] 3s} cons'' cons" cons- cons, cons. cons? cons! cons; cons: 3s@ 3s# 3s$ 3s% 3s^ 3s& 3s* 3s( 3s_ 3s= 3s+ 3s[ 3s{ 3s\\ 3s| 3s< 3s> 3s` 3s~ 3s/'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - 'cons(xl cons[cons cons{xl'
  - '3s(xl 3s[xl'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - '(cont [cont {cont ''cont "cont -cont'
  - '(3t [3t {3t ''cont "cont -cont'
  - xfail: ...

- - '!cont .cont ,cont ;cont :cont ?cont *cont =cont +cont @cont #cont $cont %cont ^cont &cont )cont _cont ]cont }cont \\cont |cont <cont >cont `cont ~cont /cont'
  - '!cont .cont ,cont ;cont :cont ?cont *3t =3t +3t @3t #3t $3t %3t ^3t &3t )3t _3t ]3t }3t \\3t |3t <3t >3t ?3t `3t ~3t /3t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'xl(cont xl[cont xl{cont'
  - 'xl(3t xl[3t xl{3t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'cont) cont] cont} cont'' cont" cont- cont, cont. cont? cont! cont; cont: cont@ cont# cont$ cont% cont^ cont& cont* cont( cont_ cont= cont+ cont[ cont{ cont\\ cont| cont< cont> cont` cont~ cont/'
  - '3t) 3t] 3t} cont'' cont" cont- cont, cont. cont? cont! cont; cont: 3t@ 3t# 3t$ 3t% 3t^ 3t& 3t* 3t( 3t_ 3t= 3t+ 3t[ 3t{ 3t\\ 3t| 3t< 3t> 3t` 3t~ 3t/'
  - xfail: ...

- - 'cont(xl cont[cont cont{xl'
  - '3t(xl 3t[xl'
  - xfail: ...

- - '(could [could {could ''could "could -could'
  - '(cd [cd {cd ''cd "cd -cd'
  - xfail: ...

- - '!could @could #could $could %could ^could &could *could )could _could =could +could ]could }could \\could |could .could ,could ;could :could ?could <could >could `could ~could /could'
  - '!cd @cd #cd $cd %cd ^cd &cd *cd )cd _cd =cd +cd ]cd }cd \\cd |cd .cd ,cd ;cd :cd ?cd <cd >cd ?cd `cd ~cd /cd'
  - xfail: contraction following special characters is ignored

- - '(cd [cd {cd ''cd "cd -cd'
  - '(;cd [;cd {;cd '';cd ";cd -;cd'
  - xfail: ...

- - '!cd @cd #cd $cd %cd ^cd &cd *cd )cd _cd =cd +cd ]cd }cd \\cd |cd .cd ,cd ;cd :cd ?cd <cd >cd ?cd `cd ~cd /cd'
  - '!;cd @;cd #;cd $;cd %;cd ^;cd &;cd *;cd );cd _;cd =;cd +;cd ];cd };cd \\;cd |;cd .;cd ,;cd ;;cd :;cd ?;cd <;cd >;cd `;cd ~;cd /;cd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-could xl-([{''"could xl/-could xl$-could'
  - 'xl-cd xl-([{''"cd xl/-cd xl$-cd'
  - xfail: ...

- - 'xl(could xl[could xl{could xl''could xl"could xl-=([{''"could'
  - 'xl(cd xl[cd xl{cd xl''cd xl"cd xl-=([{''"cd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'could) could] could} could'' could" could- could, could. could; could: could? could!'
  - 'cd) cd] cd} cd'' cd" cd- cd, cd. cd; cd: cd? cd!'
  - xfail: ...

- - 'could@ could# could$ could% could^ could& could* could( could_ could= could+ could[ could{ could\\ could| could< could> could` could~ could/'
  - 'cd@ cd# cd$ cd% cd^ cd& cd* cd( cd_ cd= cd+ cd[ cd{ cd\\ cd| cd< cd> cd` cd~ cd/'
  - xfail: contraction followed by special characters is ignored

- - 'cd) cd] cd} cd'' cd" cd- cd, cd. cd; cd: cd? cd!'
  - ';cd) ;cd] ;cd} ;cd'' ;cd" ;cd- ;cd, ;cd. ;cd; ;cd: ;cd? ;cd!'
  - xfail: ...

- - 'cd@ cd# cd$ cd% cd^ cd& cd* cd( cd_ cd= cd+ cd[ cd{ cd\\ cd| cd< cd> cd` cd~ cd/'
  - ';cd@ ;cd# ;cd$ ;cd% ;cd^ ;cd& ;cd* ;cd( ;cd_ ;cd= ;cd+ ;cd[ ;cd{ ;cd\\ ;cd| ;cd< ;cd> ;cd` ;cd~ ;cd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'could-xl could-([{''"xl could-/xl could-$xl'
  - 'cd-xl cd-([{''"xl cd-/xl cd-$xl'
  - xfail: ...

- - 'could(xl could[xl could{xl could''xl could"xl could=([{''"-xl could([{''"-xl could/-xl could$-xl'
  - 'cd(xl cd[xl cd{xl cd''xl cd"xl cd=([{''"-xl cd([{''"-xl cd/-xl cd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(coulds [coulds {coulds ''coulds "coulds -coulds'
  - '(cds [cds {cds ''cds "cds -cds'
  - xfail: ...

- - '!coulds @coulds #coulds $coulds %coulds ^coulds &coulds *coulds )coulds _coulds =coulds +coulds ]coulds }coulds \\coulds |coulds .coulds ,coulds ;coulds :coulds ?coulds <coulds >coulds `coulds ~coulds /coulds'
  - '!cds @cds #cds $cds %cds ^cds &cds *cds )cds _cds =cds +cds ]cds }cds \\cds |cds .cds ,cds ;cds :cds ?cds <cds >cds ?cds `cds ~cds /cds'
  - xfail: contraction following special characters is ignored

- - 'cds  (cds [cds {cds ''cds "cds -cds !cds @cds #cds $cds %cds ^cds &cds *cds )cds _cds =cds +cds ]cds }cds \\cds |cds .cds ,cds ;cds :cds ?cds <cds >cds ?cds `cds ~cds /cds'
  - ';cds  (;cds [;cds {;cds '';cds ";cds -;cds !;cds @;cds #;cds $;cds %;cds ^;cds &;cds *;cds );cds _;cds =;cds +;cds ];cds };cds \\;cds |;cds .;cds ,;cds ;;cds :;cds ?;cds <;cds >;cds `;cds ~;cds /;cds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-coulds xl-([{''"coulds xl/-coulds xl$-coulds'
  - 'xl-cds xl-([{''"cds xl/-cds xl$-cds'
  - xfail: ...

- - 'xl(coulds xl[coulds xl{coulds xl''coulds xl"coulds xl-=([{''"coulds'
  - 'xl(cds xl[cds xl{cds xl''cds xl"cds xl-=([{''"cds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'coulds) coulds] coulds} coulds'' coulds" coulds- coulds, coulds. coulds; coulds: coulds? coulds!'
  - 'cds) cds] cds} cds'' cds" cds- cds, cds. cds; cds: cds? cds!'
  - xfail: ...

- - 'coulds@ coulds# coulds$ coulds% coulds^ coulds& coulds* coulds( coulds_ coulds= coulds+ coulds[ coulds{ coulds\\ coulds| coulds< coulds> coulds` coulds~ coulds/'
  - 'cds@ cds# cds$ cds% cds^ cds& cds* cds( cds_ cds= cds+ cds[ cds{ cds\\ cds| cds< cds> cds` cds~ cds/'
  - xfail: contraction followed by special characters is ignored

- - 'cds) cds] cds} cds'' cds" cds- cds, cds. cds; cds: cds? cds! cds@ cds# cds$ cds% cds^ cds& cds* cds( cds_ cds= cds+ cds[ cds{ cds\\ cds| cds< cds> cds` cds~ cds/'
  - ';cds) ;cds] ;cds} ;cds'' ;cds" ;cds- ;cds, ;cds. ;cds; ;cds: ;cds? ;cds! ;cds@ ;cds# ;cds$ ;cds% ;cds^ ;cds& ;cds* ;cds( ;cds_ ;cds= ;cds+ ;cds[ ;cds{ ;cds\\ ;cds| ;cds< ;cds> ;cds` ;cds~ ;cds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'coulds-xl coulds-([{''"xl coulds-/xl coulds-$xl'
  - 'cds-xl cds-([{''"xl cds-/xl cds-$xl'
  - xfail: ...

- - 'coulds(xl coulds[xl coulds{xl coulds''xl coulds"xl coulds=([{''"-xl coulds([{''"-xl coulds/-xl coulds$-xl'
  - 'cds(xl cds[xl cds{xl cds''xl cds"xl cds=([{''"-xl cds([{''"-xl cds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(coulda [coulda {coulda ''coulda "coulda -coulda'
  - '(cda [cda {cda ''cda "cda -cda'
  - xfail: ...

- - '!coulda @coulda #coulda $coulda %coulda ^coulda &coulda *coulda )coulda _coulda =coulda +coulda ]coulda }coulda \\coulda |coulda .coulda ,coulda ;coulda :coulda ?coulda <coulda >coulda `coulda ~coulda /coulda'
  - '!cda @cda #cda $cda %cda ^cda &cda *cda )cda _cda =cda +cda ]cda }cda \\cda |cda .cda ,cda ;cda :cda ?cda <cda >cda ?cda `cda ~cda /cda'
  - xfail: contraction following special characters is ignored

- - '(cda [cda {cda ''cda "cda -cda'
  - '(;cda [;cda {;cda '';cda ";cda -;cda'
  - xfail: ...

- - '!cda @cda #cda $cda %cda ^cda &cda *cda )cda _cda =cda +cda ]cda }cda \\cda |cda .cda ,cda ;cda :cda ?cda <cda >cda ?cda `cda ~cda /cda'
  - '!;cda @;cda #;cda $;cda %;cda ^;cda &;cda *;cda );cda _;cda =;cda +;cda ];cda };cda \\;cda |;cda .;cda ,;cda ;;cda :;cda ?;cda <;cda >;cda `;cda ~;cda /;cda'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-coulda xl-([{''"coulda xl/-coulda xl$-coulda'
  - 'xl-cda xl-([{''"cda xl/-cda xl$-cda'
  - xfail: ...

- - 'xl(coulda xl[coulda xl{coulda xl''coulda xl"coulda xl-=([{''"coulda'
  - 'xl(cda xl[cda xl{cda xl''cda xl"cda xl-=([{''"cda'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'coulda) coulda] coulda} coulda'' coulda" coulda- coulda, coulda. coulda; coulda: coulda? coulda!'
  - 'cda) cda] cda} cda'' cda" cda- cda, cda. cda; cda: cda? cda!'
  - xfail: ...

- - 'coulda@ coulda# coulda$ coulda% coulda^ coulda& coulda* coulda( coulda_ coulda= coulda+ coulda[ coulda{ coulda\\ coulda| coulda< coulda> coulda` coulda~ coulda/'
  - 'cda@ cda# cda$ cda% cda^ cda& cda* cda( cda_ cda= cda+ cda[ cda{ cda\\ cda| cda< cda> cda` cda~ cda/'
  - xfail: contraction followed by special characters is ignored

- - 'cda) cda] cda} cda'' cda" cda- cda, cda. cda; cda: cda? cda!'
  - ';cda) ;cda] ;cda} ;cda'' ;cda" ;cda- ;cda, ;cda. ;cda; ;cda: ;cda? ;cda!'
  - xfail: ...

- - 'cda@ cda# cda$ cda% cda^ cda& cda* cda( cda_ cda= cda+ cda[ cda{ cda\\ cda| cda< cda> cda` cda~ cda/'
  - ';cda@ ;cda# ;cda$ ;cda% ;cda^ ;cda& ;cda* ;cda( ;cda_ ;cda= ;cda+ ;cda[ ;cda{ ;cda\\ ;cda| ;cda< ;cda> ;cda` ;cda~ ;cda/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'coulda-xl coulda-([{''"xl coulda-/xl coulda-$xl'
  - 'cda-xl cda-([{''"xl cda-/xl cda-$xl'
  - xfail: ...

- - 'coulda(xl coulda[xl coulda{xl coulda''xl coulda"xl coulda=([{''"-xl coulda([{''"-xl coulda/-xl coulda$-xl'
  - 'cda(xl cda[xl cda{xl cda''xl cda"xl cda=([{''"-xl cda([{''"-xl cda/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceive [deceive {deceive ''deceive "deceive -deceive'
  - '(dcv [dcv {dcv ''dcv "dcv -dcv'
  - xfail: ...

- - '!deceive @deceive #deceive $deceive %deceive ^deceive &deceive *deceive )deceive _deceive =deceive +deceive ]deceive }deceive \\deceive |deceive .deceive ,deceive ;deceive :deceive ?deceive <deceive >deceive `deceive ~deceive /deceive'
  - '!dcv @dcv #dcv $dcv %dcv ^dcv &dcv *dcv )dcv _dcv =dcv +dcv ]dcv }dcv \\dcv |dcv .dcv ,dcv ;dcv :dcv ?dcv <dcv >dcv `dcv ~dcv /dcv'
  - xfail: contraction following special characters is ignored

- - '(dcv [dcv {dcv ''dcv "dcv -dcv'
  - '(;dcv [;dcv {;dcv '';dcv ";dcv -;dcv'
  - xfail: ...

- - '!dcv @dcv #dcv $dcv %dcv ^dcv &dcv *dcv )dcv _dcv =dcv +dcv ]dcv }dcv \\dcv |dcv .dcv ,dcv ;dcv :dcv ?dcv <dcv >dcv `dcv ~dcv /dcv'
  - '!;dcv @;dcv #;dcv $;dcv %;dcv ^;dcv &;dcv *;dcv );dcv _;dcv =;dcv +;dcv ];dcv };dcv \\;dcv |;dcv .;dcv ,;dcv ;;dcv :;dcv ?;dcv <;dcv >;dcv `;dcv ~;dcv /;dcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceive xl-([{''"deceive xl/-deceive xl$-deceive'
  - 'xl-dcv xl-([{''"dcv xl/-dcv xl$-dcv'
  - xfail: ...

- - 'xl(deceive xl[deceive xl{deceive xl''deceive xl"deceive xl-=([{''"deceive'
  - 'xl(dcv xl[dcv xl{dcv xl''dcv xl"dcv xl-=([{''"dcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceive) deceive] deceive} deceive'' deceive" deceive- deceive, deceive. deceive; deceive: deceive? deceive!'
  - 'dcv) dcv] dcv} dcv'' dcv" dcv- dcv, dcv. dcv; dcv: dcv? dcv!'
  - xfail: ...

- - 'deceive@ deceive# deceive$ deceive% deceive^ deceive& deceive* deceive( deceive_ deceive= deceive+ deceive[ deceive{ deceive\\ deceive| deceive< deceive> deceive` deceive~ deceive/'
  - 'dcv@ dcv# dcv$ dcv% dcv^ dcv& dcv* dcv( dcv_ dcv= dcv+ dcv[ dcv{ dcv\\ dcv| dcv< dcv> dcv` dcv~ dcv/'
  - xfail: contraction followed by special characters is ignored

- - 'dcv) dcv] dcv} dcv'' dcv" dcv- dcv, dcv. dcv; dcv: dcv? dcv!'
  - ';dcv) ;dcv] ;dcv} ;dcv'' ;dcv" ;dcv- ;dcv, ;dcv. ;dcv; ;dcv: ;dcv? ;dcv!'
  - xfail: ...

- - 'dcv@ dcv# dcv$ dcv% dcv^ dcv& dcv* dcv( dcv_ dcv= dcv+ dcv[ dcv{ dcv\\ dcv| dcv< dcv> dcv` dcv~ dcv/'
  - ';dcv@ ;dcv# ;dcv$ ;dcv% ;dcv^ ;dcv& ;dcv* ;dcv( ;dcv_ ;dcv= ;dcv+ ;dcv[ ;dcv{ ;dcv\\ ;dcv| ;dcv< ;dcv> ;dcv` ;dcv~ ;dcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceive-xl deceive-([{''"xl deceive-/xl deceive-$xl'
  - 'dcv-xl dcv-([{''"xl dcv-/xl dcv-$xl'
  - xfail: ...

- - 'deceive(xl deceive[xl deceive{xl deceive''xl deceive"xl deceive=([{''"-xl deceive([{''"-xl deceive/-xl deceive$-xl'
  - 'dcv(xl dcv[xl dcv{xl dcv''xl dcv"xl dcv=([{''"-xl dcv([{''"-xl dcv/-xl dcv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceived [deceived {deceived ''deceived "deceived -deceived'
  - '(dcvd [dcvd {dcvd ''dcvd "dcvd -dcvd'
  - xfail: ...

- - '!deceived @deceived #deceived $deceived %deceived ^deceived &deceived *deceived )deceived _deceived =deceived +deceived ]deceived }deceived \\deceived |deceived .deceived ,deceived ;deceived :deceived ?deceived <deceived >deceived `deceived ~deceived /deceived'
  - '!dcvd @dcvd #dcvd $dcvd %dcvd ^dcvd &dcvd *dcvd )dcvd _dcvd =dcvd +dcvd ]dcvd }dcvd \\dcvd |dcvd .dcvd ,dcvd ;dcvd :dcvd ?dcvd <dcvd >dcvd `dcvd ~dcvd /dcvd'
  - xfail: contraction following special characters is ignored

- - '(dcvd [dcvd {dcvd ''dcvd "dcvd -dcvd'
  - '(;dcvd [;dcvd {;dcvd '';dcvd ";dcvd -;dcvd'
  - xfail: ...

- - '!dcvd @dcvd #dcvd $dcvd %dcvd ^dcvd &dcvd *dcvd )dcvd _dcvd =dcvd +dcvd ]dcvd }dcvd \\dcvd |dcvd .dcvd ,dcvd ;dcvd :dcvd ?dcvd <dcvd >dcvd `dcvd ~dcvd /dcvd'
  - '!;dcvd @;dcvd #;dcvd $;dcvd %;dcvd ^;dcvd &;dcvd *;dcvd );dcvd _;dcvd =;dcvd +;dcvd ];dcvd };dcvd \\;dcvd |;dcvd .;dcvd ,;dcvd ;;dcvd :;dcvd ?;dcvd <;dcvd >;dcvd `;dcvd ~;dcvd /;dcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceived xl-([{''"deceived xl/-deceived xl$-deceived'
  - 'xl-dcvd xl-([{''"dcvd xl/-dcvd xl$-dcvd'
  - xfail: ...

- - 'xl(deceived xl[deceived xl{deceived xl''deceived xl"deceived xl-=([{''"deceived'
  - 'xl(dcvd xl[dcvd xl{dcvd xl''dcvd xl"dcvd xl-=([{''"dcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceived) deceived] deceived} deceived'' deceived" deceived- deceived, deceived. deceived; deceived: deceived? deceived!'
  - 'dcvd) dcvd] dcvd} dcvd'' dcvd" dcvd- dcvd, dcvd. dcvd; dcvd: dcvd? dcvd!'
  - xfail: ...

- - 'deceived@ deceived# deceived$ deceived% deceived^ deceived& deceived* deceived( deceived_ deceived= deceived+ deceived[ deceived{ deceived\\ deceived| deceived< deceived> deceived` deceived~ deceived/'
  - 'dcvd@ dcvd# dcvd$ dcvd% dcvd^ dcvd& dcvd* dcvd( dcvd_ dcvd= dcvd+ dcvd[ dcvd{ dcvd\\ dcvd| dcvd< dcvd> dcvd` dcvd~ dcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvd) dcvd] dcvd} dcvd'' dcvd" dcvd- dcvd, dcvd. dcvd; dcvd: dcvd? dcvd!'
  - ';dcvd) ;dcvd] ;dcvd} ;dcvd'' ;dcvd" ;dcvd- ;dcvd, ;dcvd. ;dcvd; ;dcvd: ;dcvd? ;dcvd!'
  - xfail: ...

- - 'dcvd@ dcvd# dcvd$ dcvd% dcvd^ dcvd& dcvd* dcvd( dcvd_ dcvd= dcvd+ dcvd[ dcvd{ dcvd\\ dcvd| dcvd< dcvd> dcvd` dcvd~ dcvd/'
  - ';dcvd@ ;dcvd# ;dcvd$ ;dcvd% ;dcvd^ ;dcvd& ;dcvd* ;dcvd( ;dcvd_ ;dcvd= ;dcvd+ ;dcvd[ ;dcvd{ ;dcvd\\ ;dcvd| ;dcvd< ;dcvd> ;dcvd` ;dcvd~ ;dcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceived-xl deceived-([{''"xl deceived-/xl deceived-$xl'
  - 'dcvd-xl dcvd-([{''"xl dcvd-/xl dcvd-$xl'
  - xfail: ...

- - 'deceived(xl deceived[xl deceived{xl deceived''xl deceived"xl deceived=([{''"-xl deceived([{''"-xl deceived/-xl deceived$-xl'
  - 'dcvd(xl dcvd[xl dcvd{xl dcvd''xl dcvd"xl dcvd=([{''"-xl dcvd([{''"-xl dcvd/-xl dcvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceiving [deceiving {deceiving ''deceiving "deceiving -deceiving'
  - '(dcvg [dcvg {dcvg ''dcvg "dcvg -dcvg'
  - xfail: ...

- - '!deceiving @deceiving #deceiving $deceiving %deceiving ^deceiving &deceiving *deceiving )deceiving _deceiving =deceiving +deceiving ]deceiving }deceiving \\deceiving |deceiving .deceiving ,deceiving ;deceiving :deceiving ?deceiving <deceiving >deceiving'
  - '!dcvg @dcvg #dcvg $dcvg %dcvg ^dcvg &dcvg *dcvg )dcvg _dcvg =dcvg +dcvg ]dcvg }dcvg \\dcvg |dcvg .dcvg ,dcvg ;dcvg :dcvg ?dcvg <dcvg >dcvg'
  - xfail: contraction following special characters is ignored

- - '`deceiving ~deceiving /deceiving'
  - '`dcvg ~dcvg /dcvg'
  - xfail: contraction following special characters is ignored

- - '(dcvg [dcvg {dcvg ''dcvg "dcvg -dcvg'
  - '(;dcvg [;dcvg {;dcvg '';dcvg ";dcvg -;dcvg'
  - xfail: ...

- - '!dcvg @dcvg #dcvg $dcvg %dcvg ^dcvg &dcvg *dcvg )dcvg _dcvg =dcvg +dcvg ]dcvg }dcvg \\dcvg |dcvg .dcvg ,dcvg ;dcvg :dcvg ?dcvg <dcvg >dcvg `dcvg ~dcvg /dcvg'
  - '!;dcvg @;dcvg #;dcvg $;dcvg %;dcvg ^;dcvg &;dcvg *;dcvg );dcvg _;dcvg =;dcvg +;dcvg ];dcvg };dcvg \\;dcvg |;dcvg .;dcvg ,;dcvg ;;dcvg :;dcvg ?;dcvg <;dcvg >;dcvg `;dcvg ~;dcvg /;dcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceiving xl-([{''"deceiving xl/-deceiving xl$-deceiving'
  - 'xl-dcvg xl-([{''"dcvg xl/-dcvg xl$-dcvg'
  - xfail: ...

- - 'xl(deceiving xl[deceiving xl{deceiving xl''deceiving xl"deceiving xl-=([{''"deceiving'
  - 'xl(dcvg xl[dcvg xl{dcvg xl''dcvg xl"dcvg xl-=([{''"dcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceiving) deceiving] deceiving} deceiving'' deceiving" deceiving- deceiving, deceiving. deceiving; deceiving: deceiving? deceiving!'
  - 'dcvg) dcvg] dcvg} dcvg'' dcvg" dcvg- dcvg, dcvg. dcvg; dcvg: dcvg? dcvg!'
  - xfail: ...

- - 'deceiving@ deceiving# deceiving$ deceiving% deceiving^ deceiving& deceiving* deceiving( deceiving_ deceiving= deceiving+ deceiving[ deceiving{ deceiving\\ deceiving| deceiving< deceiving> deceiving` deceiving~ deceiving/'
  - 'dcvg@ dcvg# dcvg$ dcvg% dcvg^ dcvg& dcvg* dcvg( dcvg_ dcvg= dcvg+ dcvg[ dcvg{ dcvg\\ dcvg| dcvg< dcvg> dcvg` dcvg~ dcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvg) dcvg] dcvg} dcvg'' dcvg" dcvg- dcvg, dcvg. dcvg; dcvg: dcvg? dcvg!'
  - ';dcvg) ;dcvg] ;dcvg} ;dcvg'' ;dcvg" ;dcvg- ;dcvg, ;dcvg. ;dcvg; ;dcvg: ;dcvg? ;dcvg!'
  - xfail: ...

- - 'dcvg@ dcvg# dcvg$ dcvg% dcvg^ dcvg& dcvg* dcvg( dcvg_ dcvg= dcvg+ dcvg[ dcvg{ dcvg\\ dcvg| dcvg< dcvg> dcvg` dcvg~ dcvg/'
  - ';dcvg@ ;dcvg# ;dcvg$ ;dcvg% ;dcvg^ ;dcvg& ;dcvg* ;dcvg( ;dcvg_ ;dcvg= ;dcvg+ ;dcvg[ ;dcvg{ ;dcvg\\ ;dcvg| ;dcvg< ;dcvg> ;dcvg` ;dcvg~ ;dcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceiving-xl deceiving-([{''"xl deceiving-/xl deceiving-$xl'
  - 'dcvg-xl dcvg-([{''"xl dcvg-/xl dcvg-$xl'
  - xfail: ...

- - 'deceiving(xl deceiving[xl deceiving{xl deceiving''xl deceiving"xl deceiving=([{''"-xl deceiving([{''"-xl deceiving/-xl deceiving$-xl'
  - 'dcvg(xl dcvg[xl dcvg{xl dcvg''xl dcvg"xl dcvg=([{''"-xl dcvg([{''"-xl dcvg/-xl dcvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceiver [deceiver {deceiver ''deceiver "deceiver -deceiver'
  - '(dcvr [dcvr {dcvr ''dcvr "dcvr -dcvr'
  - xfail: ...

- - '!deceiver @deceiver #deceiver $deceiver %deceiver ^deceiver &deceiver *deceiver )deceiver _deceiver =deceiver +deceiver ]deceiver }deceiver \\deceiver |deceiver .deceiver ,deceiver ;deceiver :deceiver ?deceiver <deceiver >deceiver `deceiver ~deceiver /deceiver'
  - '!dcvr @dcvr #dcvr $dcvr %dcvr ^dcvr &dcvr *dcvr )dcvr _dcvr =dcvr +dcvr ]dcvr }dcvr \\dcvr |dcvr .dcvr ,dcvr ;dcvr :dcvr ?dcvr <dcvr >dcvr `dcvr ~dcvr /dcvr'
  - xfail: contraction following special characters is ignored

- - '(dcvr [dcvr {dcvr ''dcvr "dcvr -dcvr'
  - '(;dcvr [;dcvr {;dcvr '';dcvr ";dcvr -;dcvr'
  - xfail: ...

- - '!dcvr @dcvr #dcvr $dcvr %dcvr ^dcvr &dcvr *dcvr )dcvr _dcvr =dcvr +dcvr ]dcvr }dcvr \\dcvr |dcvr .dcvr ,dcvr ;dcvr :dcvr ?dcvr <dcvr >dcvr `dcvr ~dcvr /dcvr'
  - '!;dcvr @;dcvr #;dcvr $;dcvr %;dcvr ^;dcvr &;dcvr *;dcvr );dcvr _;dcvr =;dcvr +;dcvr ];dcvr };dcvr \\;dcvr |;dcvr .;dcvr ,;dcvr ;;dcvr :;dcvr ?;dcvr <;dcvr >;dcvr `;dcvr ~;dcvr /;dcvr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceiver xl-([{''"deceiver xl/-deceiver xl$-deceiver'
  - 'xl-dcvr xl-([{''"dcvr xl/-dcvr xl$-dcvr'
  - xfail: ...

- - 'xl(deceiver xl[deceiver xl{deceiver xl''deceiver xl"deceiver xl-=([{''"deceiver'
  - 'xl(dcvr xl[dcvr xl{dcvr xl''dcvr xl"dcvr xl-=([{''"dcvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceiver) deceiver] deceiver} deceiver'' deceiver" deceiver- deceiver, deceiver. deceiver; deceiver: deceiver? deceiver!'
  - 'dcvr) dcvr] dcvr} dcvr'' dcvr" dcvr- dcvr, dcvr. dcvr; dcvr: dcvr? dcvr!'
  - xfail: ...

- - 'deceiver@ deceiver# deceiver$ deceiver% deceiver^ deceiver& deceiver* deceiver( deceiver_ deceiver= deceiver+ deceiver[ deceiver{ deceiver\\ deceiver| deceiver< deceiver> deceiver` deceiver~ deceiver/'
  - 'dcvr@ dcvr# dcvr$ dcvr% dcvr^ dcvr& dcvr* dcvr( dcvr_ dcvr= dcvr+ dcvr[ dcvr{ dcvr\\ dcvr| dcvr< dcvr> dcvr` dcvr~ dcvr/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvr) dcvr] dcvr} dcvr'' dcvr" dcvr- dcvr, dcvr. dcvr; dcvr: dcvr? dcvr!'
  - ';dcvr) ;dcvr] ;dcvr} ;dcvr'' ;dcvr" ;dcvr- ;dcvr, ;dcvr. ;dcvr; ;dcvr: ;dcvr? ;dcvr!'
  - xfail: ...

- - 'dcvr@ dcvr# dcvr$ dcvr% dcvr^ dcvr& dcvr* dcvr( dcvr_ dcvr= dcvr+ dcvr[ dcvr{ dcvr\\ dcvr| dcvr< dcvr> dcvr` dcvr~ dcvr/'
  - ';dcvr@ ;dcvr# ;dcvr$ ;dcvr% ;dcvr^ ;dcvr& ;dcvr* ;dcvr( ;dcvr_ ;dcvr= ;dcvr+ ;dcvr[ ;dcvr{ ;dcvr\\ ;dcvr| ;dcvr< ;dcvr> ;dcvr` ;dcvr~ ;dcvr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceiver-xl deceiver-([{''"xl deceiver-/xl deceiver-$xl'
  - 'dcvr-xl dcvr-([{''"xl dcvr-/xl dcvr-$xl'
  - xfail: ...

- - 'deceiver(xl deceiver[xl deceiver{xl deceiver''xl deceiver"xl deceiver=([{''"-xl deceiver([{''"-xl deceiver/-xl deceiver$-xl'
  - 'dcvr(xl dcvr[xl dcvr{xl dcvr''xl dcvr"xl dcvr=([{''"-xl dcvr([{''"-xl dcvr/-xl dcvr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceivers [deceivers {deceivers ''deceivers "deceivers -deceivers'
  - '(dcvrs [dcvrs {dcvrs ''dcvrs "dcvrs -dcvrs'
  - xfail: ...

- - '!deceivers @deceivers #deceivers $deceivers %deceivers ^deceivers &deceivers *deceivers )deceivers _deceivers =deceivers +deceivers ]deceivers }deceivers \\deceivers |deceivers .deceivers ,deceivers ;deceivers :deceivers ?deceivers <deceivers >deceivers'
  - '!dcvrs @dcvrs #dcvrs $dcvrs %dcvrs ^dcvrs &dcvrs *dcvrs )dcvrs _dcvrs =dcvrs +dcvrs ]dcvrs }dcvrs \\dcvrs |dcvrs .dcvrs ,dcvrs ;dcvrs :dcvrs ?dcvrs <dcvrs >dcvrs'
  - xfail: contraction following special characters is ignored

- - '`deceivers ~deceivers ~deceivers'
  - '`dcvrs ~dcvrs /dcvrs'
  - xfail: contraction following special characters is ignored

- - 'dcvrs (dcvrs [dcvrs {dcvrs ''dcvrs "dcvrs -dcvrs !dcvrs @dcvrs #dcvrs $dcvrs %dcvrs ^dcvrs &dcvrs *dcvrs )dcvrs _dcvrs =dcvrs +dcvrs ]dcvrs }dcvrs \\dcvrs |dcvrs .dcvrs ,dcvrs ;dcvrs :dcvrs ?dcvrs <dcvrs >dcvrs `dcvrs ~dcvrs /dcvrs'
  - ';dcvrs (;dcvrs [;dcvrs {;dcvrs '';dcvrs ";dcvrs -;dcvrs !;dcvrs @;dcvrs #;dcvrs $;dcvrs %;dcvrs ^;dcvrs &;dcvrs *;dcvrs );dcvrs _;dcvrs =;dcvrs +;dcvrs ];dcvrs };dcvrs \\;dcvrs |;dcvrs .;dcvrs ,;dcvrs ;;dcvrs :;dcvrs ?;dcvrs <;dcvrs >;dcvrs `;dcvrs ~;dcvrs /;dcvrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceivers xl-([{''"deceivers xl/-deceivers xl$-deceivers'
  - 'xl-dcvrs xl-([{''"dcvrs xl/-dcvrs xl$-dcvrs'
  - xfail: ...

- - 'xl(deceivers xl[deceivers xl{deceivers xl''deceivers xl"deceivers xl-=([{''"deceivers'
  - 'xl(dcvrs xl[dcvrs xl{dcvrs xl''dcvrs xl"dcvrs xl-=([{''"dcvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceivers) deceivers] deceivers} deceivers'' deceivers" deceivers- deceivers, deceivers. deceivers; deceivers: deceivers? deceivers!'
  - 'dcvrs) dcvrs] dcvrs} dcvrs'' dcvrs" dcvrs- dcvrs, dcvrs. dcvrs; dcvrs: dcvrs? dcvrs!'
  - xfail: ...

- - 'deceivers@ deceivers# deceivers$ deceivers% deceivers^ deceivers& deceivers* deceivers( deceivers_ deceivers= deceivers+ deceivers[ deceivers{ deceivers\\ deceivers| deceivers< deceivers> deceivers` deceivers~ deceivers/'
  - 'dcvrs@ dcvrs# dcvrs$ dcvrs% dcvrs^ dcvrs& dcvrs* dcvrs( dcvrs_ dcvrs= dcvrs+ dcvrs[ dcvrs{ dcvrs\\ dcvrs| dcvrs< dcvrs> dcvrs` dcvrs~ dcvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvrs) dcvrs] dcvrs} dcvrs'' dcvrs" dcvrs- dcvrs, dcvrs. dcvrs; dcvrs: dcvrs? dcvrs! dcvrs@ dcvrs# dcvrs$ dcvrs% dcvrs^ dcvrs& dcvrs* dcvrs( dcvrs_ dcvrs= dcvrs+ dcvrs[ dcvrs{ dcvrs\\ dcvrs| dcvrs< dcvrs> dcvrs` dcvrs~ dcvrs/'
  - ';dcvrs) ;dcvrs] ;dcvrs} ;dcvrs'' ;dcvrs" ;dcvrs- ;dcvrs, ;dcvrs. ;dcvrs; ;dcvrs: ;dcvrs? ;dcvrs! ;dcvrs@ ;dcvrs# ;dcvrs$ ;dcvrs% ;dcvrs^ ;dcvrs& ;dcvrs* ;dcvrs( ;dcvrs_ ;dcvrs= ;dcvrs+ ;dcvrs[ ;dcvrs{ ;dcvrs\\ ;dcvrs| ;dcvrs< ;dcvrs> ;dcvrs` ;dcvrs~ ;dcvrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceivers-xl deceivers-([{''"xl deceivers-/xl deceivers-$xl'
  - 'dcvrs-xl dcvrs-([{''"xl dcvrs-/xl dcvrs-$xl'
  - xfail: ...

- - 'deceivers(xl deceivers[xl deceivers{xl deceivers''xl deceivers"xl deceivers=([{''"-xl deceivers([{''"-xl deceivers/-xl deceivers$-xl'
  - 'dcvrs(xl dcvrs[xl dcvrs{xl dcvrs''xl dcvrs"xl dcvrs=([{''"-xl dcvrs([{''"-xl dcvrs/-xl dcvrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceives [deceives {deceives ''deceives "deceives -deceives'
  - '(dcvs [dcvs {dcvs ''dcvs "dcvs -dcvs'
  - xfail: ...

- - '!deceives @deceives #deceives $deceives %deceives ^deceives &deceives *deceives )deceives _deceives =deceives +deceives ]deceives }deceives \\deceives |deceives .deceives ,deceives ;deceives :deceives ?deceives <deceives >deceives `deceives ~deceives /deceives'
  - '!dcvs @dcvs #dcvs $dcvs %dcvs ^dcvs &dcvs *dcvs )dcvs _dcvs =dcvs +dcvs ]dcvs }dcvs \\dcvs |dcvs .dcvs ,dcvs ;dcvs :dcvs ?dcvs <dcvs >dcvs `dcvs ~dcvs /dcvs'
  - xfail: contraction following special characters is ignored

- - 'dcvs (dcvs [dcvs {dcvs ''dcvs "dcvs -dcvs !dcvs @dcvs #dcvs $dcvs %dcvs ^dcvs &dcvs *dcvs )dcvs _dcvs =dcvs +dcvs ]dcvs }dcvs \\dcvs |dcvs .dcvs ,dcvs ;dcvs :dcvs ?dcvs <dcvs >dcvs `dcvs ~dcvs /dcvs'
  - ';dcvs (;dcvs [;dcvs {;dcvs '';dcvs ";dcvs -;dcvs !;dcvs @;dcvs #;dcvs $;dcvs %;dcvs ^;dcvs &;dcvs *;dcvs );dcvs _;dcvs =;dcvs +;dcvs ];dcvs };dcvs \\;dcvs |;dcvs .;dcvs ,;dcvs ;;dcvs :;dcvs ?;dcvs <;dcvs >;dcvs `;dcvs ~;dcvs /;dcvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceives xl-([{''"deceives xl/-deceives xl$-deceives'
  - 'xl-dcvs xl-([{''"dcvs xl/-dcvs xl$-dcvs'
  - xfail: ...

- - 'xl(deceives xl[deceives xl{deceives xl''deceives xl"deceives xl-=([{''"deceives'
  - 'xl(dcvs xl[dcvs xl{dcvs xl''dcvs xl"dcvs xl-=([{''"dcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceives) deceives] deceives} deceives'' deceives" deceives- deceives, deceives. deceives; deceives: deceives? deceives!'
  - 'dcvs) dcvs] dcvs} dcvs'' dcvs" dcvs- dcvs, dcvs. dcvs; dcvs: dcvs? dcvs!'
  - xfail: ...

- - 'deceives@ deceives# deceives$ deceives% deceives^ deceives& deceives* deceives( deceives_ deceives= deceives+ deceives[ deceives{ deceives\\ deceives| deceives< deceives> deceives` deceives~ deceives/'
  - 'dcvs@ dcvs# dcvs$ dcvs% dcvs^ dcvs& dcvs* dcvs( dcvs_ dcvs= dcvs+ dcvs[ dcvs{ dcvs\\ dcvs| dcvs< dcvs> dcvs` dcvs~ dcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvs) dcvs] dcvs} dcvs'' dcvs" dcvs- dcvs, dcvs. dcvs; dcvs: dcvs? dcvs! dcvs@ dcvs# dcvs$ dcvs% dcvs^ dcvs& dcvs* dcvs( dcvs_ dcvs= dcvs+ dcvs[ dcvs{ dcvs\\ dcvs| dcvs< dcvs> dcvs` dcvs~ dcvs/'
  - ';dcvs) ;dcvs] ;dcvs} ;dcvs'' ;dcvs" ;dcvs- ;dcvs, ;dcvs. ;dcvs; ;dcvs: ;dcvs? ;dcvs! ;dcvs@ ;dcvs# ;dcvs$ ;dcvs% ;dcvs^ ;dcvs& ;dcvs* ;dcvs( ;dcvs_ ;dcvs= ;dcvs+ ;dcvs[ ;dcvs{ ;dcvs\\ ;dcvs| ;dcvs< ;dcvs> ;dcvs` ;dcvs~ ;dcvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceives-xl deceives-([{''"xl deceives-/xl deceives-$xl'
  - 'dcvs-xl dcvs-([{''"xl dcvs-/xl dcvs-$xl'
  - xfail: ...

- - 'deceives(xl deceives[xl deceives{xl deceives''xl deceives"xl deceives=([{''"-xl deceives([{''"-xl deceives/-xl deceives$-xl'
  - 'dcvs(xl dcvs[xl dcvs{xl dcvs''xl dcvs"xl dcvs=([{''"-xl dcvs([{''"-xl dcvs/-xl dcvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceive [undeceive {undeceive ''undeceive "undeceive -undeceive'
  - '(undcv [undcv {undcv ''undcv "undcv -undcv'
  - xfail: ...

- - '!undeceive @undeceive #undeceive $undeceive %undeceive ^undeceive &undeceive *undeceive )undeceive _undeceive =undeceive +undeceive ]undeceive }undeceive \\undeceive |undeceive .undeceive ,undeceive ;undeceive :undeceive ?undeceive <undeceive >undeceive'
  - '!undcv @undcv #undcv $undcv %undcv ^undcv &undcv *undcv )undcv _undcv =undcv +undcv ]undcv }undcv \\undcv |undcv .undcv ,undcv ;undcv :undcv ?undcv <undcv >undcv'
  - xfail: contraction following special characters is ignored

- - '`undeceive ~undeceive /undeceive'
  - '`undcv ~undcv /undcv'
  - xfail: contraction following special characters is ignored

- - '(undcv [undcv {undcv ''undcv "undcv -undcv'
  - '(;undcv [;undcv {;undcv '';undcv ";undcv -;undcv'
  - xfail: ...

- - '!undcv @undcv #undcv $undcv %undcv ^undcv &undcv *undcv )undcv _undcv =undcv +undcv ]undcv }undcv \\undcv |undcv .undcv ,undcv ;undcv :undcv ?undcv <undcv >undcv `undcv ~undcv /undcv'
  - '!;undcv @;undcv #;undcv $;undcv %;undcv ^;undcv &;undcv *;undcv );undcv _;undcv =;undcv +;undcv ];undcv };undcv \\;undcv |;undcv .;undcv ,;undcv ;;undcv :;undcv ?;undcv <;undcv >;undcv `;undcv ~;undcv /;undcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceive xl-([{''"undeceive xl/-undeceive xl$-undeceive'
  - 'xl-undcv xl-([{''"undcv xl/-undcv xl$-undcv'
  - xfail: ...

- - 'xl(undeceive xl[undeceive xl{undeceive xl''undeceive xl"undeceive xl-=([{''"undeceive'
  - 'xl(undcv xl[undcv xl{undcv xl''undcv xl"undcv xl-=([{''"undcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceive) undeceive] undeceive} undeceive'' undeceive" undeceive- undeceive, undeceive. undeceive; undeceive: undeceive? undeceive!'
  - 'undcv) undcv] undcv} undcv'' undcv" undcv- undcv, undcv. undcv; undcv: undcv? undcv!'
  - xfail: ...

- - 'undeceive@ undeceive# undeceive$ undeceive% undeceive^ undeceive& undeceive* undeceive( undeceive_ undeceive= undeceive+ undeceive[ undeceive{ undeceive\\ undeceive| undeceive< undeceive> undeceive` undeceive~ undeceive/'
  - 'undcv@ undcv# undcv$ undcv% undcv^ undcv& undcv* undcv( undcv_ undcv= undcv+ undcv[ undcv{ undcv\\ undcv| undcv< undcv> undcv` undcv~ undcv/'
  - xfail: contraction followed by special characters is ignored

- - 'undcv) undcv] undcv} undcv'' undcv" undcv- undcv, undcv. undcv; undcv: undcv? undcv!'
  - ';undcv) ;undcv] ;undcv} ;undcv'' ;undcv" ;undcv- ;undcv, ;undcv. ;undcv; ;undcv: ;undcv? ;undcv!'
  - xfail: ...

- - 'undcv@ undcv# undcv$ undcv% undcv^ undcv& undcv* undcv( undcv_ undcv= undcv+ undcv[ undcv{ undcv\\ undcv| undcv< undcv> undcv` undcv~ undcv/'
  - ';undcv@ ;undcv# ;undcv$ ;undcv% ;undcv^ ;undcv& ;undcv* ;undcv( ;undcv_ ;undcv= ;undcv+ ;undcv[ ;undcv{ ;undcv\\ ;undcv| ;undcv< ;undcv> ;undcv` ;undcv~ ;undcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceive-xl undeceive-([{''"xl undeceive-/xl undeceive-$xl'
  - 'undcv-xl undcv-([{''"xl undcv-/xl undcv-$xl'
  - xfail: ...

- - 'undeceive(xl undeceive[xl undeceive{xl undeceive''xl undeceive"xl undeceive=([{''"-xl undeceive([{''"-xl undeceive/-xl undeceive$-xl'
  - 'undcv(xl undcv[xl undcv{xl undcv''xl undcv"xl undcv=([{''"-xl undcv([{''"-xl undcv/-xl undcv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceived [undeceived {undeceived ''undeceived "undeceived -undeceived'
  - '(undcvd [undcvd {undcvd ''undcvd "undcvd -undcvd'
  - xfail: ...

- - '!undeceived @undeceived #undeceived $undeceived %undeceived ^undeceived &undeceived *undeceived )undeceived _undeceived =undeceived +undeceived ]undeceived }undeceived \\undeceived |undeceived .undeceived ,undeceived ;undeceived :undeceived ?undeceived'
  - '!undcvd @undcvd #undcvd $undcvd %undcvd ^undcvd &undcvd *undcvd )undcvd _undcvd =undcvd +undcvd ]undcvd }undcvd \\undcvd |undcvd .undcvd ,undcvd ;undcvd :undcvd ?undcvd'
  - xfail: contraction following special characters is ignored

- - '<undeceived >undeceived `undeceived ~undeceived /undeceived'
  - '<undcvd >undcvd `undcvd ~undcvd /undcvd'
  - xfail: contraction following special characters is ignored

- - '(undcvd [undcvd {undcvd ''undcvd "undcvd -undcvd'
  - '(;undcvd [;undcvd {;undcvd '';undcvd ";undcvd -;undcvd'
  - xfail: ...

- - '!undcvd @undcvd #undcvd $undcvd %undcvd ^undcvd &undcvd *undcvd )undcvd _undcvd =undcvd +undcvd ]undcvd }undcvd \\undcvd |undcvd .undcvd ,undcvd ;undcvd :undcvd ?undcvd <undcvd >undcvd `undcvd ~undcvd /undcvd'
  - '!;undcvd @;undcvd #;undcvd $;undcvd %;undcvd ^;undcvd &;undcvd *;undcvd );undcvd _;undcvd =;undcvd +;undcvd ];undcvd };undcvd \\;undcvd |;undcvd .;undcvd ,;undcvd ;;undcvd :;undcvd ?;undcvd <;undcvd >;undcvd `;undcvd ~;undcvd /;undcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceived xl-([{''"undeceived xl/-undeceived xl$-undeceived'
  - 'xl-undcvd xl-([{''"undcvd xl/-undcvd xl$-undcvd'
  - xfail: ...

- - 'xl(undeceived xl[undeceived xl{undeceived xl''undeceived xl"undeceived xl-=([{''"undeceived'
  - 'xl(undcvd xl[undcvd xl{undcvd xl''undcvd xl"undcvd xl-=([{''"undcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceived) undeceived] undeceived} undeceived'' undeceived" undeceived- undeceived, undeceived. undeceived; undeceived: undeceived? undeceived!'
  - 'undcvd) undcvd] undcvd} undcvd'' undcvd" undcvd- undcvd, undcvd. undcvd; undcvd: undcvd? undcvd!'
  - xfail: ...

- - 'undeceived@ undeceived# undeceived$ undeceived% undeceived^ undeceived& undeceived* undeceived( undeceived_ undeceived= undeceived+ undeceived[ undeceived{ undeceived\\ undeceived| undeceived< undeceived> undeceived` undeceived~ undeceived/'
  - 'undcvd@ undcvd# undcvd$ undcvd% undcvd^ undcvd& undcvd* undcvd( undcvd_ undcvd= undcvd+ undcvd[ undcvd{ undcvd\\ undcvd| undcvd< undcvd> undcvd` undcvd~ undcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvd) undcvd] undcvd} undcvd'' undcvd" undcvd- undcvd, undcvd. undcvd; undcvd: undcvd? undcvd!'
  - ';undcvd) ;undcvd] ;undcvd} ;undcvd'' ;undcvd" ;undcvd- ;undcvd, ;undcvd. ;undcvd; ;undcvd: ;undcvd? ;undcvd!'
  - xfail: ...

- - 'undcvd@ undcvd# undcvd$ undcvd% undcvd^ undcvd& undcvd* undcvd( undcvd_ undcvd= undcvd+ undcvd[ undcvd{ undcvd\\ undcvd| undcvd< undcvd> undcvd` undcvd~ undcvd/'
  - ';undcvd@ ;undcvd# ;undcvd$ ;undcvd% ;undcvd^ ;undcvd& ;undcvd* ;undcvd( ;undcvd_ ;undcvd= ;undcvd+ ;undcvd[ ;undcvd{ ;undcvd\\ ;undcvd| ;undcvd< ;undcvd> ;undcvd` ;undcvd~ ;undcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceived-xl undeceived-([{''"xl undeceived-/xl undeceived-$xl'
  - 'undcvd-xl undcvd-([{''"xl undcvd-/xl undcvd-$xl'
  - xfail: ...

- - 'undeceived(xl undeceived[xl undeceived{xl undeceived''xl undeceived"xl undeceived=([{''"-xl undeceived([{''"-xl undeceived/-xl undeceived$-xl'
  - 'undcvd(xl undcvd[xl undcvd{xl undcvd''xl undcvd"xl undcvd=([{''"-xl undcvd([{''"-xl undcvd/-xl undcvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceiving [undeceiving {undeceiving ''undeceiving "undeceiving -undeceiving'
  - '(undcvg [undcvg {undcvg ''undcvg "undcvg -undcvg'
  - xfail: ...

- - '!undeceiving @undeceiving #undeceiving $undeceiving %undeceiving ^undeceiving &undeceiving *undeceiving )undeceiving _undeceiving =undeceiving +undeceiving ]undeceiving }undeceiving \\undeceiving |undeceiving .undeceiving ,undeceiving ;undeceiving :undeceiving'
  - '!undcvg @undcvg #undcvg $undcvg %undcvg ^undcvg &undcvg *undcvg )undcvg _undcvg =undcvg +undcvg ]undcvg }undcvg \\undcvg |undcvg .undcvg ,undcvg ;undcvg :undcvg'
  - xfail: contraction following special characters is ignored

- - '?undeceiving <undeceiving >undeceiving `undeceiving ~undeceiving /undeceiving'
  - '?undcvg <undcvg >undcvg `undcvg ~undcvg /undcvg'
  - xfail: contraction following special characters is ignored

- - '(undcvg [undcvg {undcvg ''undcvg "undcvg -undcvg'
  - '(;undcvg [;undcvg {;undcvg '';undcvg ";undcvg -;undcvg'
  - xfail: ...

- - '!undcvg @undcvg #undcvg $undcvg %undcvg ^undcvg &undcvg *undcvg )undcvg _undcvg =undcvg +undcvg ]undcvg }undcvg \\undcvg |undcvg .undcvg ,undcvg ;undcvg :undcvg ?undcvg <undcvg >undcvg `undcvg ~undcvg /undcvg'
  - '!;undcvg @;undcvg #;undcvg $;undcvg %;undcvg ^;undcvg &;undcvg *;undcvg );undcvg _;undcvg =;undcvg +;undcvg ];undcvg };undcvg \\;undcvg |;undcvg .;undcvg ,;undcvg ;;undcvg :;undcvg ?;undcvg <;undcvg >;undcvg `;undcvg ~;undcvg /;undcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceiving xl-([{''"undeceiving xl/-undeceiving xl$-undeceiving'
  - 'xl-undcvg xl-([{''"undcvg xl/-undcvg xl$-undcvg'
  - xfail: ...

- - 'xl(undeceiving xl[undeceiving xl{undeceiving xl''undeceiving xl"undeceiving xl-=([{''"undeceiving'
  - 'xl(undcvg xl[undcvg xl{undcvg xl''undcvg xl"undcvg xl-=([{''"undcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceiving) undeceiving] undeceiving} undeceiving'' undeceiving" undeceiving- undeceiving, undeceiving. undeceiving; undeceiving: undeceiving? undeceiving!'
  - 'undcvg) undcvg] undcvg} undcvg'' undcvg" undcvg- undcvg, undcvg. undcvg; undcvg: undcvg? undcvg!'
  - xfail: ...

- - 'undeceiving@ undeceiving# undeceiving$ undeceiving% undeceiving^ undeceiving& undeceiving* undeceiving( undeceiving_ undeceiving= undeceiving+ undeceiving[ undeceiving{ undeceiving\\ undeceiving| undeceiving< undeceiving> undeceiving` undeceiving~ undeceiving/'
  - 'undcvg@ undcvg# undcvg$ undcvg% undcvg^ undcvg& undcvg* undcvg( undcvg_ undcvg= undcvg+ undcvg[ undcvg{ undcvg\\ undcvg| undcvg< undcvg> undcvg` undcvg~ undcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvg) undcvg] undcvg} undcvg'' undcvg" undcvg- undcvg, undcvg. undcvg; undcvg: undcvg? undcvg!'
  - ';undcvg) ;undcvg] ;undcvg} ;undcvg'' ;undcvg" ;undcvg- ;undcvg, ;undcvg. ;undcvg; ;undcvg: ;undcvg? ;undcvg!'
  - xfail: ...

- - 'undcvg@ undcvg# undcvg$ undcvg% undcvg^ undcvg& undcvg* undcvg( undcvg_ undcvg= undcvg+ undcvg[ undcvg{ undcvg\\ undcvg| undcvg< undcvg> undcvg` undcvg~ undcvg/'
  - ';undcvg@ ;undcvg# ;undcvg$ ;undcvg% ;undcvg^ ;undcvg& ;undcvg* ;undcvg( ;undcvg_ ;undcvg= ;undcvg+ ;undcvg[ ;undcvg{ ;undcvg\\ ;undcvg| ;undcvg< ;undcvg> ;undcvg` ;undcvg~ ;undcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceiving-xl undeceiving-([{''"xl undeceiving-/xl undeceiving-$xl'
  - 'undcvg-xl undcvg-([{''"xl undcvg-/xl undcvg-$xl'
  - xfail: ...

- - 'undeceiving(xl undeceiving[xl undeceiving{xl undeceiving''xl undeceiving"xl undeceiving=([{''"-xl undeceiving([{''"-xl undeceiving/-xl undeceiving$-xl'
  - 'undcvg(xl undcvg[xl undcvg{xl undcvg''xl undcvg"xl undcvg=([{''"-xl undcvg([{''"-xl undcvg/-xl undcvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceives [undeceives {undeceives ''undeceives "undeceives -undeceives'
  - '(undcvs [undcvs {undcvs ''undcvs "undcvs -undcvs'
  - xfail: ...

- - '!undeceives @undeceives #undeceives $undeceives %undeceives ^undeceives &undeceives *undeceives )undeceives _undeceives =undeceives +undeceives ]undeceives }undeceives \\undeceives |undeceives .undeceives ,undeceives ;undeceives :undeceives ?undeceives'
  - '!undcvs @undcvs #undcvs $undcvs %undcvs ^undcvs &undcvs *undcvs )undcvs _undcvs =undcvs +undcvs ]undcvs }undcvs \\undcvs |undcvs .undcvs ,undcvs ;undcvs :undcvs ?undcvs'
  - xfail: contraction following special characters is ignored

- - '<undeceives >undeceives `undeceives ~undeceives /undeceives'
  - '<undcvs >undcvs `undcvs ~undcvs /undcvs'
  - xfail: contraction following special characters is ignored

- - 'undcvs (undcvs [undcvs {undcvs ''undcvs "undcvs -undcvs !undcvs @undcvs #undcvs $undcvs %undcvs ^undcvs &undcvs *undcvs )undcvs _undcvs =undcvs +undcvs ]undcvs }undcvs \\undcvs |undcvs .undcvs ,undcvs ;undcvs :undcvs ?undcvs <undcvs >undcvs `undcvs ~undcvs /undcv'
  - ';undcvs (;undcvs [;undcvs {;undcvs '';undcvs ";undcvs -;undcvs !;undcvs @;undcvs #;undcvs $;undcvs %;undcvs ^;undcvs &;undcvs *;undcvs );undcvs _;undcvs =;undcvs +;undcvs ];undcvs };undcvs \\;undcvs |;undcvs .;undcvs ,;undcvs ;;undcvs :;undcvs ?;undcvs <;undcvs >'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceives xl-([{''"undeceives xl/-undeceives xl$-undeceives'
  - 'xl-undcvs xl-([{''"undcvs xl/-undcvs xl$-undcvs'
  - xfail: ...

- - 'xl(undeceives xl[undeceives xl{undeceives xl''undeceives xl"undeceives xl-=([{''"undeceives'
  - 'xl(undcvs xl[undcvs xl{undcvs xl''undcvs xl"undcvs xl-=([{''"undcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceives) undeceives] undeceives} undeceives'' undeceives" undeceives- undeceives, undeceives. undeceives; undeceives: undeceives? undeceives!'
  - 'undcvs) undcvs] undcvs} undcvs'' undcvs" undcvs- undcvs, undcvs. undcvs; undcvs: undcvs? undcvs!'
  - xfail: ...

- - 'undeceives@ undeceives# undeceives$ undeceives% undeceives^ undeceives& undeceives* undeceives( undeceives_ undeceives= undeceives+ undeceives[ undeceives{ undeceives\\ undeceives| undeceives< undeceives> undeceives` undeceives~ undeceives/'
  - 'undcvs@ undcvs# undcvs$ undcvs% undcvs^ undcvs& undcvs* undcvs( undcvs_ undcvs= undcvs+ undcvs[ undcvs{ undcvs\\ undcvs| undcvs< undcvs> undcvs` undcvs~ undcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvs) undcvs] undcvs} undcvs'' undcvs" undcvs- undcvs, undcvs. undcvs; undcvs: undcvs? undcvs! undcvs@ undcvs# undcvs$ undcvs% undcvs^ undcvs& undcvs* undcvs( undcvs_ undcvs= undcvs+ undcvs[ undcvs{ undcvs\\ undcvs| undcvs< undcvs> undcvs` undcvs~ undcvs/'
  - ';undcvs) ;undcvs] ;undcvs} ;undcvs'' ;undcvs" ;undcvs- ;undcvs, ;undcvs. ;undcvs; ;undcvs: ;undcvs? ;undcvs! ;undcvs@ ;undcvs# ;undcvs$ ;undcvs% ;undcvs^ ;undcvs& ;undcvs* ;undcvs( ;undcvs_ ;undcvs= ;undcvs+ ;undcvs[ ;undcvs{ ;undcvs\\ ;undcvs| ;undcvs< ;undcvs>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceives-xl undeceives-([{''"xl undeceives-/xl undeceives-$xl'
  - 'undcvs-xl undcvs-([{''"xl undcvs-/xl undcvs-$xl'
  - xfail: ...

- - 'undeceives(xl undeceives[xl undeceives{xl undeceives''xl undeceives"xl undeceives=([{''"-xl undeceives([{''"-xl undeceives/-xl undeceives$-xl'
  - 'undcvs(xl undcvs[xl undcvs{xl undcvs''xl undcvs"xl undcvs=([{''"-xl undcvs([{''"-xl undcvs/-xl undcvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declare [declare {declare ''declare "declare -declare'
  - '(dcl [dcl {dcl ''dcl "dcl -dcl'
  - xfail: ...

- - '!declare @declare #declare $declare %declare ^declare &declare *declare )declare _declare =declare +declare ]declare }declare \\declare |declare .declare ,declare ;declare :declare ?declare <declare >declare `declare ~declare /declare'
  - '!dcl @dcl #dcl $dcl %dcl ^dcl &dcl *dcl )dcl _dcl =dcl +dcl ]dcl }dcl \\dcl |dcl .dcl ,dcl ;dcl :dcl ?dcl <dcl >dcl ?dcl `dcl ~dcl /dcl'
  - xfail: contraction following special characters is ignored

- - '(dcl [dcl {dcl ''dcl "dcl -dcl'
  - '(;dcl [;dcl {;dcl '';dcl ";dcl -;dcl'
  - xfail: ...

- - '!dcl @dcl #dcl $dcl %dcl ^dcl &dcl *dcl )dcl _dcl =dcl +dcl ]dcl }dcl \\dcl |dcl .dcl ,dcl ;dcl :dcl ?dcl <dcl >dcl ?dcl `dcl ~dcl /dcl'
  - '!;dcl @;dcl #;dcl $;dcl %;dcl ^;dcl &;dcl *;dcl );dcl _;dcl =;dcl +;dcl ];dcl };dcl \\;dcl |;dcl .;dcl ,;dcl ;;dcl :;dcl ?;dcl <;dcl >;dcl `;dcl ~;dcl /;dcl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declare xl-([{''"declare xl/-declare xl$-declare'
  - 'xl-dcl xl-([{''"dcl xl/-dcl xl$-dcl'
  - xfail: ...

- - 'xl(declare xl[declare xl{declare xl''declare xl"declare xl-=([{''"declare'
  - 'xl(dcl xl[dcl xl{dcl xl''dcl xl"dcl xl-=([{''"dcl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declare) declare] declare} declare'' declare" declare- declare, declare. declare; declare: declare? declare!'
  - 'dcl) dcl] dcl} dcl'' dcl" dcl- dcl, dcl. dcl; dcl: dcl? dcl!'
  - xfail: ...

- - 'declare@ declare# declare$ declare% declare^ declare& declare* declare( declare_ declare= declare+ declare[ declare{ declare\\ declare| declare< declare> declare` declare~ declare/'
  - 'dcl@ dcl# dcl$ dcl% dcl^ dcl& dcl* dcl( dcl_ dcl= dcl+ dcl[ dcl{ dcl\\ dcl| dcl< dcl> dcl` dcl~ dcl/'
  - xfail: contraction followed by special characters is ignored

- - 'dcl) dcl] dcl} dcl'' dcl" dcl- dcl, dcl. dcl; dcl: dcl? dcl!'
  - ';dcl) ;dcl] ;dcl} ;dcl'' ;dcl" ;dcl- ;dcl, ;dcl. ;dcl; ;dcl: ;dcl? ;dcl!'
  - xfail: ...

- - 'dcl@ dcl# dcl$ dcl% dcl^ dcl& dcl* dcl( dcl_ dcl= dcl+ dcl[ dcl{ dcl\\ dcl| dcl< dcl> dcl` dcl~ dcl/'
  - ';dcl@ ;dcl# ;dcl$ ;dcl% ;dcl^ ;dcl& ;dcl* ;dcl( ;dcl_ ;dcl= ;dcl+ ;dcl[ ;dcl{ ;dcl\\ ;dcl| ;dcl< ;dcl> ;dcl` ;dcl~ ;dcl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declare-xl declare-([{''"xl declare-/xl declare-$xl'
  - 'dcl-xl dcl-([{''"xl dcl-/xl dcl-$xl'
  - xfail: ...

- - 'declare(xl declare[xl declare{xl declare''xl declare"xl declare=([{''"-xl declare([{''"-xl declare/-xl declare$-xl'
  - 'dcl(xl dcl[xl dcl{xl dcl''xl dcl"xl dcl=([{''"-xl dcl([{''"-xl dcl/-xl dcl$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declared [declared {declared ''declared "declared -declared'
  - '(dcld [dcld {dcld ''dcld "dcld -dcld'
  - xfail: ...

- - '!declared @declared #declared $declared %declared ^declared &declared *declared )declared _declared =declared +declared ]declared }declared \\declared |declared .declared ,declared ;declared :declared ?declared <declared >declared `declared ~declared /declared'
  - '!dcld @dcld #dcld $dcld %dcld ^dcld &dcld *dcld )dcld _dcld =dcld +dcld ]dcld }dcld \\dcld |dcld .dcld ,dcld ;dcld :dcld ?dcld <dcld >dcld `dcld ~dcld /dcld'
  - xfail: contraction following special characters is ignored

- - '(dcld [dcld {dcld ''dcld "dcld -dcld'
  - '(;dcld [;dcld {;dcld '';dcld ";dcld -;dcld'
  - xfail: ...

- - '!dcld @dcld #dcld $dcld %dcld ^dcld &dcld *dcld )dcld _dcld =dcld +dcld ]dcld }dcld \\dcld |dcld .dcld ,dcld ;dcld :dcld ?dcld <dcld >dcld `dcld ~dcld /dcld'
  - '!;dcld @;dcld #;dcld $;dcld %;dcld ^;dcld &;dcld *;dcld );dcld _;dcld =;dcld +;dcld ];dcld };dcld \\;dcld |;dcld .;dcld ,;dcld ;;dcld :;dcld ?;dcld <;dcld >;dcld `;dcld ~;dcld /;dcld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declared xl-([{''"declared xl/-declared xl$-declared'
  - 'xl-dcld xl-([{''"dcld xl/-dcld xl$-dcld'
  - xfail: ...

- - 'xl(declared xl[declared xl{declared xl''declared xl"declared xl-=([{''"declared'
  - 'xl(dcld xl[dcld xl{dcld xl''dcld xl"dcld xl-=([{''"dcld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declared) declared] declared} declared'' declared" declared- declared, declared. declared; declared: declared? declared!'
  - 'dcld) dcld] dcld} dcld'' dcld" dcld- dcld, dcld. dcld; dcld: dcld? dcld!'
  - xfail: ...

- - 'declared@ declared# declared$ declared% declared^ declared& declared* declared( declared_ declared= declared+ declared[ declared{ declared\\ declared| declared< declared> declared` declared~ declared/'
  - 'dcld@ dcld# dcld$ dcld% dcld^ dcld& dcld* dcld( dcld_ dcld= dcld+ dcld[ dcld{ dcld\\ dcld| dcld< dcld> dcld` dcld~ dcld/'
  - xfail: contraction followed by special characters is ignored

- - 'dcld) dcld] dcld} dcld'' dcld" dcld- dcld, dcld. dcld; dcld: dcld? dcld!'
  - ';dcld) ;dcld] ;dcld} ;dcld'' ;dcld" ;dcld- ;dcld, ;dcld. ;dcld; ;dcld: ;dcld? ;dcld!'
  - xfail: ...

- - 'dcld@ dcld# dcld$ dcld% dcld^ dcld& dcld* dcld( dcld_ dcld= dcld+ dcld[ dcld{ dcld\\ dcld| dcld< dcld> dcld` dcld~ dcld/'
  - ';dcld@ ;dcld# ;dcld$ ;dcld% ;dcld^ ;dcld& ;dcld* ;dcld( ;dcld_ ;dcld= ;dcld+ ;dcld[ ;dcld{ ;dcld\\ ;dcld| ;dcld< ;dcld> ;dcld` ;dcld~ ;dcld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declared-xl declared-([{''"xl declared-/xl declared-$xl'
  - 'dcld-xl dcld-([{''"xl dcld-/xl dcld-$xl'
  - xfail: ...

- - 'declared(xl declared[xl declared{xl declared''xl declared"xl declared=([{''"-xl declared([{''"-xl declared/-xl declared$-xl'
  - 'dcld(xl dcld[xl dcld{xl dcld''xl dcld"xl dcld=([{''"-xl dcld([{''"-xl dcld/-xl dcld$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declaring [declaring {declaring ''declaring "declaring -declaring'
  - '(dclg [dclg {dclg ''dclg "dclg -dclg'
  - xfail: ...

- - '!declaring @declaring #declaring $declaring %declaring ^declaring &declaring *declaring )declaring _declaring =declaring +declaring ]declaring }declaring \\declaring |declaring .declaring ,declaring ;declaring :declaring ?declaring <declaring >declaring'
  - '!dclg @dclg #dclg $dclg %dclg ^dclg &dclg *dclg )dclg _dclg =dclg +dclg ]dclg }dclg \\dclg |dclg .dclg ,dclg ;dclg :dclg ?dclg <dclg >dclg'
  - xfail: contraction following special characters is ignored

- - '`declareing >declaring `declaring ~declaring /declaring'
  - '`dclg ~dclg /dclg'
  - xfail: contraction following special characters is ignored

- - '(dclg [dclg {dclg ''dclg "dclg -dclg'
  - '(;dclg [;dclg {;dclg '';dclg ";dclg -;dclg'
  - xfail: ...

- - '!dclg @dclg #dclg $dclg %dclg ^dclg &dclg *dclg )dclg _dclg =dclg +dclg ]dclg }dclg \\dclg |dclg .dclg ,dclg ;dclg :dclg ?dclg <dclg >dclg `dclg ~dclg /dclg'
  - '!;dclg @;dclg #;dclg $;dclg %;dclg ^;dclg &;dclg *;dclg );dclg _;dclg =;dclg +;dclg ];dclg };dclg \\;dclg |;dclg .;dclg ,;dclg ;;dclg :;dclg ?;dclg <;dclg >;dclg `;dclg ~;dclg /;dclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declaring xl-([{''"declaring xl/-declaring xl$-declaring'
  - 'xl-dclg xl-([{''"dclg xl/-dclg xl$-dclg'
  - xfail: ...

- - 'xl(declaring xl[declaring xl{declaring xl''declaring xl"declaring xl-=([{''"declaring'
  - 'xl(dclg xl[dclg xl{dclg xl''dclg xl"dclg xl-=([{''"dclg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declaring) declaring] declaring} declaring'' declaring" declaring- declaring, declaring. declaring; declaring: declaring? declaring!'
  - 'dclg) dclg] dclg} dclg'' dclg" dclg- dclg, dclg. dclg; dclg: dclg? dclg!'
  - xfail: ...

- - 'declaring@ declaring# declaring$ declaring% declaring^ declaring& declaring* declaring( declaring_ declaring= declaring+ declaring[ declaring{ declaring\\ declaring| declaring< declaring> declaring` declaring~ declaring/'
  - 'dclg@ dclg# dclg$ dclg% dclg^ dclg& dclg* dclg( dclg_ dclg= dclg+ dclg[ dclg{ dclg\\ dclg| dclg< dclg> dclg` dclg~ dclg/'
  - xfail: contraction followed by special characters is ignored

- - 'dclg) dclg] dclg} dclg'' dclg" dclg- dclg, dclg. dclg; dclg: dclg? dclg!'
  - ';dclg) ;dclg] ;dclg} ;dclg'' ;dclg" ;dclg- ;dclg, ;dclg. ;dclg; ;dclg: ;dclg? ;dclg!'
  - xfail: ...

- - 'dclg@ dclg# dclg$ dclg% dclg^ dclg& dclg* dclg( dclg_ dclg= dclg+ dclg[ dclg{ dclg\\ dclg| dclg< dclg> dclg` dclg~ dclg/'
  - ';dclg@ ;dclg# ;dclg$ ;dclg% ;dclg^ ;dclg& ;dclg* ;dclg( ;dclg_ ;dclg= ;dclg+ ;dclg[ ;dclg{ ;dclg\\ ;dclg| ;dclg< ;dclg> ;dclg` ;dclg~ ;dclg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declaring-xl declaring-([{''"xl declaring-/xl declaring-$xl'
  - 'dclg-xl dclg-([{''"xl dclg-/xl dclg-$xl'
  - xfail: ...

- - 'declaring(xl declaring[xl declaring{xl declaring''xl declaring"xl declaring=([{''"-xl declaring([{''"-xl declaring/-xl declaring$-xl'
  - 'dclg(xl dclg[xl dclg{xl dclg''xl dclg"xl dclg=([{''"-xl dclg([{''"-xl dclg/-xl dclg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declarer [declarer {declarer ''declarer "declarer -declarer'
  - '(dclr [dclr {dclr ''dclr "dclr -dclr'
  - xfail: ...

- - '!declarer @declarer #declarer $declarer %declarer ^declarer &declarer *declarer )declarer _declarer =declarer +declarer ]declarer }declarer \\declarer |declarer .declarer ,declarer ;declarer :declarer ?declarer <declarer >declarer `declarer ~declarer /declarer'
  - '!dclr @dclr #dclr $dclr %dclr ^dclr &dclr *dclr )dclr _dclr =dclr +dclr ]dclr }dclr \\dclr |dclr .dclr ,dclr ;dclr :dclr ?dclr <dclr >dclr `dclr ~dclr /dclr'
  - xfail: contraction following special characters is ignored

- - '(dclr [dclr {dclr ''dclr "dclr -dclr'
  - '(;dclr [;dclr {;dclr '';dclr ";dclr -;dclr'
  - xfail: ...

- - '!dclr @dclr #dclr $dclr %dclr ^dclr &dclr *dclr )dclr _dclr =dclr +dclr ]dclr }dclr \\dclr |dclr .dclr ,dclr ;dclr :dclr ?dclr <dclr >dclr `dclr ~dclr /dclr'
  - '!;dclr @;dclr #;dclr $;dclr %;dclr ^;dclr &;dclr *;dclr );dclr _;dclr =;dclr +;dclr ];dclr };dclr \\;dclr |;dclr .;dclr ,;dclr ;;dclr :;dclr ?;dclr <;dclr >;dclr `;dclr ~;dclr /;dclr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declarer xl-([{''"declarer xl/-declarer xl$-declarer'
  - 'xl-dclr xl-([{''"dclr xl/-dclr xl$-dclr'
  - xfail: ...

- - 'xl(declarer xl[declarer xl{declarer xl''declarer xl"declarer xl-=([{''"declarer'
  - 'xl(dclr xl[dclr xl{dclr xl''dclr xl"dclr xl-=([{''"dclr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declarer) declarer] declarer} declarer'' declarer" declarer- declarer, declarer. declarer; declarer: declarer? declarer!'
  - 'dclr) dclr] dclr} dclr'' dclr" dclr- dclr, dclr. dclr; dclr: dclr? dclr!'
  - xfail: ...

- - 'declarer@ declarer# declarer$ declarer% declarer^ declarer& declarer* declarer( declarer_ declarer= declarer+ declarer[ declarer{ declarer\\ declarer| declarer< declarer> declarer` declarer~ declarer/'
  - 'dclr@ dclr# dclr$ dclr% dclr^ dclr& dclr* dclr( dclr_ dclr= dclr+ dclr[ dclr{ dclr\\ dclr| dclr< dclr> dclr` dclr~ dclr/'
  - xfail: contraction followed by special characters is ignored

- - 'dclr) dclr] dclr} dclr'' dclr" dclr- dclr, dclr. dclr; dclr: dclr? dclr!'
  - ';dclr) ;dclr] ;dclr} ;dclr'' ;dclr" ;dclr- ;dclr, ;dclr. ;dclr; ;dclr: ;dclr? ;dclr!'
  - xfail: ...

- - 'dclr@ dclr# dclr$ dclr% dclr^ dclr& dclr* dclr( dclr_ dclr= dclr+ dclr[ dclr{ dclr\\ dclr| dclr< dclr> dclr` dclr~ dclr/'
  - ';dclr@ ;dclr# ;dclr$ ;dclr% ;dclr^ ;dclr& ;dclr* ;dclr( ;dclr_ ;dclr= ;dclr+ ;dclr[ ;dclr{ ;dclr\\ ;dclr| ;dclr< ;dclr> ;dclr` ;dclr~ ;dclr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declarer-xl declarer-([{''"xl declarer-/xl declarer-$xl'
  - 'dclr-xl dclr-([{''"xl dclr-/xl dclr-$xl'
  - xfail: ...

- - 'declarer(xl declarer[xl declarer{xl declarer''xl declarer"xl declarer=([{''"-xl declarer([{''"-xl declarer/-xl declarer$-xl'
  - 'dclr(xl dclr[xl dclr{xl dclr''xl dclr"xl dclr=([{''"-xl dclr([{''"-xl dclr/-xl dclr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declarers [declarers {declarers ''declarers "declarers -declarers'
  - '(dclrs [dclrs {dclrs ''dclrs "dclrs -dclrs'
  - xfail: ...

- - '!declarers @declarers #declarers $declarers %declarers ^declarers &declarers *declarers )declarers _declarers =declarers +declarers ]declarers }declarers \\declarers |declarers .declarers ,declarers ;declarers :declarers ?declarers <declarers >declarers'
  - '!dclrs @dclrs #dclrs $dclrs %dclrs ^dclrs &dclrs *dclrs )dclrs _dclrs =dclrs +dclrs ]dclrs }dclrs \\dclrs |dclrs .dclrs ,dclrs ;dclrs :dclrs ?dclrs <dclrs >dclrs'
  - xfail: contraction following special characters is ignored

- - '`declarers ~declarers /declarers'
  - '`dclrs ~dclrs /dclrs'
  - xfail: contraction following special characters is ignored

- - 'dclrs (dclrs [dclrs {dclrs ''dclrs "dclrs -dclrs !dclrs @dclrs #dclrs $dclrs %dclrs ^dclrs &dclrs *dclrs )dclrs _dclrs =dclrs +dclrs ]dclrs }dclrs \\dclrs |dclrs .dclrs ,dclrs ;dclrs :dclrs ?dclrs <dclrs >dclrs `dclrs ~dclrs /dclrs'
  - ';dclrs (;dclrs [;dclrs {;dclrs '';dclrs ";dclrs -;dclrs !;dclrs @;dclrs #;dclrs $;dclrs %;dclrs ^;dclrs &;dclrs *;dclrs );dclrs _;dclrs =;dclrs +;dclrs ];dclrs };dclrs \\;dclrs |;dclrs .;dclrs ,;dclrs ;;dclrs :;dclrs ?;dclrs <;dclrs >;dclrs `;dclrs ~;dclrs /;dclrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declarers xl-([{''"declarers xl/-declarers xl$-declarers'
  - 'xl-dclrs xl-([{''"dclrs xl/-dclrs xl$-dclrs'
  - xfail: ...

- - 'xl(declarers xl[declarers xl{declarers xl''declarers xl"declarers xl-=([{''"declarers'
  - 'xl(dclrs xl[dclrs xl{dclrs xl''dclrs xl"dclrs xl-=([{''"dclrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declarers) declarers] declarers} declarers'' declarers" declarers- declarers, declarers. declarers; declarers: declarers? declarers!'
  - 'dclrs) dclrs] dclrs} dclrs'' dclrs" dclrs- dclrs, dclrs. dclrs; dclrs: dclrs? dclrs!'
  - xfail: ...

- - 'declarers@ declarers# declarers$ declarers% declarers^ declarers& declarers* declarers( declarers_ declarers= declarers+ declarers[ declarers{ declarers\\ declarers| declarers< declarers> declarers` declarers~ declarers/'
  - 'dclrs@ dclrs# dclrs$ dclrs% dclrs^ dclrs& dclrs* dclrs( dclrs_ dclrs= dclrs+ dclrs[ dclrs{ dclrs\\ dclrs| dclrs< dclrs> dclrs` dclrs~ dclrs/'
  - xfail: contraction followed by special characters is ignored

- - 'dclrs) dclrs] dclrs} dclrs'' dclrs" dclrs- dclrs, dclrs. dclrs; dclrs: dclrs? dclrs! dclrs@ dclrs# dclrs$ dclrs% dclrs^ dclrs& dclrs* dclrs( dclrs_ dclrs= dclrs+ dclrs[ dclrs{ dclrs\\ dclrs| dclrs< dclrs> dclrs` dclrs~ dclrs/'
  - ';dclrs) ;dclrs] ;dclrs} ;dclrs'' ;dclrs" ;dclrs- ;dclrs, ;dclrs. ;dclrs; ;dclrs: ;dclrs? ;dclrs! ;dclrs@ ;dclrs# ;dclrs$ ;dclrs% ;dclrs^ ;dclrs& ;dclrs* ;dclrs( ;dclrs_ ;dclrs= ;dclrs+ ;dclrs[ ;dclrs{ ;dclrs\\ ;dclrs| ;dclrs< ;dclrs> ;dclrs` ;dclrs~ ;dclrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declarers-xl declarers-([{''"xl declarers-/xl declarers-$xl'
  - 'dclrs-xl dclrs-([{''"xl dclrs-/xl dclrs-$xl'
  - xfail: ...

- - 'declarers(xl declarers[xl declarers{xl declarers''xl declarers"xl declarers=([{''"-xl declarers([{''"-xl declarers/-xl declarers$-xl'
  - 'dclrs(xl dclrs[xl dclrs{xl dclrs''xl dclrs"xl dclrs=([{''"-xl dclrs([{''"-xl dclrs/-xl dclrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declares [declares {declares ''declares "declares -declares'
  - '(dcls [dcls {dcls ''dcls "dcls -dcls'
  - xfail: ...

- - '!declares @declares #declares $declares %declares ^declares &declares *declares )declares _declares =declares +declares ]declares }declares \\declares |declares .declares ,declares ;declares :declares ?declares <declares >declares `declares ~declares /declares'
  - '!dcls @dcls #dcls $dcls %dcls ^dcls &dcls *dcls )dcls _dcls =dcls +dcls ]dcls }dcls \\dcls |dcls .dcls ,dcls ;dcls :dcls ?dcls <dcls >dcls `dcls ~dcls /dcls'
  - xfail: contraction following special characters is ignored

- - 'dcls (dcls [dcls {dcls ''dcls "dcls -dcls !dcls @dcls #dcls $dcls %dcls ^dcls &dcls *dcls )dcls _dcls =dcls +dcls ]dcls }dcls \\dcls |dcls .dcls ,dcls ;dcls :dcls ?dcls <dcls >dcls `dcls ~dcls /dcls'
  - ';dcls (;dcls [;dcls {;dcls '';dcls ";dcls -;dcls !;dcls @;dcls #;dcls $;dcls %;dcls ^;dcls &;dcls *;dcls );dcls _;dcls =;dcls +;dcls ];dcls };dcls \\;dcls |;dcls .;dcls ,;dcls ;;dcls :;dcls ?;dcls <;dcls >;dcls `;dcls ~;dcls /;dcls'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declares xl-([{''"declares xl/-declares xl$-declares'
  - 'xl-dcls xl-([{''"dcls xl/-dcls xl$-dcls'
  - xfail: ...

- - 'xl(declares xl[declares xl{declares xl''declares xl"declares xl-=([{''"declares'
  - 'xl(dcls xl[dcls xl{dcls xl''dcls xl"dcls xl-=([{''"dcls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declares) declares] declares} declares'' declares" declares- declares, declares. declares; declares: declares? declares!'
  - 'dcls) dcls] dcls} dcls'' dcls" dcls- dcls, dcls. dcls; dcls: dcls? dcls!'
  - xfail: ...

- - 'declares@ declares# declares$ declares% declares^ declares& declares* declares( declares_ declares= declares+ declares[ declares{ declares\\ declares| declares< declares> declares` declares~ declares/'
  - 'dcls@ dcls# dcls$ dcls% dcls^ dcls& dcls* dcls( dcls_ dcls= dcls+ dcls[ dcls{ dcls\\ dcls| dcls< dcls> dcls` dcls~ dcls/'
  - xfail: contraction followed by special characters is ignored

- - 'dcls) dcls] dcls} dcls'' dcls" dcls- dcls, dcls. dcls; dcls: dcls? dcls! dcls@ dcls# dcls$ dcls% dcls^ dcls& dcls* dcls( dcls_ dcls= dcls+ dcls[ dcls{ dcls\\ dcls| dcls< dcls> dcls` dcls~ dcls/'
  - ';dcls) ;dcls] ;dcls} ;dcls'' ;dcls" ;dcls- ;dcls, ;dcls. ;dcls; ;dcls: ;dcls? ;dcls! ;dcls@ ;dcls# ;dcls$ ;dcls% ;dcls^ ;dcls& ;dcls* ;dcls( ;dcls_ ;dcls= ;dcls+ ;dcls[ ;dcls{ ;dcls\\ ;dcls| ;dcls< ;dcls> ;dcls` ;dcls~ ;dcls/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declares-xl declares-([{''"xl declares-/xl declares-$xl'
  - 'dcls-xl dcls-([{''"xl dcls-/xl dcls-$xl'
  - xfail: ...

- - 'declares(xl declares[xl declares{xl declares''xl declares"xl declares=([{''"-xl declares([{''"-xl declares/-xl declares$-xl'
  - 'dcls(xl dcls[xl dcls{xl dcls''xl dcls"xl dcls=([{''"-xl dcls([{''"-xl dcls/-xl dcls$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclare [undeclare {undeclare ''undeclare "undeclare -undeclare'
  - '(undcl [undcl {undcl ''undcl "undcl -undcl'
  - xfail: ...

- - '!undeclare @undeclare #undeclare $undeclare %undeclare ^undeclare &undeclare *undeclare )undeclare _undeclare =undeclare +undeclare ]undeclare }undeclare \\undeclare |undeclare .undeclare ,undeclare ;undeclare :undeclare ?undeclare <undeclare >undeclare'
  - '!undcl @undcl #undcl $undcl %undcl ^undcl &undcl *undcl )undcl _undcl =undcl +undcl ]undcl }undcl \\undcl |undcl .undcl ,undcl ;undcl :undcl ?undcl <undcl >undcl'
  - xfail: contraction following special characters is ignored

- - '`undeclare ~undeclare /undeclare'
  - '`undcl ~undcl /undcl'
  - xfail: contraction following special characters is ignored

- - '(undcl [undcl {undcl ''undcl "undcl -undcl'
  - '(;undcl [;undcl {;undcl '';undcl ";undcl -;undcl'
  - xfail: ...

- - '!undcl @undcl #undcl $undcl %undcl ^undcl &undcl *undcl )undcl _undcl =undcl +undcl ]undcl }undcl \\undcl |undcl .undcl ,undcl ;undcl :undcl ?undcl <undcl >undcl `undcl ~undcl /undcl'
  - '!;undcl @;undcl #;undcl $;undcl %;undcl ^;undcl &;undcl *;undcl );undcl _;undcl =;undcl +;undcl ];undcl };undcl \\;undcl |;undcl .;undcl ,;undcl ;;undcl :;undcl ?;undcl <;undcl >;undcl `;undcl ~;undcl /;undcl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclare xl-([{''"undeclare xl/-undeclare xl$-undeclare'
  - 'xl-undcl xl-([{''"undcl xl/-undcl xl$-undcl'
  - xfail: ...

- - 'xl(undeclare xl[undeclare xl{undeclare xl''undeclare xl"undeclare xl-=([{''"undeclare'
  - 'xl(undcl xl[undcl xl{undcl xl''undcl xl"undcl xl-=([{''"undcl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclare) undeclare] undeclare} undeclare'' undeclare" undeclare- undeclare, undeclare. undeclare; undeclare: undeclare? undeclare!'
  - 'undcl) undcl] undcl} undcl'' undcl" undcl- undcl, undcl. undcl; undcl: undcl? undcl!'
  - xfail: ...

- - 'undeclare@ undeclare# undeclare$ undeclare% undeclare^ undeclare& undeclare* undeclare( undeclare_ undeclare= undeclare+ undeclare[ undeclare{ undeclare\\ undeclare| undeclare< undeclare> undeclare` undeclare~ undeclare/'
  - 'undcl@ undcl# undcl$ undcl% undcl^ undcl& undcl* undcl( undcl_ undcl= undcl+ undcl[ undcl{ undcl\\ undcl| undcl< undcl> undcl` undcl~ undcl/'
  - xfail: contraction followed by special characters is ignored

- - 'undcl) undcl] undcl} undcl'' undcl" undcl- undcl, undcl. undcl; undcl: undcl? undcl!'
  - ';undcl) ;undcl] ;undcl} ;undcl'' ;undcl" ;undcl- ;undcl, ;undcl. ;undcl; ;undcl: ;undcl? ;undcl!'
  - xfail: ...

- - 'undcl@ undcl# undcl$ undcl% undcl^ undcl& undcl* undcl( undcl_ undcl= undcl+ undcl[ undcl{ undcl\\ undcl| undcl< undcl> undcl` undcl~ undcl/'
  - ';undcl@ ;undcl# ;undcl$ ;undcl% ;undcl^ ;undcl& ;undcl* ;undcl( ;undcl_ ;undcl= ;undcl+ ;undcl[ ;undcl{ ;undcl\\ ;undcl| ;undcl< ;undcl> ;undcl` ;undcl~ ;undcl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclare-xl undeclare-([{''"xl undeclare-/xl undeclare-$xl'
  - 'undcl-xl undcl-([{''"xl undcl-/xl undcl-$xl'
  - xfail: ...

- - 'undeclare(xl undeclare[xl undeclare{xl undeclare''xl undeclare"xl undeclare=([{''"-xl undeclare([{''"-xl undeclare/-xl undeclare$-xl'
  - 'undcl(xl undcl[xl undcl{xl undcl''xl undcl"xl undcl=([{''"-xl undcl([{''"-xl undcl/-xl undcl$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclared [undeclared {undeclared ''undeclared "undeclared -undeclared'
  - '(undcld [undcld {undcld ''undcld "undcld -undcld'
  - xfail: ...

- - '!undeclared @undeclared #undeclared $undeclared %undeclared ^undeclared &undeclared *undeclared )undeclared _undeclared =undeclared +undeclared ]undeclared }undeclared \\undeclared |undeclared .undeclared ,undeclared ;undeclared :undeclared ?undeclared'
  - '!undcld @undcld #undcld $undcld %undcld ^undcld &undcld *undcld )undcld _undcld =undcld +undcld ]undcld }undcld \\undcld |undcld .undcld ,undcld ;undcld :undcld ?undcld'
  - xfail: contraction following special characters is ignored

- - '<undeclared >undeclared `undeclared ~undeclared /undeclared'
  - '<undcld >undcld `undcld ~undcld /undcld'
  - xfail: contraction following special characters is ignored

- - '(undcld [undcld {undcld ''undcld "undcld -undcld'
  - '(;undcld [;undcld {;undcld '';undcld ";undcld -;undcld'
  - xfail: ...

- - '!undcld @undcld #undcld $undcld %undcld ^undcld &undcld *undcld )undcld _undcld =undcld +undcld ]undcld }undcld \\undcld |undcld .undcld ,undcld ;undcld :undcld ?undcld <undcld >undcld `undcld ~undcld /undcld'
  - '!;undcld @;undcld #;undcld $;undcld %;undcld ^;undcld &;undcld *;undcld );undcld _;undcld =;undcld +;undcld ];undcld };undcld \\;undcld |;undcld .;undcld ,;undcld ;;undcld :;undcld ?;undcld <;undcld >;undcld `;undcld ~;undcld /;undcld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclared xl-([{''"undeclared xl/-undeclared xl$-undeclared'
  - 'xl-undcld xl-([{''"undcld xl/-undcld xl$-undcld'
  - xfail: ...

- - 'xl(undeclared xl[undeclared xl{undeclared xl''undeclared xl"undeclared xl-=([{''"undeclared'
  - 'xl(undcld xl[undcld xl{undcld xl''undcld xl"undcld xl-=([{''"undcld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclared) undeclared] undeclared} undeclared'' undeclared" undeclared- undeclared, undeclared. undeclared; undeclared: undeclared? undeclared!'
  - 'undcld) undcld] undcld} undcld'' undcld" undcld- undcld, undcld. undcld; undcld: undcld? undcld!'
  - xfail: ...

- - 'undeclared@ undeclared# undeclared$ undeclared% undeclared^ undeclared& undeclared* undeclared( undeclared_ undeclared= undeclared+ undeclared[ undeclared{ undeclared\\ undeclared| undeclared< undeclared> undeclared` undeclared~ undeclared/'
  - 'undcld@ undcld# undcld$ undcld% undcld^ undcld& undcld* undcld( undcld_ undcld= undcld+ undcld[ undcld{ undcld\\ undcld| undcld< undcld> undcld` undcld~ undcld/'
  - xfail: contraction followed by special characters is ignored

- - 'undcld) undcld] undcld} undcld'' undcld" undcld- undcld, undcld. undcld; undcld: undcld? undcld!'
  - ';undcld) ;undcld] ;undcld} ;undcld'' ;undcld" ;undcld- ;undcld, ;undcld. ;undcld; ;undcld: ;undcld? ;undcld!'
  - xfail: ...

- - 'undcld@ undcld# undcld$ undcld% undcld^ undcld& undcld* undcld( undcld_ undcld= undcld+ undcld[ undcld{ undcld\\ undcld| undcld< undcld> undcld` undcld~ undcld/'
  - ';undcld@ ;undcld# ;undcld$ ;undcld% ;undcld^ ;undcld& ;undcld* ;undcld( ;undcld_ ;undcld= ;undcld+ ;undcld[ ;undcld{ ;undcld\\ ;undcld| ;undcld< ;undcld> ;undcld` ;undcld~ ;undcld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclared-xl undeclared-([{''"xl undeclared-/xl undeclared-$xl'
  - 'undcld-xl undcld-([{''"xl undcld-/xl undcld-$xl'
  - xfail: ...

- - 'undeclared(xl undeclared[xl undeclared{xl undeclared''xl undeclared"xl undeclared=([{''"-xl undeclared([{''"-xl undeclared/-xl undeclared$-xl'
  - 'undcld(xl undcld[xl undcld{xl undcld''xl undcld"xl undcld=([{''"-xl undcld([{''"-xl undcld/-xl undcld$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclaring [undeclaring {undeclaring ''undeclaring "undeclaring -undeclaring !undeclaring @undeclaring #undeclaring $undeclaring %undeclaring ^undeclaring &undeclaring *undeclaring )undeclaring _undeclaring =undeclaring +undeclaring ]undeclaring }undeclaring'
  - '(undclg [undclg {undclg ''undclg "undclg -undclg !undclg @undclg #undclg $undclg %undclg ^undclg &undclg *undclg )undclg _undclg =undclg +undclg ]undclg }undclg'
  - xfail: contraction following special characters is ignored

- - '\\undeclaring |undeclaring .undeclaring ,undeclaring ;undeclaring :undeclaring ?undeclaring <undeclaring >undeclaring `undeclaring ~undeclaring /undeclaring'
  - '\\undclg |undclg .undclg ,undclg ;undclg :undclg ?undclg <undclg >undclg `undclg ~undclg /undclg'
  - xfail: contraction following special characters is ignored

- - 'undclg (undclg [undclg {undclg ''undclg "undclg -undclg !undclg @undclg #undclg $undclg %undclg ^undclg &undclg *undclg )undclg _undclg =undclg +undclg ]undclg }undclg \\undclg |undclg .undclg ,undclg ;undclg :undclg ?undclg <undclg'
  - ';undclg (;undclg [;undclg {;undclg '';undclg ";undclg -;undclg !;undclg @;undclg #;undclg $;undclg %;undclg ^;undclg &;undclg *;undclg );undclg _;undclg =;undclg +;undclg ];undclg };undclg \\;undclg |;undclg .;undclg ,;undclg ;;undclg :;undclg ?;undclg <;undclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - '>undclg `undclg ~undclg /undclg'
  - '>;undclg `;undclg ~;undclg /;undclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclaring xl-([{''"undeclaring xl/-undeclaring xl$-undeclaring xl(undeclaring xl[undeclaring xl{undeclaring xl''undeclaring xl"undeclaring xl-=([{''"undeclaring'
  - 'xl-undclg xl-([{''"undclg xl/-undclg xl$-undclg xl(undclg xl[undclg xl{undclg xl''undclg xl"undclg xl-=([{''"undclg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclaring) undeclaring] undeclaring} undeclaring'' undeclaring" undeclaring- undeclaring, undeclaring. undeclaring; undeclaring: undeclaring? undeclaring! undeclaring@ undeclaring# undeclaring$ undeclaring% undeclaring^ undeclaring& undeclaring* undeclaring('
  - 'undclg) undclg] undclg} undclg'' undclg" undclg- undclg, undclg. undclg; undclg: undclg? undclg! undclg@ undclg# undclg$ undclg% undclg^ undclg& undclg* undclg( undclg_ undclg= undclg+ undclg[ undclg{ undclg\\ undclg| undclg<'
  - xfail: contraction followed by special characters is ignored

- - 'undeclaring_ undeclaring= undeclaring+ undeclaring[ undeclaring{ undeclaring\\ undeclaring| undeclaring< undeclaring> undeclaring` undeclaring~ undeclaring/'
  - 'undclg> undclg` undclg~ undclg/'
  - xfail: contraction followed by special characters is ignored

- - 'undclg) undclg] undclg} undclg'' undclg" undclg- undclg, undclg. undclg; undclg: undclg? undclg! undclg@ undclg# undclg$ undclg% undclg^ undclg& undclg* undclg( undclg_ undclg= undclg+ undclg[ undclg{ undclg\\ undclg| undclg< undclg>'
  - ';undclg) ;undclg] ;undclg} ;undclg'' ;undclg" ;undclg- ;undclg, ;undclg. ;undclg; ;undclg: ;undclg? ;undclg! ;undclg@ ;undclg# ;undclg$ ;undclg% ;undclg^ ;undclg& ;undclg* ;undclg( ;undclg_ ;undclg= ;undclg+ ;undclg[ ;undclg{ ;undclg\\ ;undclg| ;undclg< ;undclg>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undclg` undclg~ undclg/'
  - ';undclg` ;undclg~ ;undclg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclaring-xl undeclaring-([{''"xl undeclaring-/xl undeclaring-$xl undeclaring(xl undeclaring[xl undeclaring{xl undeclaring''xl undeclaring"xl undeclaring=([{''"-xl undeclaring([{''"-xl undeclaring/-xl undeclaring$-xl'
  - 'undclg-xl undclg-([{''"xl undclg-/xl undclg-$xl undclg(xl undclg[xl undclg{xl undclg''xl undclg"xl undclg=([{''"-xl undclg([{''"-xl undclg/-xl undclg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclares [undeclares {undeclares ''undeclares "undeclares -undeclares'
  - '(undcls [undcls {undcls ''undcls "undcls -undcls'
  - xfail: ...

- - '!undeclares @undeclares #undeclares $undeclares %undeclares ^undeclares &undeclares *undeclares )undeclares _undeclares =undeclares +undeclares ]undeclares }undeclares \\undeclares |undeclares .undeclares ,undeclares ;undeclares :undeclares ?undeclares'
  - '!undcls @undcls #undcls $undcls %undcls ^undcls &undcls *undcls )undcls _undcls =undcls +undcls ]undcls }undcls \\undcls |undcls .undcls ,undcls ;undcls :undcls ?undcls'
  - xfail: contraction following special characters is ignored

- - '<undeclares >undeclares `undeclares ~undeclares /undeclares'
  - '<undcls >undcls `undcls ~undcls /undcls'
  - xfail: contraction following special characters is ignored

- - 'undcls (undcls [undcls {undcls ''undcls "undcls -undcls !undcls @undcls #undcls $undcls %undcls ^undcls &undcls *undcls )undcls _undcls =undcls +undcls ]undcls }undcls \\undcls |undcls .undcls ,undcls ;undcls :undcls ?undcls <undcls >undcls `undcls ~undcls /undcl'
  - ';undcls (;undcls [;undcls {;undcls '';undcls ";undcls -;undcls !;undcls @;undcls #;undcls $;undcls %;undcls ^;undcls &;undcls *;undcls );undcls _;undcls =;undcls +;undcls ];undcls };undcls \\;undcls |;undcls .;undcls ,;undcls ;;undcls :;undcls ?;undcls <;undcls >'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclares xl-([{''"undeclares xl/-undeclares xl$-undeclares'
  - 'xl-undcls xl-([{''"undcls xl/-undcls xl$-undcls'
  - xfail: ...

- - 'xl(undeclares xl[undeclares xl{undeclares xl''undeclares xl"undeclares xl-=([{''"undeclares'
  - 'xl(undcls xl[undcls xl{undcls xl''undcls xl"undcls xl-=([{''"undcls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclares) undeclares] undeclares} undeclares'' undeclares" undeclares- undeclares, undeclares. undeclares; undeclares: undeclares? undeclares!'
  - 'undcls) undcls] undcls} undcls'' undcls" undcls- undcls, undcls. undcls; undcls: undcls? undcls!'
  - xfail: ...

- - 'undeclares@ undeclares# undeclares$ undeclares% undeclares^ undeclares& undeclares* undeclares( undeclares_ undeclares= undeclares+ undeclares[ undeclares{ undeclares\\ undeclares| undeclares< undeclares> undeclares` undeclares~ undeclares/'
  - 'undcls@ undcls# undcls$ undcls% undcls^ undcls& undcls* undcls( undcls_ undcls= undcls+ undcls[ undcls{ undcls\\ undcls| undcls< undcls> undcls` undcls~ undcls/'
  - xfail: contraction followed by special characters is ignored

- - 'undcls) undcls] undcls} undcls'' undcls" undcls- undcls, undcls. undcls; undcls: undcls? undcls! undcls@ undcls# undcls$ undcls% undcls^ undcls& undcls* undcls( undcls_ undcls= undcls+ undcls[ undcls{ undcls\\ undcls| undcls< undcls> undcls` undcls~ undcls/'
  - ';undcls) ;undcls] ;undcls} ;undcls'' ;undcls" ;undcls- ;undcls, ;undcls. ;undcls; ;undcls: ;undcls? ;undcls! ;undcls@ ;undcls# ;undcls$ ;undcls% ;undcls^ ;undcls& ;undcls* ;undcls( ;undcls_ ;undcls= ;undcls+ ;undcls[ ;undcls{ ;undcls\\ ;undcls| ;undcls< ;undcls>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclares-xl undeclares-([{''"xl undeclares-/xl undeclares-$xl'
  - 'undcls-xl undcls-([{''"xl undcls-/xl undcls-$xl'
  - xfail: ...

- - 'undeclares(xl undeclares[xl undeclares{xl undeclares''xl undeclares"xl undeclares=([{''"-xl undeclares([{''"-xl undeclares/-xl undeclares$-xl'
  - 'undcls(xl undcls[xl undcls{xl undcls''xl undcls"xl undcls=([{''"-xl undcls([{''"-xl undcls/-xl undcls$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(diss [diss {diss ''diss "diss -diss !diss .diss ,diss ;diss :diss ?diss *diss =diss +diss @diss #diss $diss %diss ^diss &diss )diss _diss ]diss }diss \\diss |diss <diss >diss `diss ~diss /diss'
  - '(4s [4s {4s ''diss "diss -diss !diss .diss ,diss ;diss :diss ?diss *4s =4s +4s @4s #4s $4s %4s ^4s &4s )4s _4s ]4s }4s \\4s |4s <4s >4s ?4s `4s ~4s /4s'
  - xfail: contraction following special characters and followed by "s"  is ignored

- - 'xl(diss xl[diss xl{diss'
  - 'xl(4s xl[4s xl{4s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'diss@ diss# diss$ diss% diss^ diss& diss* diss( diss_ diss= diss+ diss[ diss{ diss\\ diss| diss< diss> diss` diss~ diss/'
  - '4s@ 4s# 4s$ 4s% 4s^ 4s& 4s* 4s( 4s_ 4s= 4s+ 4s[ 4s{ 4s\\ 4s| 4s< 4s> 4s` 4s~ 4s/'
  - xfail: ...

- - 'diss) diss] diss} diss'' diss" diss- diss, diss. diss? diss! diss; diss:'
  - '4s) 4s] 4s} diss'' diss" diss- diss, diss. diss? diss! diss; diss:'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - 'diss(xl diss[diss diss{xl'
  - '4s(xl 4s[xl'
  - xfail: ...

- - '(dist [dist {dist ''dist "dist -dist'
  - '(4t [4t {4t ''dist "dist -dist'
  - xfail: ...

- - '!dist .dist ,dist ;dist :dist ?dist *dist =dist +dist @dist #dist $dist %dist ^dist &dist )dist _dist ]dist }dist \\dist |dist <dist >dist `dist ~dist /dist'
  - '!dist .dist ,dist ;dist :dist ?dist *4t =4t +4t @4t #4t $4t %4t ^4t &4t )4t _4t ]4t }4t \\4t |4t <4t >4t ?4t `4t ~4t /4t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'xl(dist xl[dist xl{dist'
  - 'xl(4t xl[4t xl{4t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'dist) dist] dist} dist'' dist" dist- dist, dist. dist? dist! dist; dist: dist@ dist# dist$ dist% dist^ dist& dist* dist( dist_ dist= dist+ dist[ dist{ dist\\ dist| dist< dist> dist` dist~ dist/'
  - '4t) 4t] 4t} dist'' dist" dist- dist, dist. dist? dist! dist; dist: 4t@ 4t# 4t$ 4t% 4t^ 4t& 4t* 4t( 4t_ 4t= 4t+ 4t[ 4t{ 4t\\ 4t| 4t< 4t> 4t` 4t~ 4t/'
  - xfail: ...

- - 'dist(xl dist[dist dist{xl'
  - '4t(xl 4t[xl'
  - xfail: ...

- - '(do [do {do ''do "do -do'
  - '(d [d {d ''d "d -d'
  - xfail: ...

- - '!do @do #do $do %do ^do &do *do )do _do =do +do ]do }do \\do |do .do ,do ;do :do ?do <do >do `do ~do /do'
  - '!d @d #d $d %d ^d &d *d )d _d =d +d ]d }d \\d |d .d ,d ;d :d ?d <d >d `d ~d /d'
  - xfail: contraction following special characters is ignored

- - '(d [d {d ''d "d -d'
  - '(;d [;d {;d '';d ";d -;d'
  - xfail: ...

- - '!d @d #d $d %d ^d &d *d )d _d =d +d ]d }d \\d |d .d ,d ;d :d ?d <d >d `d ~d /d'
  - '!;d @;d #;d $;d %;d ^;d &;d *;d );d _;d =;d +;d ];d };d \\;d |;d .;d ,;d ;;d :;d ?;d <;d >;d `;d ~;d /;d'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-do xl-([{''"do xl/-do xl$-do'
  - 'xl-d xl-([{''"d xl/-d xl$-d'
  - xfail: ...

- - 'xl(do xl[do xl{do xl''do xl"do xl-=([{''"do'
  - 'xl(d xl[d xl{d xl''d xl"d xl-=([{''"d'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'do) do] do} do'' do" do- do, do. do; do: do? do!'
  - 'd) d] d} d'' d" d- d, d. d; d: d? d!'
  - xfail: ...

- - 'do@ do# do$ do% do^ do& do* do( do_ do= do+ do[ do{ do\\ do| do< do> do` do~ do/'
  - 'd@ d# d$ d% d^ d& d* d( d_ d= d+ d[ d{ d\\ d| d< d> d` d~ d/'
  - xfail: contraction followed by special characters is ignored

- - 'd) d] d} d'' d" d- d, d. d; d: d? d!'
  - ';d) ;d] ;d} ;d'' ;d" ;d- ;d, ;d. ;d; ;d: ;d? ;d!'
  - xfail: ...

- - 'd@ d# d$ d% d^ d& d* d( d_ d= d+ d[ d{ d\\ d| d< d> d` d~ d/'
  - ';d@ ;d# ;d$ ;d% ;d^ ;d& ;d* ;d( ;d_ ;d= ;d+ ;d[ ;d{ ;d\\ ;d| ;d< ;d> ;d` ;d~ ;d/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'do-xl do-([{''"xl do-/xl do-$xl'
  - 'd-xl d-([{''"xl d-/xl d-$xl'
  - xfail: ...

- - 'do(xl do[xl do{xl do''xl do"xl do=([{''"-xl do([{''"-xl do/-xl do$-xl'
  - 'd(xl d[xl d{xl d''xl d"xl d=([{''"-xl d([{''"-xl d/-xl d$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(either [either {either ''either "either -either'
  - '(ei [ei {ei ''ei "ei -ei'
  - xfail: ...

- - '!either @either #either $either %either ^either &either *either )either _either =either +either ]either }either \\either |either .either ,either ;either :either ?either <either >either `either ~either /either'
  - '!ei @ei #ei $ei %ei ^ei &ei *ei )ei _ei =ei +ei ]ei }ei \\ei |ei .ei ,ei ;ei :ei ?ei <ei >ei ?ei `ei ~ei /ei'
  - xfail: contraction following special characters is ignored

- - '(ei [ei {ei ''ei "ei -ei'
  - '(;ei [;ei {;ei '';ei ";ei -;ei'
  - xfail: ...

- - '!ei @ei #ei $ei %ei ^ei &ei *ei )ei _ei =ei +ei ]ei }ei \\ei |ei .ei ,ei ;ei :ei ?ei <ei >ei ?ei `ei ~ei /ei'
  - '!;ei @;ei #;ei $;ei %;ei ^;ei &;ei *;ei );ei _;ei =;ei +;ei ];ei };ei \\;ei |;ei .;ei ,;ei ;;ei :;ei ?;ei <;ei >;ei `;ei ~;ei /;ei'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-either xl-([{''"either xl/-either xl$-either'
  - 'xl-ei xl-([{''"ei xl/-ei xl$-ei'
  - xfail: ...

- - 'xl(either xl[either xl{either xl''either xl"either xl-=([{''"either'
  - 'xl(ei xl[ei xl{ei xl''ei xl"ei xl-=([{''"ei'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'either) either] either} either'' either" either- either, either. either; either: either? either!'
  - 'ei) ei] ei} ei'' ei" ei- ei, ei. ei; ei: ei? ei!'
  - xfail: ...

- - 'either@ either# either$ either% either^ either& either* either( either_ either= either+ either[ either{ either\\ either| either< either> either` either~ either/'
  - 'ei@ ei# ei$ ei% ei^ ei& ei* ei( ei_ ei= ei+ ei[ ei{ ei\\ ei| ei< ei> ei` ei~ ei/'
  - xfail: contraction followed by special characters is ignored

- - 'ei) ei] ei} ei'' ei" ei- ei, ei. ei; ei: ei? ei!'
  - ';ei) ;ei] ;ei} ;ei'' ;ei" ;ei- ;ei, ;ei. ;ei; ;ei: ;ei? ;ei!'
  - xfail: ...

- - 'ei@ ei# ei$ ei% ei^ ei& ei* ei( ei_ ei= ei+ ei[ ei{ ei\\ ei| ei< ei> ei` ei~ ei/'
  - ';ei@ ;ei# ;ei$ ;ei% ;ei^ ;ei& ;ei* ;ei( ;ei_ ;ei= ;ei+ ;ei[ ;ei{ ;ei\\ ;ei| ;ei< ;ei> ;ei` ;ei~ ;ei/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'either-xl either-([{''"xl either-/xl either-$xl'
  - 'ei-xl ei-([{''"xl ei-/xl ei-$xl'
  - xfail: ...

- - 'either(xl either[xl either{xl either''xl either"xl either=([{''"-xl either([{''"-xl either/-xl either$-xl'
  - 'ei(xl ei[xl ei{xl ei''xl ei"xl ei=([{''"-xl ei([{''"-xl ei/-xl ei$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(eithers [eithers {eithers ''eithers "eithers -eithers'
  - '(eis [eis {eis ''eis "eis -eis'
  - xfail: ...

- - '!eithers @eithers #eithers $eithers %eithers ^eithers &eithers *eithers )eithers _eithers =eithers +eithers ]eithers }eithers \\eithers |eithers .eithers ,eithers ;eithers :eithers ?eithers <eithers >eithers `eithers ~eithers /eithers'
  - '!eis @eis #eis $eis %eis ^eis &eis *eis )eis _eis =eis +eis ]eis }eis \\eis |eis .eis ,eis ;eis :eis ?eis <eis >eis ?eis `eis ~eis /eis'
  - xfail: contraction following special characters is ignored

- - 'eis  (eis [eis {eis ''eis "eis -eis !eis @eis #eis $eis %eis ^eis &eis *eis )eis _eis =eis +eis ]eis }eis \\eis |eis .eis ,eis ;eis :eis ?eis <eis >eis ?eis `eis ~eis /eis'
  - ';eis  (;eis [;eis {;eis '';eis ";eis -;eis !;eis @;eis #;eis $;eis %;eis ^;eis &;eis *;eis );eis _;eis =;eis +;eis ];eis };eis \\;eis |;eis .;eis ,;eis ;;eis :;eis ?;eis <;eis >;eis `;eis ~;eis /;eis'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-eithers xl-([{''"eithers xl/-eithers xl$-eithers'
  - 'xl-eis xl-([{''"eis xl/-eis xl$-eis'
  - xfail: ...

- - 'xl(eithers xl[eithers xl{eithers xl''eithers xl"eithers xl-=([{''"eithers'
  - 'xl(eis xl[eis xl{eis xl''eis xl"eis xl-=([{''"eis'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'eithers) eithers] eithers} eithers'' eithers" eithers- eithers, eithers. eithers; eithers: eithers? eithers!'
  - 'eis) eis] eis} eis'' eis" eis- eis, eis. eis; eis: eis? eis!'
  - xfail: ...

- - 'eithers@ eithers# eithers$ eithers% eithers^ eithers& eithers* eithers( eithers_ eithers= eithers+ eithers[ eithers{ eithers\\ eithers| eithers< eithers> eithers` eithers~ eithers/'
  - 'eis@ eis# eis$ eis% eis^ eis& eis* eis( eis_ eis= eis+ eis[ eis{ eis\\ eis| eis< eis> eis` eis~ eis/'
  - xfail: contraction followed by special characters is ignored

- - 'eis) eis] eis} eis'' eis" eis- eis, eis. eis; eis: eis? eis! eis@ eis# eis$ eis% eis^ eis& eis* eis( eis_ eis= eis+ eis[ eis{ eis\\ eis| eis< eis> eis` eis~ eis/'
  - ';eis) ;eis] ;eis} ;eis'' ;eis" ;eis- ;eis, ;eis. ;eis; ;eis: ;eis? ;eis! ;eis@ ;eis# ;eis$ ;eis% ;eis^ ;eis& ;eis* ;eis( ;eis_ ;eis= ;eis+ ;eis[ ;eis{ ;eis\\ ;eis| ;eis< ;eis> ;eis` ;eis~ ;eis/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'eithers-xl eithers-([{''"xl eithers-/xl eithers-$xl'
  - 'eis-xl eis-([{''"xl eis-/xl eis-$xl'
  - xfail: ...

- - 'eithers(xl eithers[xl eithers{xl eithers''xl eithers"xl eithers=([{''"-xl eithers([{''"-xl eithers/-xl eithers$-xl'
  - 'eis(xl eis[xl eis{xl eis''xl eis"xl eis=([{''"-xl eis([{''"-xl eis/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(enough [enough {enough ''enough "enough -enough !enough .enough ,enough ;enough :enough ?enough'
  - '(5 [5 {5 ''5|< "5|< -5|< !5|< .5|< ,5|< ;5|< :5|< ?5|<'
  - xfail: ...

- - '*enough =enough +enough @enough #enough $enough %enough ^enough &enough )enough _enough ]enough }enough \\enough |enough <enough >enough `enough ~enough /enough'
  - '*5 =5 +5 @5 #5 $5 %5 ^5 &5 )5 _5 ]5 }5 \\5 |5 <5 >5 ?5 `5 ~5 /5'
  - xfail: contraction following special characters is ignored

- - 'xl(enough xl[enough xl{enough'
  - 'xl(5 xl[5 xl{5'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'enough) enough] enough} enough'' enough" enough- enough, enough. enough? enough!'
  - '5) 5] 5} 5|<'' 5|<" 5|<- 5|<, 5|<. 5|<? 5|<!'
  - xfail: ...

- - 'enough; enough: enough@ enough# enough$ enough% enough^ enough& enough* enough( enough_ enough= enough+ enough[ enough{ enough\\ enough| enough< enough> enough` enough~ enough/'
  - '5|<; 5|<: 5@ 5# 5$ 5% 5^ 5& 5* 5( 5_ 5= 5+ 5[ 5{ 5\\ 5| 5< 5> 5` 5~ 5/'
  - xfail: contraction followed by special characters is ignored

- - 'enough(xl enough[enough enough{xl'
  - '5(xl 5[xl'
  - xfail: contraction followed by special characters following any letter  is ignored

- - '(every [every {every ''every "every -every'
  - '(e [e {e ''e "e -e'
  - xfail: ...

- - '!every @every #every $every %every ^every &every *every )every _every =every +every ]every }every \\every |every .every ,every ;every :every ?every <every >every `every ~every /every'
  - '!e @e #e $e %e ^e &e *e )e _e =e +e ]e }e \\e |e .e ,e ;e :e ?e <e >e `e ~e /e'
  - xfail: contraction following special characters is ignored

- - '(e [e {e ''e "e -e'
  - '(;e [;e {;e '';e ";e -;e'
  - xfail: ...

- - '!e @e #e $e %e ^e &e *e )e _e =e +e ]e }e \\e |e .e ,e ;e :e ?e <e >e `e ~e /e'
  - '!;e @;e #;e $;e %;e ^;e &;e *;e );e _;e =;e +;e ];e };e \\;e |;e .;e ,;e ;;e :;e ?;e <;e >;e `;e ~;e /;e'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-every xl-([{''"every xl/-every xl$-every'
  - 'xl-e xl-([{''"e xl/-e xl$-e'
  - xfail: ...

- - 'xl(every xl[every xl{every xl''every xl"every xl-=([{''"every'
  - 'xl(e xl[e xl{e xl''e xl"e xl-=([{''"e'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'every) every] every} every'' every" every- every, every. every; every: every? every!'
  - 'e) e] e} e'' e" e- e, e. e; e: e? e!'
  - xfail: ...

- - 'every@ every# every$ every% every^ every& every* every( every_ every= every+ every[ every{ every\\ every| every< every> every` every~ every/'
  - 'e@ e# e$ e% e^ e& e* e( e_ e= e+ e[ e{ e\\ e| e< e> e` e~ e/'
  - xfail: contraction followed by special characters is ignored

- - 'e) e] e} e'' e" e- e, e. e; e: e? e!'
  - ';e) ;e] ;e} ;e'' ;e" ;e- ;e, ;e. ;e; ;e: ;e? ;e!'
  - xfail: ...

- - 'e@ e# e$ e% e^ e& e* e( e_ e= e+ e[ e{ e\\ e| e< e> e` e~ e/'
  - ';e@ ;e# ;e$ ;e% ;e^ ;e& ;e* ;e( ;e_ ;e= ;e+ ;e[ ;e{ ;e\\ ;e| ;e< ;e> ;e` ;e~ ;e/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'every-xl every-([{''"xl every-/xl every-$xl'
  - 'e-xl e-([{''"xl e-/xl e-$xl'
  - xfail: ...

- - 'every(xl every[xl every{xl every''xl every"xl every=([{''"-xl every([{''"-xl every/-xl every$-xl'
  - 'e(xl e[xl e{xl e''xl e"xl e=([{''"-xl e([{''"-xl e/-xl e$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(first [first {first ''first "first -first'
  - '(f/ [f/ {f/ ''f/ "f/ -f/'
  - xfail: ...

- - '!first @first #first $first %first ^first &first *first )first _first =first +first ]first }first \\first |first .first ,first ;first :first ?first <first >first `first ~first /first'
  - '!f/ @f/ #f/ $f/ %f/ ^f/ &f/ *f/ )f/ _f/ =f/ +f/ ]f/ }f/ \\f/ |f/ .f/ ,f/ ;f/ :f/ ?f/ <f/ >f/ ?f/ `f/ ~f/ /f/'
  - xfail: contraction following special characters is ignored

- - '(fst [fst {fst ''fst "fst -fst !fsts @fsts #fsts $fsts %fsts ^fsts &fsts *fsts )fsts _fsts =fsts +fsts ]fsts }fsts \\fsts |fsts .fsts ,fsts ;fsts :fsts ?fsts <fsts >fsts `fsts ~fsts /fsts'
  - '(fst [fst {fst ''fst "fst -fst !fsts @fsts #fsts $fsts %fsts ^fsts &fsts *fsts )fsts _fsts =fsts +fsts ]fsts }fsts \\fsts |fsts .fsts ,fsts ;fsts :fsts ?fsts <fsts >fsts `fsts ~fsts /fsts'
  - xfail: ...

- - '!fst @fst #fst $fst %fst ^fst &fst *fst )fst _fst =fst +fst ]fst }fst \\fst |fst .fst ,fst ;fst :fst ?fst <fst >fst `fst ~fst /fst'
  - '!fst @fst #fst $fst %fst ^fst &fst *fst )fst _fst =fst +fst ]fst }fst \\fst |fst .fst ,fst ;fst :fst ?fst <fst >fst `fst ~fst /fst'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-first xl-([{''"first xl/-first xl$-first'
  - 'xl-f/ xl-([{''"f/ xl/-f/ xl$-f/'
  - xfail: ...

- - 'xl(first xl[first xl{first xl''first xl"first xl-=([{''"first'
  - 'xl(f/ xl[f/ xl{f/ xl''f/ xl"f/ xl-=([{''"f/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'first) first] first} first'' first" first- first, first. first; first: first? first!'
  - 'f/) f/] f/} f/'' f/" f/- f/, f/. f/; f/: f/? f/!'
  - xfail: ...

- - 'first@ first# first$ first% first^ first& first* first( first_ first= first+ first[ first{ first\\ first| first< first> first` first~ first/'
  - 'f/@ f/# f/$ f/% f/^ f/& f/* f/( f/_ f/= f/+ f/[ f/{ f/\\ f/| f/< f/> f/` f/~ f//'
  - xfail: contraction followed by special characters is ignored

- - 'fst) fst] fst} fst'' fst" fst- fst, fst. fst; fst: fst? fst!'
  - 'fst) fst] fst} fst'' fst" fst- fst, fst. fst; fst: fst? fst!'
  - xfail: ...

- - 'fst@ fst# fst$ fst% fst^ fst& fst* fst( fst_ fst= fst+ fst[ fst{ fst\\ fst| fst< fst> fst` fst~ fst/'
  - 'fst@ fst# fst$ fst% fst^ fst& fst* fst( fst_ fst= fst+ fst[ fst{ fst\\ fst| fst< fst> fst` fst~ fst/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'first-xl first-([{''"xl first-/xl first-$xl'
  - 'f/-xl f/-([{''"xl f/-/xl f/-$xl'
  - xfail: ...

- - 'first(xl first[xl first{xl first''xl first"xl first=([{''"-xl first([{''"-xl first/-xl first$-xl'
  - 'f/(xl f/[xl f/{xl f/''xl f/"xl f/=([{''"-xl f/([{''"-xl f//-xl f/$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(firsts [firsts {firsts ''firsts "firsts -firsts'
  - '(f/s [f/s {f/s ''f/s "f/s -f/s'
  - xfail: ...

- - '!firsts @firsts #firsts $firsts %firsts ^firsts &firsts *firsts )firsts _firsts =firsts +firsts ]firsts }firsts \\firsts |firsts .firsts ,firsts ;firsts :firsts ?firsts <firsts >firsts `firsts ~firsts /firsts'
  - '!f/s @f/s #f/s $f/s %f/s ^f/s &f/s *f/s )f/s _f/s =f/s +f/s ]f/s }f/s \\f/s |f/s .f/s ,f/s ;f/s :f/s ?f/s <f/s >f/s ?f/s `f/s ~f/s /f/s'
  - xfail: contraction following special characters is ignored

- - 'fsts (fsts [fsts {fsts ''fsts "fsts -fsts'
  - 'fsts (fsts [fsts {fsts ''fsts "fsts -fsts'
  - xfail: non-contraction of "fsts" conflicts witcv contraction of "firsts"

- - 'xl-firsts xl-([{''"firsts xl/-firsts xl$-firsts'
  - 'xl-f/s xl-([{''"f/s xl/-f/s xl$-f/s'
  - xfail: ...

- - 'xl(firsts xl[firsts xl{firsts xl''firsts xl"firsts xl-=([{''"firsts'
  - 'xl(f/s xl[f/s xl{f/s xl''f/s xl"f/s xl-=([{''"f/s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'firsts) firsts] firsts} firsts'' firsts" firsts- firsts, firsts. firsts; firsts: firsts? firsts!'
  - 'f/s) f/s] f/s} f/s'' f/s" f/s- f/s, f/s. f/s; f/s: f/s? f/s!'
  - xfail: ...

- - 'firsts@ firsts# firsts$ firsts% firsts^ firsts& firsts* firsts( firsts_ firsts= firsts+ firsts[ firsts{ firsts\\ firsts| firsts< firsts> firsts` firsts~ firsts/'
  - 'f/s@ f/s# f/s$ f/s% f/s^ f/s& f/s* f/s( f/s_ f/s= f/s+ f/s[ f/s{ f/s\\ f/s| f/s< f/s> f/s` f/s~ f/s/'
  - xfail: contraction followed by special characters is ignored

- - 'fsts) fsts] fsts} fsts'' fsts" fsts- fsts, fsts. fsts; fsts: fsts? fsts! fsts@ fsts# fsts$ fsts% fsts^ fsts& fsts* fsts( fsts_ fsts= fsts+ fsts[ fsts{ fsts\\ fsts| fsts< fsts> fsts` fsts~ fsts/'
  - 'fsts) fsts] fsts} fsts'' fsts" fsts- fsts, fsts. fsts; fsts: fsts? fsts! fsts@ fsts# fsts$ fsts% fsts^ fsts& fsts* fsts( fsts_ fsts= fsts+ fsts[ fsts{ fsts\\ fsts| fsts< fsts> fsts` fsts~ fsts/'
  - xfail: non-contraction of "fsts" conflicts with contraction of "firsts"

- - 'firsts-xl firsts-([{''"xl firsts-/xl firsts-$xl'
  - 'f/s-xl f/s-([{''"xl f/s-/xl f/s-$xl'
  - xfail: ...

- - 'firsts(xl firsts[xl firsts{xl firsts''xl firsts"xl firsts=([{''"-xl firsts([{''"-xl firsts/-xl firsts$-xl'
  - 'f/s(xl f/s[xl f/s{xl f/s''xl f/s"xl f/s=([{''"-xl f/s([{''"-xl f/s/-xl f/s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'firstb firstc firstd firstf firstg firsth firstj firstk firstl firstm firstn firstp firstq firstr firsts firstt firstv firstw firstx firstz'
  - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz'
  - xfail: ...

- - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz fstful fstment fstness fstsion fsttion fstless fstance fstence fstity fstong'
  - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz fstful fstment fstness fstsion fsttion fstless fstance fstence fstity fstong'
  - xfail: non-contraction of "fst" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "fst"

- - '(friend [friend {friend ''friend "friend -friend'
  - '(fr [fr {fr ''fr "fr -fr'
  - xfail: ...

- - '!friend @friend #friend $friend %friend ^friend &friend *friend )friend _friend =friend +friend ]friend }friend \\friend |friend .friend ,friend ;friend :friend ?friend <friend >friend `friend ~friend /friend'
  - '!fr @fr #fr $fr %fr ^fr &fr *fr )fr _fr =fr +fr ]fr }fr \\fr |fr .fr ,fr ;fr :fr ?fr <fr >fr ?fr `fr ~fr /fr'
  - xfail: contraction following special characters is ignored

- - '(fr [fr {fr ''fr "fr -fr'
  - '(;fr [;fr {;fr '';fr ";fr -;fr'
  - xfail: ...

- - '!fr @fr #fr $fr %fr ^fr &fr *fr )fr _fr =fr +fr ]fr }fr \\fr |fr .fr ,fr ;fr :fr ?fr <fr >fr ?fr `fr ~fr /fr'
  - '!;fr @;fr #;fr $;fr %;fr ^;fr &;fr *;fr );fr _;fr =;fr +;fr ];fr };fr \\;fr |;fr .;fr ,;fr ;;fr :;fr ?;fr <;fr >;fr `;fr ~;fr /;fr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-friend xl-([{''"friend xl/-friend xl$-friend'
  - 'xl-fr xl-([{''"fr xl/-fr xl$-fr'
  - xfail: ...

- - 'xl(friend xl[friend xl{friend xl''friend xl"friend xl-=([{''"friend'
  - 'xl(fr xl[fr xl{fr xl''fr xl"fr xl-=([{''"fr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'friend) friend] friend} friend'' friend" friend- friend, friend. friend; friend: friend? friend!'
  - 'fr) fr] fr} fr'' fr" fr- fr, fr. fr; fr: fr? fr!'
  - xfail: ...

- - 'friend@ friend# friend$ friend% friend^ friend& friend* friend( friend_ friend= friend+ friend[ friend{ friend\\ friend| friend< friend> friend` friend~ friend/'
  - 'fr@ fr# fr$ fr% fr^ fr& fr* fr( fr_ fr= fr+ fr[ fr{ fr\\ fr| fr< fr> fr` fr~ fr/'
  - xfail: contraction followed by special characters is ignored

- - 'fr) fr] fr} fr'' fr" fr- fr, fr. fr; fr: fr? fr!'
  - ';fr) ;fr] ;fr} ;fr'' ;fr" ;fr- ;fr, ;fr. ;fr; ;fr: ;fr? ;fr!'
  - xfail: ...

- - 'fr@ fr# fr$ fr% fr^ fr& fr* fr( fr_ fr= fr+ fr[ fr{ fr\\ fr| fr< fr> fr` fr~ fr/'
  - ';fr@ ;fr# ;fr$ ;fr% ;fr^ ;fr& ;fr* ;fr( ;fr_ ;fr= ;fr+ ;fr[ ;fr{ ;fr\\ ;fr| ;fr< ;fr> ;fr` ;fr~ ;fr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'friend-xl friend-([{''"xl friend-/xl friend-$xl'
  - 'fr-xl fr-([{''"xl fr-/xl fr-$xl'
  - xfail: ...

- - 'friend(xl friend[xl friend{xl friend''xl friend"xl friend=([{''"-xl friend([{''"-xl friend/-xl friend$-xl'
  - 'fr(xl fr[xl fr{xl fr''xl fr"xl fr=([{''"-xl fr([{''"-xl fr/-xl fr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'friendb friendc friendd friendf friendg friendh friendj friendk friendl friendm friendn friendp friendq friendr friends friendt friendv friendw friendx friendz'
  - 'frb frc frd frf frg frh frj frk frl frm frn frp frq frr frs frt frv frw frx frz'

- - 'frb frc frd frf frg frh frj frk frl frm frn frp frq frr frs frt frv frw frx frz frful frment frness frsion frtion frless france frence frity frong'
  - ';frb ;frc ;frd ;frf ;frg ;frh ;frj ;frk ;frl ;frm ;frn ;frp ;frq ;frr ;frs ;frt ;frv ;frw ;frx ;frz ;fr;l ;fr;t ;fr;s ;fr.n ;fr;n ;fr.s ;fr.e ;fr;e ;fr;y ;fr;g'
  - xfail: non-contraction of "fr" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "fr"

- - 'afriend afriendaid'
  - ';afr a;fraid'
  - xfail: contraction of "fr" following "a" has a missing grade 1 indicator before "a" due to conflict with contraction of "af" followed by "r"

- - 'bfriend cfriend dfriend efriend  ffriend gfriend hfriend ifriend jfriend kfriend lfriend  mfriend nfriend pfriend qfriend rfriend sfriend tfriend ufriend  vfriend wfriend xfriend yfriend zfriend'
  - 'bfr cfr dfr efr  ffr gfr hfr ifr jfr kfr lfr  mfr nfr pfr qfr rfr sfr tfr ufr  vfr wfr xfr yfr zfr'

- - 'afr bfr cfr dfr efr  ffr gfr hfr ifr jfr kfr lfr  mfr nfr fr pfr qfr rfr sfr tfr ufr  vfr wfr xfr yfr zfr'
  - 'a;fr b;fr c;fr d;fr e;fr  f;fr g;fr h;fr i;fr j;fr k;fr l;fr  m;fr n;fr p;fr q;fr r;fr s;fr t;fr u;fr  v;fr w;fr x;fr y;fr z;fr'
  - xfail: non-contraction of "fr" following letter except "o" has a missing grade 1 indicator due to conflict with contraction of "fr"

- - '(from [from {from ''from "from -from'
  - '(f [f {f ''f "f -f'
  - xfail: ...

- - '!from @from #from $from %from ^from &from *from )from _from =from +from ]from }from \\from |from .from ,from ;from :from ?from <from >from `from ~from /from'
  - '!f @f #f $f %f ^f &f *f )f _f =f +f ]f }f \\f |f .f ,f ;f :f ?f <f >f `f ~f /f'
  - xfail: contraction following special characters is ignored

- - '(f [f {f ''f "f -f'
  - '(;f [;f {;f '';f ";f -;f'
  - xfail: ...

- - '!f @f #f $f %f ^f &f *f )f _f =f +f ]f }f \\f |f .f ,f ;f :f ?f <f >f `f ~f /f'
  - '!;f @;f #;f $;f %;f ^;f &;f *;f );f _;f =;f +;f ];f };f \\;f |;f .;f ,;f ;;f :;f ?;f <;f >;f `;f ~;f /;f'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-from xl-([{''"from xl/-from xl$-from'
  - 'xl-f xl-([{''"f xl/-f xl$-f'
  - xfail: ...

- - 'xl(from xl[from xl{from xl''from xl"from xl-=([{''"from'
  - 'xl(f xl[f xl{f xl''f xl"f xl-=([{''"f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'from) from] from} from'' from" from- from, from. from; from: from? from!'
  - 'f) f] f} f'' f" f- f, f. f; f: f? f!'
  - xfail: ...

- - 'from@ from# from$ from% from^ from& from* from( from_ from= from+ from[ from{ from\\ from| from< from> from` from~ from/'
  - 'f@ f# f$ f% f^ f& f* f( f_ f= f+ f[ f{ f\\ f| f< f> f` f~ f/'
  - xfail: contraction followed by special characters is ignored

- - 'f) f] f} f'' f" f- f, f. f; f: f? f!'
  - ';f) ;f] ;f} ;f'' ;f" ;f- ;f, ;f. ;f; ;f: ;f? ;f!'
  - xfail: ...

- - 'f@ f# f$ f% f^ f& f* f( f_ f= f+ f[ f{ f\\ f| f< f> f` f~ f/'
  - ';f@ ;f# ;f$ ;f% ;f^ ;f& ;f* ;f( ;f_ ;f= ;f+ ;f[ ;f{ ;f\\ ;f| ;f< ;f> ;f` ;f~ ;f/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'from-xl from-([{''"xl from-/xl from-$xl'
  - 'f-xl f-([{''"xl f-/xl f-$xl'
  - xfail: ...

- - 'from(xl from[xl from{xl from''xl from"xl from=([{''"-xl from([{''"-xl from/-xl from$-xl'
  - 'f(xl f[xl f{xl f''xl f"xl f=([{''"-xl f([{''"-xl f/-xl f$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '!gh @gh #gh $gh %gh ^gh &gh *gh )gh _gh =gh +gh ]gh }gh \\gh |gh .gh ,gh ;gh :gh ?gh <gh >gh `gh ~gh /gh'
  - '!< @< #< $< %< ^< &< *< )< _< =< +< ]< }< \\< |< .< ,< ;< :< ?< < < >< `< ~< /<'
  - xfail: ...

- - 'gh (gh [gh {gh ''gh "gh -gh'
  - '< (< [< {< ''< "< -<'
  - xfail: contraction following special characters is ignored

- - 'xl(gh xl[gh xl{gh xl''gh xl"gh xl-=([{''"gh'
  - 'xl(< xl[< xl{< xl''< xl"< xl-=([{''"<'
  - xfail: ...

- - 'xl-gh xl-([{''"gh xl/-gh xl$-gh'
  - 'xl-< xl-([{''"< xl/-< xl$-<'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'gh@ gh# gh$ gh% gh^ gh& gh* gh( gh_ gh= gh+ gh[ gh{ gh\\ gh| gh< gh> gh` gh~ gh/'
  - '<@ <# <$ <% <^ <& <* <( <_ <= <+ <[ <{ <\\ <| << <> <` <~ </'
  - xfail: ...

- - 'gh) gh] gh} gh'' gh" gh- gh, gh. gh; gh: gh? gh!'
  - '<) <] <} <'' <" <- <, <. <; <: <? <!'
  - xfail: contraction followed by special characters is ignored

- - 'gh(xl gh[xl gh{xl gh''xl gh"xl gh=([{''"-xl gh([{''"-xl gh/-xl gh$-xl'
  - '<(xl <[xl <{xl <''xl <"xl <=([{''"-xl <([{''"-xl </-xl <$-xl'
  - xfail: ...

- - 'gh-xl gh-([{''"xl gh-/xl gh-$xl'
  - '<-xl <-([{''"xl <-/xl <-$xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(go [go {go ''go "go -go'
  - '(g [g {g ''g "g -g'
  - xfail: ...

- - '!go @go #go $go %go ^go &go *go )go _go =go +go ]go }go \\go |go .go ,go ;go :go ?go <go >go `go ~go /go'
  - '!g @g #g $g %g ^g &g *g )g _g =g +g ]g }g \\g |g .g ,g ;g :g ?g <g >g `g ~g /g'
  - xfail: contraction following special characters is ignored

- - '(g [g {g ''g "g -g'
  - '(;g [;g {;g '';g ";g -;g'
  - xfail: ...

- - '!g @g #g $g %g ^g &g *g )g _g =g +g ]g }g \\g |g .g ,g ;g :g ?g <g >g `g ~g /g'
  - '!;g @;g #;g $;g %;g ^;g &;g *;g );g _;g =;g +;g ];g };g \\;g |;g .;g ,;g ;;g :;g ?;g <;g >;g `;g ~;g /;g'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-go xl-([{''"go xl/-go xl$-go'
  - 'xl-g xl-([{''"g xl/-g xl$-g'
  - xfail: ...

- - 'xl(go xl[go xl{go xl''go xl"go xl-=([{''"go'
  - 'xl(g xl[g xl{g xl''g xl"g xl-=([{''"g'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'go) go] go} go'' go" go- go, go. go; go: go? go!'
  - 'g) g] g} g'' g" g- g, g. g; g: g? g!'
  - xfail: ...

- - 'go@ go# go$ go% go^ go& go* go( go_ go= go+ go[ go{ go\\ go| go< go> go` go~ go/'
  - 'g@ g# g$ g% g^ g& g* g( g_ g= g+ g[ g{ g\\ g| g< g> g` g~ g/'
  - xfail: contraction followed by special characters is ignored

- - 'g) g] g} g'' g" g- g, g. g; g: g? g!'
  - ';g) ;g] ;g} ;g'' ;g" ;g- ;g, ;g. ;g; ;g: ;g? ;g!'
  - xfail: ...

- - 'g@ g# g$ g% g^ g& g* g( g_ g= g+ g[ g{ g\\ g| g< g> g` g~ g/'
  - ';g@ ;g# ;g$ ;g% ;g^ ;g& ;g* ;g( ;g_ ;g= ;g+ ;g[ ;g{ ;g\\ ;g| ;g< ;g> ;g` ;g~ ;g/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'go-xl go-([{''"xl go-/xl go-$xl'
  - 'g-xl g-([{''"xl g-/xl g-$xl'
  - xfail: ...

- - 'go(xl go[xl go{xl go''xl go"xl go=([{''"-xl go([{''"-xl go/-xl go$-xl'
  - 'g(xl g[xl g{xl g''xl g"xl g=([{''"-xl g([{''"-xl g/-xl g$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(good [good {good ''good "good -good'
  - '(gd [gd {gd ''gd "gd -gd'
  - xfail: ...

- - '!good @good #good $good %good ^good &good *good )good _good =good +good ]good }good \\good |good .good ,good ;good :good ?good <good >good `good ~good /good'
  - '!gd @gd #gd $gd %gd ^gd &gd *gd )gd _gd =gd +gd ]gd }gd \\gd |gd .gd ,gd ;gd :gd ?gd <gd >gd ?gd `gd ~gd /gd'
  - xfail: contraction following special characters is ignored

- - '(gd [gd {gd ''gd "gd -gd'
  - '(;gd [;gd {;gd '';gd ";gd -;gd'
  - xfail: ...

- - '!gd @gd #gd $gd %gd ^gd &gd *gd )gd _gd =gd +gd ]gd }gd \\gd |gd .gd ,gd ;gd :gd ?gd <gd >gd ?gd `gd ~gd /gd'
  - '!;gd @;gd #;gd $;gd %;gd ^;gd &;gd *;gd );gd _;gd =;gd +;gd ];gd };gd \\;gd |;gd .;gd ,;gd ;;gd :;gd ?;gd <;gd >;gd `;gd ~;gd /;gd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-good xl-([{''"good xl/-good xl$-good'
  - 'xl-gd xl-([{''"gd xl/-gd xl$-gd'
  - xfail: ...

- - 'xl(good xl[good xl{good xl''good xl"good xl-=([{''"good'
  - 'xl(gd xl[gd xl{gd xl''gd xl"gd xl-=([{''"gd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'good) good] good} good'' good" good- good, good. good; good: good? good!'
  - 'gd) gd] gd} gd'' gd" gd- gd, gd. gd; gd: gd? gd!'
  - xfail: ...

- - 'good@ good# good$ good% good^ good& good* good( good_ good= good+ good[ good{ good\\ good| good< good> good` good~ good/'
  - 'gd@ gd# gd$ gd% gd^ gd& gd* gd( gd_ gd= gd+ gd[ gd{ gd\\ gd| gd< gd> gd` gd~ gd/'
  - xfail: contraction followed by special characters is ignored

- - 'gd) gd] gd} gd'' gd" gd- gd, gd. gd; gd: gd? gd!'
  - ';gd) ;gd] ;gd} ;gd'' ;gd" ;gd- ;gd, ;gd. ;gd; ;gd: ;gd? ;gd!'
  - xfail: ...

- - 'gd@ gd# gd$ gd% gd^ gd& gd* gd( gd_ gd= gd+ gd[ gd{ gd\\ gd| gd< gd> gd` gd~ gd/'
  - ';gd@ ;gd# ;gd$ ;gd% ;gd^ ;gd& ;gd* ;gd( ;gd_ ;gd= ;gd+ ;gd[ ;gd{ ;gd\\ ;gd| ;gd< ;gd> ;gd` ;gd~ ;gd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'good-xl good-([{''"xl good-/xl good-$xl'
  - 'gd-xl gd-([{''"xl gd-/xl gd-$xl'
  - xfail: ...

- - 'good(xl good[xl good{xl good''xl good"xl good=([{''"-xl good([{''"-xl good/-xl good$-xl'
  - 'gd(xl gd[xl gd{xl gd''xl gd"xl gd=([{''"-xl gd([{''"-xl gd/-xl gd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'goodb goodc goodd goodf goodg goodh goodj goodk goodl goodm goodn goodp goodq goodr goods goodt goodv goodw goodx goodz'
  - 'gdb gdc gdd gdf gdg gdh gdj gdk gdl gdm gdn gdp gdq gdr gds gdt gdv gdw gdx gdz'

- - 'gdb gdc gdd gdf gdg gdh gdj gdk gdl gdm gdn gdp gdq gdr gds gdt gdv gdw gdx gdz gdful gdment gdness gdsion gdtion gdless gdance gdence gdity gdong'
  - ';gdb ;gdc ;gdd ;gdf ;gdg ;gdh ;gdj ;gdk ;gdl ;gdm ;gdn ;gdp ;gdq ;gdr ;gds ;gdt ;gdv ;gdw ;gdx ;gdz ;gd;l ;gd;t ;gd;s ;gd.n ;gd;n ;gd.s ;gd.e ;gd;e ;gd;y ;gd;g'
  - xfail: non-contraction of "gd" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "gd"

- - '(great [great {great ''great "great -great'
  - '(grt [grt {grt ''grt "grt -grt'
  - xfail: ...

- - '!great @great #great $great %great ^great &great *great )great _great =great +great ]great }great \\great |great .great ,great ;great :great ?great <great >great `great ~great /great'
  - '!grt @grt #grt $grt %grt ^grt &grt *grt )grt _grt =grt +grt ]grt }grt \\grt |grt .grt ,grt grt :grt ?grt <grt >grt `grt ~grt /grt'
  - xfail: contraction following special characters is ignored

- - '(grt [grt {grt ''grt "grt -grt'
  - '(;grt [;grt {;grt '';grt ";grt -;grt'
  - xfail: ...

- - '!grt @grt #grt $grt %grt ^grt &grt *grt )grt _grt =grt +grt ]grt }grt \\grt |grt .grt ,grt ;grt :grt ?grt <grt >grt `grt ~grt /grt'
  - '!;grt @;grt #;grt $;grt %;grt ^;grt &;grt *;grt );grt _;grt =;grt +;grt ];grt };grt \\;grt |;grt .;grt ,;grt ;;grt :;grt ?;grt <;grt >;grt `;grt ~;grt /;grt'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-great xl-([{''"great xl/-great xl$-great'
  - 'xl-grt xl-([{''"grt xl/-grt xl$-grt'
  - xfail: ...

- - 'xl(great xl[great xl{great xl''great xl"great xl-=([{''"great'
  - 'xl(grt xl[grt xl{grt xl''grt xl"grt xl-=([{''"grt'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'great) great] great} great'' great" great- great, great. great; great: great? great!'
  - 'grt) grt] grt} grt'' grt" grt- grt, grt. grt; grt: grt? grt!'
  - xfail: ...

- - 'great@ great# great$ great% great^ great& great* great( great_ great= great+ great[ great{ great\\ great| great< great> great` great~ great/'
  - 'grt@ grt# grt$ grt% grt^ grt& grt* grt( grt_ grt= grt+ grt[ grt{ grt\\ grt| grt< grt> grt` grt~ grt/'
  - xfail: contraction followed by special characters is ignored

- - 'grt) grt] grt} grt'' grt" grt- grt, grt. grt; grt: grt? grt!'
  - ';grt) ;grt] ;grt} ;grt'' ;grt" ;grt- ;grt, ;grt. ;grt; ;grt: ;grt? ;grt!'
  - xfail: ...

- - 'grt@ grt# grt$ grt% grt^ grt& grt* grt( grt_ grt= grt+ grt[ grt{ grt\\ grt| grt< grt> grt` grt~ grt/'
  - ';grt@ ;grt# ;grt$ ;grt% ;grt^ ;grt& ;grt* ;grt( ;grt_ ;grt= ;grt+ ;grt[ ;grt{ ;grt\\ ;grt| ;grt< ;grt> ;grt` ;grt~ ;grt/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'great-xl great-([{''"xl great-/xl great-$xl'
  - 'grt-xl grt-([{''"xl grt-/xl grt-$xl'
  - xfail: ...

- - 'great(xl great[xl great{xl great''xl great"xl great=([{''"-xl great([{''"-xl great/-xl great$-xl'
  - 'grt(xl grt[xl grt{xl grt''xl grt"xl grt=([{''"-xl grt([{''"-xl grt/-xl grt$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'greata greatb greatc greatd greate greatf greatg greath greati greatj greatk greatl greatm greatn greato greatp greatq greatr greats greatt greatu greatv greatw greatx greaty greatz'
  - 'grta grtb grtc grtd grte grtf grtg grth grti grtj grtk grtl grtm grtn grto grtp grtq grtr grts grtt grtu grtv grtw grtx grty grtz'

- - 'grta grtb grtc grtd grte grtf grtg grth grti grtj grtk grtl grtm grtn grto grtp grtq grtr grts grtt grtu grtv grtw grtx grty grtz'
  - ';grta ;grtb ;grtc ;grtd ;grte ;grtf ;grtg ;grth ;grti ;grtj ;grtk ;grtl ;grtm ;grtn ;grto ;grtp ;grtq ;grtr ;grts ;grtt ;grtu ;grtv ;grtw ;grtx ;grty ;grtz'
  - xfail: non-contraction of "grt" followed by letter has a missing grade 1 indicator due to conflict with contraction of "great"

- - 'agreat bgreat cgreat dgreat egreat  fgreat ggreat hgreat igreat jgreat kgreat lgreat  mgreat ngreat ogreat pgrt qgreat rgreat sgreat tgreat ugreat  vgreat wgreat xgreat ygreat zgreat'
  - 'agrt bgrt cgrt dgrt egrt  fgrt ggrt hgrt igrt jgrt kgrt lgrt  mgrt ngrt ogrt pgrt qgrt rgrt sgrt tgrt ugrt  vgrt wgrt xgrt ygrt zgrt'

- - 'agrt bgrt cgrt dgrt egrt  fgrt ggrt hgrt igrt jgrt kgrt lgrt  mgrt ngrt ogrt pgrt qgrt rgrt sgrt tgrt ugrt  vgrt wgrt xgrt ygrt zgrt'
  - 'a;grt b;grt c;grt d;grt e;grt  f;grt g;grt h;grt i;grt j;grt k;grt l;grt  m;grt n;grt o;grt p;grt q;grt r;grt s;grt t;grt u;grt  v;grt w;grt x;grt y;grt z;grt'
  - xfail: non-contraction of "grt" following letter has a missing grade 1 indicator due to conflict with contraction of "great"

- - '(have [have {have ''have "have -have'
  - '(h [h {h ''h "h -h'
  - xfail: ...

- - '!have @have #have $have %have ^have &have *have )have _have =have +have ]have }have \\have |have .have ,have ;have :have ?have <have >have `have ~have /have'
  - '!h @h #h $h %h ^h &h *h )h _h =h +h ]h }h \\h |h .h ,h ;h :h ?h <h >h `h ~h /h'
  - xfail: contraction following special characters is ignored

- - '(h [h {h ''h "h -h'
  - '(;h [;h {;h '';h ";h -;h'
  - xfail: ...

- - '!h @h #h $h %h ^h &h *h )h _h =h +h ]h }h \\h |h .h ,h ;h :h ?h <h >h `h ~h /h'
  - '!;h @;h #;h $;h %;h ^;h &;h *;h );h _;h =;h +;h ];h };h \\;h |;h .;h ,;h ;;h :;h ?;h <;h >;h `;h ~;h /;h'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-have xl-([{''"have xl/-have xl$-have'
  - 'xl-h xl-([{''"h xl/-h xl$-h'
  - xfail: ...

- - 'xl(have xl[have xl{have xl''have xl"have xl-=([{''"have'
  - 'xl(h xl[h xl{h xl''h xl"h xl-=([{''"h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'have) have] have} have'' have" have- have, have. have; have: have? have!'
  - 'h) h] h} h'' h" h- h, h. h; h: h? h!'
  - xfail: ...

- - 'have@ have# have$ have% have^ have& have* have( have_ have= have+ have[ have{ have\\ have| have< have> have` have~ have/'
  - 'h@ h# h$ h% h^ h& h* h( h_ h= h+ h[ h{ h\\ h| h< h> h` h~ h/'
  - xfail: contraction followed by special characters is ignored

- - 'h) h] h} h'' h" h- h, h. h; h: h? h!'
  - ';h) ;h] ;h} ;h'' ;h" ;h- ;h, ;h. ;h; ;h: ;h? ;h!'
  - xfail: ...

- - 'h@ h# h$ h% h^ h& h* h( h_ h= h+ h[ h{ h\\ h| h< h> h` h~ h/'
  - ';h@ ;h# ;h$ ;h% ;h^ ;h& ;h* ;h( ;h_ ;h= ;h+ ;h[ ;h{ ;h\\ ;h| ;h< ;h> ;h` ;h~ ;h/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'have-xl have-([{''"xl have-/xl have-$xl'
  - 'h-xl h-([{''"xl h-/xl h-$xl'
  - xfail: ...

- - 'have(xl have[xl have{xl have''xl have"xl have=([{''"-xl have([{''"-xl have/-xl have$-xl'
  - 'h(xl h[xl h{xl h''xl h"xl h=([{''"-xl h([{''"-xl h/-xl h$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(herself [herself {herself ''herself "herself -herself'
  - '(h}f [h}f {h}f ''h}f "h}f -h}f'
  - xfail: ...

- - '!herself @herself #herself $herself %herself ^herself &herself *herself )herself _herself =herself +herself ]herself }herself \\herself |herself .herself ,herself ;herself :herself ?herself <themselv'
  - '!h}f @h}f #h}f $h}f %h}f ^h}f &h}f *h}f )h}f _h}f =h}f +h}f ]h}f }h}f \\h}f |h}f .h}f ,h}f ;h}f :h}f ?h}f <h}f >h}f `h}f ~h}f /h}f'
  - xfail: contraction following special characters is ignored

- - '(herf [herf {herf ''herf "herf -herf'
  - '(herf [herf {herf ''herf "herf -herf'
  - xfail: ...

- - '!herf @herf #herf $herf %herf ^herf &herf *herf )herf _herf =herf +herf ]herf }herf \\herf |herf .herf ,herf ;herf :herf ?herf <herf >herf `herf ~herf /herf'
  - '!herf @herf #herf $herf %herf ^herf &herf *herf )herf _herf =herf +herf ]herf }herf \\herf |herf .herf ,herf ;herf :herf ?herf <herf >herf `herf ~herf /herf'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-herself xl-([{''"herself xl/-herself xl$-herself'
  - 'xl-h}f xl-([{''"h}f xl/-h}f xl$-h}f'
  - xfail: ...

- - 'xl(herself xl[herself xl{herself xl''herself xl"herself xl-=([{''"herself'
  - 'xl(h}f xl[h}f xl{h}f xl''h}f xl"h}f xl-=([{''"h}f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'herself) herself] herself} herself'' herself" herself- herself, herself. herself; herself: herself? herself!'
  - 'h}f) h}f] h}f} h}f'' h}f" h}f- h}f, h}f. h}f; h}f: h}f? h}f!'
  - xfail: ...

- - 'herself@ herself# herself$ herself% herself^ herself& herself* herself( herself_ herself= herself+ herself[ herself{ herself\\ herself| herself< herself> herself` herself~ herself/'
  - 'h}f@ h}f# h}f$ h}f% h}f^ h}f& h}f* h}f( h}f_ h}f= h}f+ h}f[ h}f{ h}f\\ h}f| h}f< h}f> h}f` h}f~ h}f/'
  - xfail: contraction followed by special characters is ignored

- - 'herf) herf] herf} herf'' herf" herf- herf, herf. herf; herf: herf? herf!'
  - 'herf) herf] herf} herf'' herf" herf- herf, herf. herf; herf: herf? herf!'
  - xfail: ...

- - 'herf@ herf# herf$ herf% herf^ herf& herf* herf( herf_ herf= herf+ herf[ herf{ herf\\ herf| herf< herf> herf` herf~ herf/'
  - 'herf@ herf# herf$ herf% herf^ herf& herf* herf( herf_ herf= herf+ herf[ herf{ herf\\ herf| herf< herf> herf` herf~ herf/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'herself-xl herself-([{''"xl herself-/xl herself-$xl'
  - 'h}f-xl h}f-([{''"xl h}f-/xl h}f-$xl'
  - xfail: ...

- - 'herself(xl herself[xl herself{xl herself''xl herself"xl herself=([{''"-xl herself([{''"-xl herself/-xl herself$-xl'
  - 'h}f(xl h}f[xl h}f{xl h}f''xl h}f"xl h}f=([{''"-xl h}f([{''"-xl h}f/-xl h}f$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(herselfs [herselfs {herselfs ''herselfs "herselfs -herselfs'
  - '(h}fs [h}fs {h}fs ''h}fs "h}fs -h}fs'
  - xfail: ...

- - '!herselfs @herselfs #herselfs $herselfs %herselfs ^herselfs &herselfs *herselfs )herselfs _herselfs =herselfs +herselfs ]herselfs }herselfs \\herselfs |herselfs .herselfs ,herselfs ;herselfs :herselfs ?'
  - '!h}fs @h}fs #h}fs $h}fs %h}fs ^h}fs &h}fs *h}fs )h}fs _h}fs =h}fs +h}fs ]h}fs }h}fs \\h}fs |h}fs .h}fs ,h}fs ;h}fs :h}fs ?h}fs <h}fs >h}fs `h}fs ~h}fs /h}fs'
  - xfail: contraction following special characters is ignored

- - 'herfs (herfs [herfs {herfs ''herfs "herfs -herfs !herfs @herfs #herfs $herfs %herfs ^herfs &herfs *herfs )herfs _herfs =herfs +herfs ]herfs }herfs \\herfs |herfs .herfs ,herfs ;herfs :herfs ?herfs <herfs >'
  - 'herfs (herfs [herfs {herfs ''herfs "herfs -herfs !herfs @herfs #herfs $herfs %herfs ^herfs &herfs *herfs )herfs _herfs =herfs +herfs ]herfs }herfs \\herfs |herfs .herfs ,herfs ;herfs :herfs ?herfs <herfs >'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-herselfs xl-([{''"herselfs xl/-herselfs xl$-herselfs'
  - 'xl-h}fs xl-([{''"h}fs xl/-h}fs xl$-h}fs'
  - xfail: ...

- - 'xl(herselfs xl[herselfs xl{herselfs xl''herselfs xl"herselfs xl-=([{''"herselfs'
  - 'xl(h}fs xl[h}fs xl{h}fs xl''h}fs xl"h}fs xl-=([{''"h}fs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'herselfs) herselfs] herselfs} herselfs'' herselfs" herselfs- herselfs, herselfs. herselfs; herselfs: herselfs? herselfs!'
  - 'h}fs) h}fs] h}fs} h}fs'' h}fs" h}fs- h}fs, h}fs. h}fs; h}fs: h}fs? h}fs!'
  - xfail: ...

- - 'herselfs@ herselfs# herselfs$ herselfs% herselfs^ herselfs& herselfs* herselfs( herselfs_ herselfs= herselfs+ herselfs[ herselfs{ herselfs\\ herselfs| herselfs< herselfs> herselfs` herselfs~ herselfs/'
  - 'h}fs@ h}fs# h}fs$ h}fs% h}fs^ h}fs& h}fs* h}fs( h}fs_ h}fs= h}fs+ h}fs[ h}fs{ h}fs\\ h}fs| h}fs< h}fs> h}fs` h}fs~ h}fs/'
  - xfail: contraction followed by special characters is ignored

- - 'herfs) herfs] herfs} herfs'' herfs" herfs- herfs, herfs. herfs; herfs: herfs? herfs! herfs@ herfs# herfs$ herfs% herfs^ herfs& herfs* herfs( herfs_ herfs= herfs+ herfs[ herfs{ herfs\\ herfs| herfs< herfs>'
  - 'herfs) herfs] herfs} herfs'' herfs" herfs- herfs, herfs. herfs; herfs: herfs? herfs! herfs@ herfs# herfs$ herfs% herfs^ herfs& herfs* herfs( herfs_ herfs= herfs+ herfs[ herfs{ herfs\\ herfs| herfs< herfs>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'herselfs-xl herselfs-([{''"xl herselfs-/xl herselfs-$xl'
  - 'h}fs-xl h}fs-([{''"xl h}fs-/xl h}fs-$xl'
  - xfail: ...

- - 'herselfs(xl herselfs[xl herselfs{xl herselfs''xl herselfs"xl herselfs=([{''"-xl herselfs([{''"-xl herselfs/-xl herselfs$-xl'
  - 'h}fs(xl h}fs[xl h}fs{xl h}fs''xl h}fs"xl h}fs=([{''"-xl h}fs([{''"-xl h}fs/-xl h}fs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(him [him {him ''him "him -him'
  - '(hm [hm {hm ''hm "hm -hm'
  - xfail: ...

- - '!him @him #him $him %him ^him &him *him )him _him =him +him ]him }him \\him |him .him ,him ;him :him ?him <him >him `him ~him /him'
  - '!hm @hm #hm $hm %hm ^hm &hm *hm )hm _hm =hm +hm ]hm }hm \\hm |hm .hm ,hm ;hm :hm ?hm <hm >hm `hm ~hm /hm'
  - xfail: contraction following special characters is ignored

- - '(hm [hm {hm ''hm "hm -hm'
  - '(;hm [;hm {;hm '';hm ";hm -;hm'
  - xfail: ...

- - '!hm @hm #hm $hm %hm ^hm &hm *hm )hm _hm =hm +hm ]hm }hm \\hm |hm .hm ,hm ;hm :hm ?hm <hm >hm `hm ~hm /hm'
  - '!;hm @;hm #;hm $;hm %;hm ^;hm &;hm *;hm );hm _;hm =;hm +;hm ];hm };hm \\;hm |;hm .;hm ,;hm ;;hm :;hm ?;hm <;hm >;hm `;hm ~;hm /;hm'
  - xfail: non-contraction following special characters hhim a missing grade 1 indicator

- - 'xl-him xl-([{''"him xl/-him xl$-him'
  - 'xl-hm xl-([{''"hm xl/-hm xl$-hm'
  - xfail: ...

- - 'xl(him xl[him xl{him xl''him xl"him xl-=([{''"him'
  - 'xl(hm xl[hm xl{hm xl''hm xl"hm xl-=([{''"hm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'him) him] him} him'' him" him- him, him. him; him: him? him!'
  - 'hm) hm] hm} hm'' hm" hm- hm, hm. hm; hm: hm? hm!'
  - xfail: ...

- - 'him@ him# him$ him% him^ him& him* him( him_ him= him+ him[ him{ him\\ him| him< him> him` him~ him/'
  - 'hm@ hm# hm$ hm% hm^ hm& hm* hm( hm_ hm= hm+ hm[ hm{ hm\\ hm| hm< hm> hm` hm~ hm/'
  - xfail: contraction followed by special characters is ignored

- - 'hm) hm] hm} hm'' hm" hm- hm, hm. hm; hm: hm? hm!'
  - ';hm) ;hm] ;hm} ;hm'' ;hm" ;hm- ;hm, ;hm. ;hm; ;hm: ;hm? ;hm!'
  - xfail: ...

- - 'hm@ hm# hm$ hm% hm^ hm& hm* hm( hm_ hm= hm+ hm[ hm{ hm\\ hm| hm< hm> hm` hm~ hm/'
  - ';hm@ ;hm# ;hm$ ;hm% ;hm^ ;hm& ;hm* ;hm( ;hm_ ;hm= ;hm+ ;hm[ ;hm{ ;hm\\ ;hm| ;hm< ;hm> ;hm` ;hm~ ;hm/'
  - xfail: non-contraction following special characters hhim a missing grade 1 indicator

- - 'him-xl him-([{''"xl him-/xl him-$xl'
  - 'hm-xl hm-([{''"xl hm-/xl hm-$xl'
  - xfail: ...

- - 'him(xl him[xl him{xl him''xl him"xl him=([{''"-xl him([{''"-xl him/-xl him$-xl'
  - 'hm(xl hm[xl hm{xl hm''xl hm"xl hm=([{''"-xl hm([{''"-xl hm/-xl hm$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(himself [himself {himself ''himself "himself -himself'
  - '(hmf [hmf {hmf ''hmf "hmf -hmf'
  - xfail: ...

- - '!himself @himself #himself $himself %himself ^himself &himself *himself )himself _himself =himself +himself ]himself }himself \\himself |himself .himself ,himself ;himself :himself ?himself <himself >himself `himself ~himself /himself'
  - '!hmf @hmf #hmf $hmf %hmf ^hmf &hmf *hmf )hmf _hmf =hmf +hmf ]hmf }hmf \\hmf |hmf .hmf ,hmf ;hmf :hmf ?hmf <hmf >hmf `hmf ~hmf /hmf'
  - xfail: contraction following special characters is ignored

- - '(hmf [hmf {hmf ''hmf "hmf -hmf'
  - '(;hmf [;hmf {;hmf '';hmf ";hmf -;hmf'
  - xfail: ...

- - '!hmf @hmf #hmf $hmf %hmf ^hmf &hmf *hmf )hmf _hmf =hmf +hmf ]hmf }hmf \\hmf |hmf .hmf ,hmf ;hmf :hmf ?hmf <hmf >hmf `hmf ~hmf /hmf'
  - '!;hmf @;hmf #;hmf $;hmf %;hmf ^;hmf &;hmf *;hmf );hmf _;hmf =;hmf +;hmf ];hmf };hmf \\;hmf |;hmf .;hmf ,;hmf ;;hmf :;hmf ?;hmf <;hmf >;hmf `;hmf ~;hmf /;hmf'
  - xfail: non-contraction following special characters hhimself a missing grade 1 indicator

- - 'xl-himself xl-([{''"himself xl/-himself xl$-himself'
  - 'xl-hmf xl-([{''"hmf xl/-hmf xl$-hmf'
  - xfail: ...

- - 'xl(himself xl[himself xl{himself xl''himself xl"himself xl-=([{''"himself'
  - 'xl(hmf xl[hmf xl{hmf xl''hmf xl"hmf xl-=([{''"hmf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'himself) himself] himself} himself'' himself" himself- himself, himself. himself; himself: himself? himself!'
  - 'hmf) hmf] hmf} hmf'' hmf" hmf- hmf, hmf. hmf; hmf: hmf? hmf!'
  - xfail: ...

- - 'himself@ himself# himself$ himself% himself^ himself& himself* himself( himself_ himself= himself+ himself[ himself{ himself\\ himself| himself< himself> himself` himself~ himself/'
  - 'hmf@ hmf# hmf$ hmf% hmf^ hmf& hmf* hmf( hmf_ hmf= hmf+ hmf[ hmf{ hmf\\ hmf| hmf< hmf> hmf` hmf~ hmf/'
  - xfail: contraction followed by special characters is ignored

- - 'hmf) hmf] hmf} hmf'' hmf" hmf- hmf, hmf. hmf; hmf: hmf? hmf!'
  - ';hmf) ;hmf] ;hmf} ;hmf'' ;hmf" ;hmf- ;hmf, ;hmf. ;hmf; ;hmf: ;hmf? ;hmf!'
  - xfail: ...

- - 'hmf@ hmf# hmf$ hmf% hmf^ hmf& hmf* hmf( hmf_ hmf= hmf+ hmf[ hmf{ hmf\\ hmf| hmf< hmf> hmf` hmf~ hmf/'
  - ';hmf@ ;hmf# ;hmf$ ;hmf% ;hmf^ ;hmf& ;hmf* ;hmf( ;hmf_ ;hmf= ;hmf+ ;hmf[ ;hmf{ ;hmf\\ ;hmf| ;hmf< ;hmf> ;hmf` ;hmf~ ;hmf/'
  - xfail: non-contraction following special characters hhimself a missing grade 1 indicator

- - 'himself-xl himself-([{''"xl himself-/xl himself-$xl'
  - 'hmf-xl hmf-([{''"xl hmf-/xl hmf-$xl'
  - xfail: ...

- - 'himself(xl himself[xl himself{xl himself''xl himself"xl himself=([{''"-xl himself([{''"-xl himself/-xl himself$-xl'
  - 'hmf(xl hmf[xl hmf{xl hmf''xl hmf"xl hmf=([{''"-xl hmf([{''"-xl hmf/-xl hmf$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(himselfs [himselfs {himselfs ''himselfs "himselfs -himselfs'
  - '(hmfs [hmfs {hmfs ''hmfs "hmfs -hmfs'
  - xfail: ...

- - '!himselfs @himselfs #himselfs $himselfs %himselfs ^himselfs &himselfs *himselfs )himselfs _himselfs =himselfs +himselfs ]himselfs }himselfs \\himselfs |himselfs .himselfs ,himselfs ;himselfs :himselfs ?himselfs <himselfs >himselfs `himselfs ~himselfs /himselfs'
  - '!hmfs @hmfs #hmfs $hmfs %hmfs ^hmfs &hmfs *hmfs )hmfs _hmfs =hmfs +hmfs ]hmfs }hmfs \\hmfs |hmfs .hmfs ,hmfs ;hmfs :hmfs ?hmfs <hmfs >hmfs `hmfs ~hmfs /hmfs'
  - xfail: contraction following special characters is ignored

- - 'hmfs (hmfs [hmfs {hmfs ''hmfs "hmfs -hmfs !hmfs @hmfs #hmfs $hmfs %hmfs ^hmfs &hmfs *hmfs )hmfs _hmfs =hmfs +hmfs ]hmfs }hmfs \\hmfs |hmfs .hmfs ,hmfs ;hmfs :hmfs ?hmfs <hmfs >hmfs `hmfs ~hmfs /hmfs'
  - ';hmfs (;hmfs [;hmfs {;hmfs '';hmfs ";hmfs -;hmfs !;hmfs @;hmfs #;hmfs $;hmfs %;hmfs ^;hmfs &;hmfs *;hmfs );hmfs _;hmfs =;hmfs +;hmfs ];hmfs };hmfs \\;hmfs |;hmfs .;hmfs ,;hmfs ;;hmfs :;hmfs ?;hmfs <;hmfs >;hmfs `;hmfs ~;hmfs /;hmfs'
  - xfail: non-contraction following special characters hhimselfs a missing grade 1 indicator

- - 'xl-himselfs xl-([{''"himselfs xl/-himselfs xl$-himselfs'
  - 'xl-hmfs xl-([{''"hmfs xl/-hmfs xl$-hmfs'
  - xfail: ...

- - 'xl(himselfs xl[himselfs xl{himselfs xl''himselfs xl"himselfs xl-=([{''"himselfs'
  - 'xl(hmfs xl[hmfs xl{hmfs xl''hmfs xl"hmfs xl-=([{''"hmfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'himselfs) himselfs] himselfs} himselfs'' himselfs" himselfs- himselfs, himselfs. himselfs; himselfs: himselfs? himselfs!'
  - 'hmfs) hmfs] hmfs} hmfs'' hmfs" hmfs- hmfs, hmfs. hmfs; hmfs: hmfs? hmfs!'
  - xfail: ...

- - 'himselfs@ himselfs# himselfs$ himselfs% himselfs^ himselfs& himselfs* himselfs( himselfs_ himselfs= himselfs+ himselfs[ himselfs{ himselfs\\ himselfs| himselfs< himselfs> himselfs` himselfs~ himselfs/'
  - 'hmfs@ hmfs# hmfs$ hmfs% hmfs^ hmfs& hmfs* hmfs( hmfs_ hmfs= hmfs+ hmfs[ hmfs{ hmfs\\ hmfs| hmfs< hmfs> hmfs` hmfs~ hmfs/'
  - xfail: contraction followed by special characters is ignored

- - 'hmfs) hmfs] hmfs} hmfs'' hmfs" hmfs- hmfs, hmfs. hmfs; hmfs: hmfs? hmfs! hmfs@ hmfs# hmfs$ hmfs% hmfs^ hmfs& hmfs* hmfs( hmfs_ hmfs= hmfs+ hmfs[ hmfs{ hmfs\\ hmfs| hmfs< hmfs> hmfs` hmfs~ hmfs/'
  - ';hmfs) ;hmfs] ;hmfs} ;hmfs'' ;hmfs" ;hmfs- ;hmfs, ;hmfs. ;hmfs; ;hmfs: ;hmfs? ;hmfs! ;hmfs@ ;hmfs# ;hmfs$ ;hmfs% ;hmfs^ ;hmfs& ;hmfs* ;hmfs( ;hmfs_ ;hmfs= ;hmfs+ ;hmfs[ ;hmfs{ ;hmfs\\ ;hmfs| ;hmfs< ;hmfs> ;hmfs` ;hmfs~ ;hmfs/'
  - xfail: non-contraction following special characters hhimselfs a missing grade 1 indicator

- - 'himselfs-xl himselfs-([{''"xl himselfs-/xl himselfs-$xl'
  - 'hmfs-xl hmfs-([{''"xl hmfs-/xl hmfs-$xl'
  - xfail: ...

- - 'himselfs(xl himselfs[xl himselfs{xl himselfs''xl himselfs"xl himselfs=([{''"-xl himselfs([{''"-xl himselfs/-xl himselfs$-xl'
  - 'hmfs(xl hmfs[xl hmfs{xl hmfs''xl hmfs"xl hmfs=([{''"-xl hmfs([{''"-xl hmfs/-xl hmfs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(his [his {his ''his "his -his !his .his ,his ;his :his ?his'
  - '(8 [8 {8 ''his "his -his !his .his ,his ;his :his ?his'
  - xfail: ...

- - '*his =his +his @his #his $his %his ^his &his )his _his ]his }his \\his |his <his >his `his ~his /his'
  - '*8 =8 +8 @8 #8 $8 %8 ^8 &8 )8 _8 ]8 }8 \\8 |8 <8 >8 ?8 `8 ~8 /8'
  - xfail: contraction following special characters is ignored

- - 'xl(his xl[his xl{his'
  - 'xl(8 xl[8 xl{8'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'his) his] his} his'' his" his- his, his. his? his!'
  - '8) 8] 8} his'' his" his- his, his. his? his!'
  - xfail: ...

- - 'his; his: his@ his# his$ his% his^ his& his* his( his_ his= his+ his[ his{ his\\ his| his< his> his` his~ his/'
  - 'his; his: 8@ 8# 8$ 8% 8^ 8& 8* 8( 8_ 8= 8+ 8[ 8{ 8\\ 8| 8< 8> 8` 8~ 8/'
  - xfail: contraction followed by special characters is ignored

- - 'his(xl his[his his{xl'
  - '8(xl 8[xl'
  - xfail: contraction followed by special characters following any letter  is ignored

- - '(immediate [immediate {immediate ''immediate "immediate -immediate'
  - '(imm [imm {imm ''imm "imm -imm'
  - xfail: ...

- - '!immediate @immediate #immediate $immediate %immediate ^immediate &immediate *immediate )immediate _immediate =immediate +immediate ]immediate }immediate \\immediate |immediate .immediate ,immediate ;immediate :immediate ?immediate <immediate >immediate'
  - '!imm @imm #imm $imm %imm ^imm &imm *imm )imm _imm =imm +imm ]imm }imm \\imm |imm .imm ,imm ;imm :imm ?imm <imm >imm'
  - xfail: contraction following special characters is ignored

- - '`immediate, ~immediate /immediate'
  - '`imm ~imm /imm'
  - xfail: contraction following special characters is ignored

- - '(imm [imm {imm ''imm "imm -imm'
  - '(;imm [;imm {;imm '';imm ";imm -;imm'
  - xfail: ...

- - '!imm @imm #imm $imm %imm ^imm &imm *imm )imm _imm =imm +imm ]imm }imm \\imm |imm .imm ,imm ;imm :imm ?imm <imm >imm `imm ~imm /imm'
  - '!;imm @;imm #;imm $;imm %;imm ^;imm &;imm *;imm );imm _;imm =;imm +;imm ];imm };imm \\;imm |;imm .;imm ,;imm ;;imm :;imm ?;imm <;imm >;imm `;imm ~;imm /;imm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-immediate xl-([{''"immediate xl/-immediate xl$-immediate'
  - 'xl-imm xl-([{''"imm xl/-imm xl$-imm'
  - xfail: ...

- - 'xl(immediate xl[immediate xl{immediate xl''immediate xl"immediate xl-=([{''"immediate'
  - 'xl(imm xl[imm xl{imm xl''imm xl"imm xl-=([{''"imm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'immediate) immediate] immediate} immediate'' immediate" immediate- immediate, immediate. immediate; immediate: immediate? immediate!'
  - 'imm) imm] imm} imm'' imm" imm- imm, imm. imm; imm: imm? imm!'
  - xfail: ...

- - 'immediate@ immediate# immediate$ immediate% immediate^ immediate& immediate* immediate( immediate_ immediate= immediate+ immediate[ immediate{ immediate\\ immediate| immediate< immediate> immediate` immediate~ immediate/'
  - 'imm@ imm# imm$ imm% imm^ imm& imm* imm( imm_ imm= imm+ imm[ imm{ imm\\ imm| imm< imm> imm` imm~ imm/'
  - xfail: contraction followed by special characters is ignored

- - 'imm) imm] imm} imm'' imm" imm- imm, imm. imm; imm: imm? imm!'
  - ';imm) ;imm] ;imm} ;imm'' ;imm" ;imm- ;imm, ;imm. ;imm; ;imm: ;imm? ;imm!'
  - xfail: ...

- - 'imm@ imm# imm$ imm% imm^ imm& imm* imm( imm_ imm= imm+ imm[ imm{ imm\\ imm| imm< imm> imm` imm~ imm/'
  - ';imm@ ;imm# ;imm$ ;imm% ;imm^ ;imm& ;imm* ;imm( ;imm_ ;imm= ;imm+ ;imm[ ;imm{ ;imm\\ ;imm| ;imm< ;imm> ;imm` ;imm~ ;imm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'immediate-xl immediate-([{''"xl immediate-/xl immediate-$xl'
  - 'imm-xl imm-([{''"xl imm-/xl imm-$xl'
  - xfail: ...

- - 'immediate(xl immediate[xl immediate{xl immediate''xl immediate"xl immediate=([{''"-xl immediate([{''"-xl immediate/-xl immediate$-xl'
  - 'imm(xl imm[xl imm{xl imm''xl imm"xl imm=([{''"-xl imm([{''"-xl imm/-xl imm$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediately [immediately {immediately ''immediately "immediately -immediately'
  - '(immly [immly {immly ''immly "immly -immly'
  - xfail: ...

- - '!immediately @immediately #immediately $immediately %immediately ^immediately &immediately *immediately )immediately _immediately =immediately +immediately ]immediately }immediately \\immediately |immediately .immediately ,immediately ;immediately :immediately'
  - '!immly @immly #immly $immly %immly ^immly &immly *immly )immly _immly =immly +immly ]immly }immly \\immly |immly .immly ,immly ;immly :immly'
  - xfail: contraction followingly special characters is ignored

- - '?immediately <immediately >immediately `immediately, ~immediately /immediately'
  - '?immly <immly >immly `immly ~immly /immly'
  - xfail: contraction followingly special characters is ignored

- - '(immly [immly {immly ''immly "immly -immly'
  - '(;immly [;immly {;immly '';immly ";immly -;immly'
  - xfail: ...

- - '!immly @immly #immly $immly %immly ^immly &immly *immly )immly _immly =immly +immly ]immly }immly \\immly |immly .immly ,immly ;immly :immly ?immly <immly >immly `immly ~immly /immly'
  - '!;immly @;immly #;immly $;immly %;immly ^;immly &;immly *;immly );immly _;immly =;immly +;immly ];immly };immly \\;immly |;immly .;immly ,;immly ;;immly :;immly ?;immly <;immly >;immly `;immly ~;immly /;immly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-immediately xl-([{''"immediately xl/-immediately xl$-immediately'
  - 'xl-immly xl-([{''"immly xl/-immly xl$-immly'
  - xfail: ...

- - 'xl(immediately xl[immediately xl{immediately xl''immediately xl"immediately xl-=([{''"immediately'
  - 'xl(immly xl[immly xl{immly xl''immly xl"immly xl-=([{''"immly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'immediately) immediately] immediately} immediately'' immediately" immediately- immediately, immediately. immediately; immediately: immediately? immediately!'
  - 'immly) immly] immly} immly'' immly" immly- immly, immly. immly; immly: immly? immly!'
  - xfail: ...

- - 'immediately@ immediately# immediately$ immediately% immediately^ immediately& immediately* immediately( immediately_ immediately= immediately+ immediately[ immediately{ immediately\\ immediately| immediately< immediately> immediately` immediately~ immediately/'
  - 'immly@ immly# immly$ immly% immly^ immly& immly* immly( immly_ immly= immly+ immly[ immly{ immly\\ immly| immly< immly> immly` immly~ immly/'
  - xfail: contraction followed by special characters is ignored

- - 'immly) immly] immly} immly'' immly" immly- immly, immly. immly; immly: immly? immly!'
  - ';immly) ;immly] ;immly} ;immly'' ;immly" ;immly- ;immly, ;immly. ;immly; ;immly: ;immly? ;immly!'
  - xfail: ...

- - 'immly@ immly# immly$ immly% immly^ immly& immly* immly( immly_ immly= immly+ immly[ immly{ immly\\ immly| immly< immly> immly` immly~ immly/'
  - ';immly@ ;immly# ;immly$ ;immly% ;immly^ ;immly& ;immly* ;immly( ;immly_ ;immly= ;immly+ ;immly[ ;immly{ ;immly\\ ;immly| ;immly< ;immly> ;immly` ;immly~ ;immly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'immediately-xl immediately-([{''"xl immediately-/xl immediately-$xl'
  - 'immly-xl immly-([{''"xl immly-/xl immly-$xl'
  - xfail: ...

- - 'immediately(xl immediately[xl immediately{xl immediately''xl immediately"xl immediately=([{''"-xl immediately([{''"-xl immediately/-xl immediately$-xl'
  - 'immly(xl immly[xl immly{xl immly''xl immly"xl immly=([{''"-xl immly([{''"-xl immly/-xl immly$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediatelys [immediatelys {immediatelys ''immediatelys "immediatelys -immediatelys'
  - '(immlys [immlys {immlys ''immlys "immlys -immlys'
  - xfail: ...

- - '!immediatelys @immediatelys #immediatelys $immediatelys %immediatelys ^immediatelys &immediatelys *immediatelys )immediatelys _immediatelys =immediatelys +immediatelys ]immediatelys }immediatelys \\immediatelys |immediatelys .immediatelys ,immediatelys'
  - '!immlys @immlys #immlys $immlys %immlys ^immlys &immlys *immlys )immlys _immlys =immlys +immlys ]immlys }immlys \\immlys |immlys .immlys ,immlys'
  - xfail: contraction followingly special characters is ignored

- - ';immediatelys :immediatelys ?immediatelys <immediatelys >immediatelys `immediatelys, ~immediatelys /immediatelys'
  - 'bimmlys :immlys ?immlys <immlys >immlys `immlys ~immlys /immlys'
  - xfail: contraction followingly special characters is ignored

- - 'immlys (immlys [immlys {immlys ''immlys "immlys -immlys !immlys @immlys #immlys $immlys %immlys ^immlys &immlys *immlys )immlys _immlys =immlys +immlys ]immlys }immlys \\immlys |immlys .immlys ,immlys ;immlys :immlys ?immlys <immlys >immlys `immlys ~immlys /immly'
  - ';immlys (;immlys [;immlys {;immlys '';immlys ";immlys -;immlys !;immlys @;immlys #;immlys $;immlys %;immlys ^;immlys &;immlys *;immlys );immlys _;immlys =;immlys +;immlys ];immlys };immlys \\;immlys |;immlys .;immlys ,;immlys ;;immlys :;immlys ?;immlys <;immlys >'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-immediatelys xl-([{''"immediatelys xl/-immediatelys xl$-immediatelys'
  - 'xl-immlys xl-([{''"immlys xl/-immlys xl$-immlys'
  - xfail: ...

- - 'xl(immediatelys xl[immediatelys xl{immediatelys xl''immediatelys xl"immediatelys xl-=([{''"immediatelys'
  - 'xl(immlys xl[immlys xl{immlys xl''immlys xl"immlys xl-=([{''"immlys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'immediatelys) immediatelys] immediatelys} immediatelys'' immediatelys" immediatelys- immediatelys, immediatelys. immediatelys; immediatelys: immediatelys? immediatelys!'
  - 'immlys) immlys] immlys} immlys'' immlys" immlys- immlys, immlys. immlys; immlys: immlys? immlys!'
  - xfail: ...

- - 'immediatelys@ immediatelys# immediatelys$ immediatelys% immediatelys^ immediatelys& immediatelys* immediatelys( immediatelys_ immediatelys= immediatelys+ immediatelys[ immediatelys{ immediatelys\\ immediatelys| immediatelys< immediatelys> immediatelys`'
  - 'immlys@ immlys# immlys$ immlys% immlys^ immlys& immlys* immlys( immlys_ immlys= immlys+ immlys[ immlys{ immlys\\ immlys| immlys< immlys> immlys`'
  - xfail: contraction followed by special characters is ignored

- - 'immediatelys~ immediatelys/'
  - 'immlys~ immlys/'
  - xfail: contraction followed by special characters is ignored

- - 'immlys) immlys] immlys} immlys'' immlys" immlys- immlys, immlys. immlys; immlys: immlys? immlys! immlys@ immlys# immlys$ immlys% immlys^ immlys& immlys* immlys( immlys_ immlys= immlys+ immlys[ immlys{ immlys\\ immlys| immlys< immlys> immlys` immlys~ immlys/'
  - ';immlys) ;immlys] ;immlys} ;immlys'' ;immlys" ;immlys- ;immlys, ;immlys. ;immlys; ;immlys: ;immlys? ;immlys! ;immlys@ ;immlys# ;immlys$ ;immlys% ;immlys^ ;immlys& ;immlys* ;immlys( ;immlys_ ;immlys= ;immlys+ ;immlys[ ;immlys{ ;immlys\\ ;immlys| ;immlys< ;immlys>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'immediatelys-xl immediatelys-([{''"xl immediatelys-/xl immediatelys-$xl'
  - 'immlys-xl immlys-([{''"xl immlys-/xl immlys-$xl'
  - xfail: ...

- - 'immediatelys(xl immediatelys[xl immediatelys{xl immediatelys''xl immediatelys"xl immediatelys=([{''"-xl immediatelys([{''"-xl immediatelys/-xl immediatelys$-xl'
  - 'immlys(xl immlys[xl immlys{xl immlys''xl immlys"xl immlys=([{''"-xl immlys([{''"-xl immlys/-xl immlys$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediates [immediates {immediates ''immediates "immediates -immediates'
  - '(imms [imms {imms ''imms "imms -imms'
  - xfail: ...

- - '!immediates @immediates #immediates $immediates %immediates ^immediates &immediates *immediates )immediates _immediates =immediates +immediates ]immediates }immediates \\immediates |immediates .immediates ,immediates ;immediates :immediates ?immediates'
  - '!imms @imms #imms $imms %imms ^imms &imms *imms )imms _imms =imms +imms ]imms }imms \\imms |imms .imms ,imms ;imms :imms ?imms'
  - xfail: contraction following special characters is ignored

- - '<immediates >immediates `immediates, ~immediates /immediates'
  - '<imms >imms `imms ~imms /imms'
  - xfail: contraction following special characters is ignored

- - 'imms (imms [imms {imms ''imms "imms -imms !imms @imms #imms $imms %imms ^imms &imms *imms )imms _imms =imms +imms ]imms }imms \\imms |imms .imms ,imms ;imms :imms ?imms <imms >imms `imms ~imms /imms'
  - ';imms (;imms [;imms {;imms '';imms ";imms -;imms !;imms @;imms #;imms $;imms %;imms ^;imms &;imms *;imms );imms _;imms =;imms +;imms ];imms };imms \\;imms |;imms .;imms ,;imms ;;imms :;imms ?;imms <;imms >;imms `;imms ~;imms /;imms'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-immediates xl-([{''"immediates xl/-immediates xl$-immediates'
  - 'xl-imms xl-([{''"imms xl/-imms xl$-imms'
  - xfail: ...

- - 'xl(immediates xl[immediates xl{immediates xl''immediates xl"immediates xl-=([{''"immediates'
  - 'xl(imms xl[imms xl{imms xl''imms xl"imms xl-=([{''"imms'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'immediates) immediates] immediates} immediates'' immediates" immediates- immediates, immediates. immediates; immediates: immediates? immediates!'
  - 'imms) imms] imms} imms'' imms" imms- imms, imms. imms; imms: imms? imms!'
  - xfail: ...

- - 'immediates@ immediates# immediates$ immediates% immediates^ immediates& immediates* immediates( immediates_ immediates= immediates+ immediates[ immediates{ immediates\\ immediates| immediates< immediates> immediates` immediates~ immediates/'
  - 'imms@ imms# imms$ imms% imms^ imms& imms* imms( imms_ imms= imms+ imms[ imms{ imms\\ imms| imms< imms> imms` imms~ imms/'
  - xfail: contraction followed by special characters is ignored

- - 'imms) imms] imms} imms'' imms" imms- imms, imms. imms; imms: imms? imms! imms@ imms# imms$ imms% imms^ imms& imms* imms( imms_ imms= imms+ imms[ imms{ imms\\ imms| imms< imms> imms` imms~ imms/'
  - ';imms) ;imms] ;imms} ;imms'' ;imms" ;imms- ;imms, ;imms. ;imms; ;imms: ;imms? ;imms! ;imms@ ;imms# ;imms$ ;imms% ;imms^ ;imms& ;imms* ;imms( ;imms_ ;imms= ;imms+ ;imms[ ;imms{ ;imms\\ ;imms| ;imms< ;imms> ;imms` ;imms~ ;imms/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'immediates-xl immediates-([{''"xl immediates-/xl immediates-$xl'
  - 'imms-xl imms-([{''"xl imms-/xl imms-$xl'
  - xfail: ...

- - 'immediates(xl immediates[xl immediates{xl immediates''xl immediates"xl immediates=([{''"-xl immediates([{''"-xl immediates/-xl immediates$-xl'
  - 'imms(xl imms[xl imms{xl imms''xl imms"xl imms=([{''"-xl imms([{''"-xl imms/-xl imms$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(in [in {in ''in "in -in !in .in ,in ;in :in ?in @in #in $in %in ^in &in )in _in ]in }in \\in |in <in >in `in ~in /in'
  - '(9 [9 {9 ''in "in -in !in .in ,in ;in :in ?in @9 #9 $9 %9 ^9 &9 )9 _9 ]9 }9 \\9 |9 <9 >9 ?9 `9 ~9 /9'
  - xfail: ...

- - '*in =in +in'
  - '*9 =9 +9'
  - xfail: contraction following special characters is ignored

- - 'xl(in xl[in xl{in'
  - 'xl(9 xl[9 xl{9'
  - xfail: ...

- - 'in) in] in} in'' in" in- in, in. in? in! in@ in# in$ in% in^ in& in* in( in_ in= in+ in[ in{ in\\ in| in< in> in` in~ in/'
  - '9) 9] 9} in'' in" in- in, in. in? in! 9@ 9# 9$ 9% 9^ 9& 9* 9( 9_ 9= 9+ 9[ 9{ 9\\ 9| 9< 9> 9` 9~ 9/'
  - xfail: ...

- - 'in; in:'
  - 'in; in:'
  - xfail: contraction followed by special characters is ignored

- - 'in(xl in[in in{xl'
  - '9(xl 9[xl'
  - xfail: ...

- - '(ing [ing {ing ''ing "ing !ing @ing #ing $ing %ing ^ing &ing *ing _ing =ing +ing ]ing }ing \\ing |ing ;ing :ing <ing >ing ,ing .ing /ing ?ing `ing ~ing'
  - '(+ [+ {+ ''+ "+ !+ @+ #+ $+ %+ ^+ &+ *+ _+ =+ ++ ]+ }+ \\+ |+ ;+ :+ <+ >+ ,+ .+ /+ ?+ `+ ~+'
  - xfail: ...

- - 'ing -ing'
  - '+ -+'
  - xfail: contraction following special characters is ignored

- - 'xl(ing xl[ing xl{ing xl''ing xl"ing xl-=([{''"ing xl-([{''"ing'
  - 'xl(+ xl[+ xl{+ xl''+ xl"+ xl-=([{''"+ xl-([{''"+'
  - xfail: ...

- - 'xl-ing xl/-ing xl$-ing'
  - 'xl-+ xl/-+ xl$-+'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ing@ ing# ing$ ing% ing^ ing& ing* ing( ing_ ing= ing+ ing[ ing{ ing\\ ing| ing< ing> ing` ing~ ing/ ing) ing] ing} ing'' ing" ing- ing, ing. ing; ing: ing? ing!'
  - '+@ +# +$ +% +^ +& +* +( +_ += ++ +[ +{ +\\ +| +< +> +` +~ +/ +) +] +} +'' +" +- +, +. +; +: +? +!'
  - xfail: contraction followed by special characters is ignored

- - 'ing(xl ing[xl ing{xl ing''xl ing"xl ing=([{''"-xl ing([{''"-xl ing/-xl ing$-xl ing-xl ing-([{''"xl ing-/xl ing-$xl'
  - '+(xl +[xl +{xl +''xl +"xl +=([{''"-xl +([{''"-xl +/-xl +$-xl +-xl +-([{''"xl +-/xl +-$xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(it [it {it ''it "it -it'
  - '(x [x {x ''x "x -x'
  - xfail: ...

- - '!it @it #it $it %it ^it &it *it )it _it =it +it ]it }it \\it |it .it ,it ;it :it ?it <it >it `it ~it /it'
  - '!x @x #x $x %x ^x &x *x )x _x =x +x ]x }x \\x |x .x ,x ;x :x ?x <x >x `x ~x /x'
  - xfail: contraction following special characters is ignored

- - '(x [x {x ''x "x -x'
  - '(;x [;x {;x '';x ";x -;x'
  - xfail: ...

- - '!x @x #x $x %x ^x &x *x )x _x =x +x ]x }x \\x |x .x ,x ;x :x ?x <x >x `x ~x /x'
  - '!;x @;x #;x $;x %;x ^;x &;x *;x );x _;x =;x +;x ];x };x \\;x |;x .;x ,;x ;;x :;x ?;x <;x >;x `;x ~;x /;x'
  - xfail: non-contraction following special characters hit a missing grade 1 indicator

- - 'xl-it xl-([{''"it xl/-it xl$-it'
  - 'xl-x xl-([{''"x xl/-x xl$-x'
  - xfail: ...

- - 'xl(it xl[it xl{it xl''it xl"it xl-=([{''"it'
  - 'xl(x xl[x xl{x xl''x xl"x xl-=([{''"x'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'it) it] it} it'' it" it- it, it. it; it: it? it!'
  - 'x) x] x} x'' x" x- x, x. x; x: x? x!'
  - xfail: ...

- - 'it@ it# it$ it% it^ it& it* it( it_ it= it+ it[ it{ it\\ it| it< it> it` it~ it/'
  - 'x@ x# x$ x% x^ x& x* x( x_ x= x+ x[ x{ x\\ x| x< x> x` x~ x/'
  - xfail: contraction followed by special characters is ignored

- - 'x) x] x} x'' x" x- x, x. x; x: x? x!'
  - ';x) ;x] ;x} ;x'' ;x" ;x- ;x, ;x. ;x; ;x: ;x? ;x!'
  - xfail: ...

- - 'x@ x# x$ x% x^ x& x* x( x_ x= x+ x[ x{ x\\ x| x< x> x` x~ x/'
  - ';x@ ;x# ;x$ ;x% ;x^ ;x& ;x* ;x( ;x_ ;x= ;x+ ;x[ ;x{ ;x\\ ;x| ;x< ;x> ;x` ;x~ ;x/'
  - xfail: non-contraction following special characters hit a missing grade 1 indicator

- - 'it-xl it-([{''"xl it-/xl it-$xl'
  - 'x-xl x-([{''"xl x-/xl x-$xl'
  - xfail: ...

- - 'it(xl it[xl it{xl it''xl it"xl it=([{''"-xl it([{''"-xl it/-xl it$-xl'
  - 'x(xl x[xl x{xl x''xl x"xl x=([{''"-xl x([{''"-xl x/-xl x$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(its [its {its ''its "its -its'
  - '(xs [xs {xs ''xs "xs -xs'
  - xfail: ...

- - '!its @its #its $its %its ^its &its *its )its _its =its +its ]its }its \\its |its .its ,its ;its :its ?its <its >its `its ~its /its'
  - '!xs @xs #xs $xs %xs ^xs &xs *xs )xs _xs =xs +xs ]xs }xs \\xs |xs .xs ,xs ;xs :xs ?xs <xs >xs `xs ~xs /xs'
  - xfail: contraction following special characters is ignored

- - '(xs [xs {xs ''xs "xs -xs'
  - '(;xs [;xs {;xs '';xs ";xs -;xs'
  - xfail: ...

- - '!xs @xs #xs $xs %xs ^xs &xs *xs )xs _xs =xs +xs ]xs }xs \\xs |xs .xs ,xs ;xs :xs ?xs <xs >xs `xs ~xs /xs'
  - '!;xs @;xs #;xs $;xs %;xs ^;xs &;xs *;xs );xs _;xs =;xs +;xs ];xs };xs \\;xs |;xs .;xs ,;xs ;;xs :;xs ?;xs <;xs >;xs `;xs ~;xs /;xs'
  - xfail: non-contraction following special characters hits a missing grade 1 indicator

- - 'xl-its xl-([{''"its xl/-its xl$-its'
  - 'xl-xs xl-([{''"xs xl/-xs xl$-xs'
  - xfail: ...

- - 'xl(its xl[its xl{its xl''its xl"its xl-=([{''"its'
  - 'xl(xs xl[xs xl{xs xl''xs xl"xs xl-=([{''"xs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'its) its] its} its'' its" its- its, its. its; its: its? its!'
  - 'xs) xs] xs} xs'' xs" xs- xs, xs. xs; xs: xs? xs!'
  - xfail: ...

- - 'its@ its# its$ its% its^ its& its* its( its_ its= its+ its[ its{ its\\ its| its< its> its` its~ its/'
  - 'xs@ xs# xs$ xs% xs^ xs& xs* xs( xs_ xs= xs+ xs[ xs{ xs\\ xs| xs< xs> xs` xs~ xs/'
  - xfail: contraction followed by special characters is ignored

- - 'xs) xs] xs} xs'' xs" xs- xs, xs. xs; xs: xs? xs!'
  - ';xs) ;xs] ;xs} ;xs'' ;xs" ;xs- ;xs, ;xs. ;xs; ;xs: ;xs? ;xs!'
  - xfail: ...

- - 'xs@ xs# xs$ xs% xs^ xs& xs* xs( xs_ xs= xs+ xs[ xs{ xs\\ xs| xs< xs> xs` xs~ xs/'
  - ';xs@ ;xs# ;xs$ ;xs% ;xs^ ;xs& ;xs* ;xs( ;xs_ ;xs= ;xs+ ;xs[ ;xs{ ;xs\\ ;xs| ;xs< ;xs> ;xs` ;xs~ ;xs/'
  - xfail: non-contraction following special characters hits a missing grade 1 indicator

- - 'its-xl its-([{''"xl its-/xl its-$xl'
  - 'xs-xl xs-([{''"xl xs-/xl xs-$xl'
  - xfail: ...

- - 'its(xl its[xl its{xl its''xl its"xl its=([{''"-xl its([{''"-xl its/-xl its$-xl'
  - 'xs(xl xs[xl xs{xl xs''xl xs"xl xs=([{''"-xl xs([{''"-xl xs/-xl xs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(itself [itself {itself ''itself "itself -itself'
  - '(xf [xf {xf ''xf "xf -xf'
  - xfail: ...

- - '!itself @itself #itself $itself %itself ^itself &itself *itself )itself _itself =itself +itself ]itself }itself \\itself |itself .itself ,itself ;itself :itself ?itself <itself >itself `itself ~itself /itself'
  - '!xf @xf #xf $xf %xf ^xf &xf *xf )xf _xf =xf +xf ]xf }xf \\xf |xf .xf ,xf ;xf :xf ?xf <xf >xf `xf ~xf /xf'
  - xfail: contraction following special characters is ignored

- - '(xf [xf {xf ''xf "xf -xf'
  - '(;xf [;xf {;xf '';xf ";xf -;xf'
  - xfail: ...

- - '!xf @xf #xf $xf %xf ^xf &xf *xf )xf _xf =xf +xf ]xf }xf \\xf |xf .xf ,xf ;xf :xf ?xf <xf >xf `xf ~xf /xf'
  - '!;xf @;xf #;xf $;xf %;xf ^;xf &;xf *;xf );xf _;xf =;xf +;xf ];xf };xf \\;xf |;xf .;xf ,;xf ;;xf :;xf ?;xf <;xf >;xf `;xf ~;xf /;xf'
  - xfail: non-contraction following special characters hitself a missing grade 1 indicator

- - 'xl-itself xl-([{''"itself xl/-itself xl$-itself'
  - 'xl-xf xl-([{''"xf xl/-xf xl$-xf'
  - xfail: ...

- - 'xl(itself xl[itself xl{itself xl''itself xl"itself xl-=([{''"itself'
  - 'xl(xf xl[xf xl{xf xl''xf xl"xf xl-=([{''"xf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'itself) itself] itself} itself'' itself" itself- itself, itself. itself; itself: itself? itself!'
  - 'xf) xf] xf} xf'' xf" xf- xf, xf. xf; xf: xf? xf!'
  - xfail: ...

- - 'itself@ itself# itself$ itself% itself^ itself& itself* itself( itself_ itself= itself+ itself[ itself{ itself\\ itself| itself< itself> itself` itself~ itself/'
  - 'xf@ xf# xf$ xf% xf^ xf& xf* xf( xf_ xf= xf+ xf[ xf{ xf\\ xf| xf< xf> xf` xf~ xf/'
  - xfail: contraction followed by special characters is ignored

- - 'xf) xf] xf} xf'' xf" xf- xf, xf. xf; xf: xf? xf!'
  - ';xf) ;xf] ;xf} ;xf'' ;xf" ;xf- ;xf, ;xf. ;xf; ;xf: ;xf? ;xf!'
  - xfail: ...

- - 'xf@ xf# xf$ xf% xf^ xf& xf* xf( xf_ xf= xf+ xf[ xf{ xf\\ xf| xf< xf> xf` xf~ xf/'
  - ';xf@ ;xf# ;xf$ ;xf% ;xf^ ;xf& ;xf* ;xf( ;xf_ ;xf= ;xf+ ;xf[ ;xf{ ;xf\\ ;xf| ;xf< ;xf> ;xf` ;xf~ ;xf/'
  - xfail: non-contraction following special characters hitself a missing grade 1 indicator

- - 'itself-xl itself-([{''"xl itself-/xl itself-$xl'
  - 'xf-xl xf-([{''"xl xf-/xl xf-$xl'
  - xfail: ...

- - 'itself(xl itself[xl itself{xl itself''xl itself"xl itself=([{''"-xl itself([{''"-xl itself/-xl itself$-xl'
  - 'xf(xl xf[xl xf{xl xf''xl xf"xl xf=([{''"-xl xf([{''"-xl xf/-xl xf$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(itselfs [itselfs {itselfs ''itselfs "itselfs -itselfs'
  - '(xfs [xfs {xfs ''xfs "xfs -xfs'
  - xfail: ...

- - '!itselfs @itselfs #itselfs $itselfs %itselfs ^itselfs &itselfs *itselfs )itselfs _itselfs =itselfs +itselfs ]itselfs }itselfs \\itselfs |itselfs .itselfs ,itselfs ;itselfs :itselfs ?itselfs <itselfs >itselfs `itselfs ~itselfs /itselfs'
  - '!xfs @xfs #xfs $xfs %xfs ^xfs &xfs *xfs )xfs _xfs =xfs +xfs ]xfs }xfs \\xfs |xfs .xfs ,xfs ;xfs :xfs ?xfs <xfs >xfs `xfs ~xfs /xfs'
  - '{xfsail: contraction following special characters is ignored'
  - xfail: ...

- - 'xfs (xfs [xfs {xfs ''xfs "xfs -xfs !xfs @xfs #xfs $xfs %xfs ^xfs &xfs *xfs )xfs _xfs =xfs +xfs ]xfs }xfs \\xfs |xfs .xfs ,xfs ;xfs :xfs ?xfs <xfs >xfs `xfs ~xfs /xfs'
  - ';xfs (;xfs [;xfs {;xfs '';xfs ";xfs -;xfs !;xfs @;xfs #;xfs $;xfs %;xfs ^;xfs &;xfs *;xfs );xfs _;xfs =;xfs +;xfs ];xfs };xfs \\;xfs |;xfs .;xfs ,;xfs ;;xfs :;xfs ?;xfs <;xfs >;xfs `;xfs ~;xfs /;xfs'
  - '{xfsail: non-contraction following special characters hitselfs a missing grade 1 indicator'
  - xfail: ...

- - 'xl-itselfs xl-([{''"itselfs xl/-itselfs xl$-itselfs'
  - 'xl-xfs xl-([{''"xfs xl/-xfs xl$-xfs'
  - xfail: ...

- - 'xl(itselfs xl[itselfs xl{itselfs xl''itselfs xl"itselfs xl-=([{''"itselfs'
  - 'xl(xfs xl[xfs xl{xfs xl''xfs xl"xfs xl-=([{''"xfs'
  - '{xfsail: contraction following special characters and followed by any letter is ignored'
  - xfail: ...

- - 'itselfs) itselfs] itselfs} itselfs'' itselfs" itselfs- itselfs, itselfs. itselfs; itselfs: itselfs? itselfs!'
  - 'xfs) xfs] xfs} xfs'' xfs" xfs- xfs, xfs. xfs; xfs: xfs? xfs!'
  - xfail: ...

- - 'itselfs@ itselfs# itselfs$ itselfs% itselfs^ itselfs& itselfs* itselfs( itselfs_ itselfs= itselfs+ itselfs[ itselfs{ itselfs\\ itselfs| itselfs< itselfs> itselfs` itselfs~ itselfs/'
  - 'xfs@ xfs# xfs$ xfs% xfs^ xfs& xfs* xfs( xfs_ xfs= xfs+ xfs[ xfs{ xfs\\ xfs| xfs< xfs> xfs` xfs~ xfs/'
  - '{xfsail: contraction followed by special characters is ignored'
  - xfail: ...

- - 'xfs) xfs] xfs} xfs'' xfs" xfs- xfs, xfs. xfs; xfs: xfs? xfs! xfs@ xfs# xfs$ xfs% xfs^ xfs& xfs* xfs( xfs_ xfs= xfs+ xfs[ xfs{ xfs\\ xfs| xfs< xfs> xfs` xfs~ xfs/'
  - ';xfs) ;xfs] ;xfs} ;xfs'' ;xfs" ;xfs- ;xfs, ;xfs. ;xfs; ;xfs: ;xfs? ;xfs! ;xfs@ ;xfs# ;xfs$ ;xfs% ;xfs^ ;xfs& ;xfs* ;xfs( ;xfs_ ;xfs= ;xfs+ ;xfs[ ;xfs{ ;xfs\\ ;xfs| ;xfs< ;xfs> ;xfs` ;xfs~ ;xfs/'
  - '{xfsail: non-contraction following special characters hitselfs a missing grade 1 indicator'
  - xfail: ...

- - 'itselfs-xl itselfs-([{''"xl itselfs-/xl itselfs-$xl'
  - 'xfs-xl xfs-([{''"xl xfs-/xl xfs-$xl'
  - xfail: ...

- - 'itselfs(xl itselfs[xl itselfs{xl itselfs''xl itselfs"xl itselfs=([{''"-xl itselfs([{''"-xl itselfs/-xl itselfs$-xl'
  - 'xfs(xl xfs[xl xfs{xl xfs''xl xfs"xl xfs=([{''"-xl xfs([{''"-xl xfs/-xl xfs$-xl'
  - '{xfsail: contraction followed by special characters followed by any letter is ignored'
  - xfail: ...

- - '(just [just {just ''just "just -just'
  - '(j [j {j ''j "j -j'
  - xfail: ...

- - '!just @just #just $just %just ^just &just *just )just _just =just +just ]just }just \\just |just .just ,just ;just :just ?just <just >just `just ~just /just'
  - '!j @j #j $j %j ^j &j *j )j _j =j +j ]j }j \\j |j .j ,j ;j :j ?j <j >j `j ~j /j'
  - xfail: contraction following special characters is ignored

- - '(j [j {j ''j "j -j'
  - '(;j [;j {;j '';j ";j -;j'
  - xfail: ...

- - '!j @j #j $j %j ^j &j *j )j _j =j +j ]j }j \\j |j .j ,j ;j :j ?j <j >j `j ~j /j'
  - '!;j @;j #;j $;j %;j ^;j &;j *;j );j _;j =;j +;j ];j };j \\;j |;j .;j ,;j ;;j :;j ?;j <;j >;j `;j ~;j /;j'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-just xl-([{''"just xl/-just xl$-just'
  - 'xl-j xl-([{''"j xl/-j xl$-j'
  - xfail: ...

- - 'xl(just xl[just xl{just xl''just xl"just xl-=([{''"just'
  - 'xl(j xl[j xl{j xl''j xl"j xl-=([{''"j'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'just) just] just} just'' just" just- just, just. just; just: just? just!'
  - 'j) j] j} j'' j" j- j, j. j; j: j? j!'
  - xfail: ...

- - 'just@ just# just$ just% just^ just& just* just( just_ just= just+ just[ just{ just\\ just| just< just> just` just~ just/'
  - 'j@ j# j$ j% j^ j& j* j( j_ j= j+ j[ j{ j\\ j| j< j> j` j~ j/'
  - xfail: contraction followed by special characters is ignored

- - 'j) j] j} j'' j" j- j, j. j; j: j? j!'
  - ';j) ;j] ;j} ;j'' ;j" ;j- ;j, ;j. ;j; ;j: ;j? ;j!'
  - xfail: ...

- - 'j@ j# j$ j% j^ j& j* j( j_ j= j+ j[ j{ j\\ j| j< j> j` j~ j/'
  - ';j@ ;j# ;j$ ;j% ;j^ ;j& ;j* ;j( ;j_ ;j= ;j+ ;j[ ;j{ ;j\\ ;j| ;j< ;j> ;j` ;j~ ;j/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'just-xl just-([{''"xl just-/xl just-$xl'
  - 'j-xl j-([{''"xl j-/xl j-$xl'
  - xfail: ...

- - 'just(xl just[xl just{xl just''xl just"xl just=([{''"-xl just([{''"-xl just/-xl just$-xl'
  - 'j(xl j[xl j{xl j''xl j"xl j=([{''"-xl j([{''"-xl j/-xl j$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(knowledge [knowledge {knowledge ''knowledge "knowledge -knowledge'
  - '(k [k {k ''k "k -k'
  - xfail: ...

- - '!knowledge @knowledge #knowledge $knowledge %knowledge ^knowledge &knowledge *knowledge )knowledge _knowledge =knowledge +knowledge ]knowledge }knowledge \\knowledge |knowledge .knowledge ,knowledge ;knowledge :knowledge ?knowledge <knowledge >knowledge'
  - '!k @k #k $k %k ^k &k *k )k _k =k +k ]k }k \\k |k .k ,k ;k :k ?k <k >k'
  - xfail: contraction following special characters is ignored

- - '`knowlede ~knowlede /knowlede'
  - '`k ~k /k'
  - xfail: contraction following special characters is ignored

- - '(k [k {k ''k "k -k'
  - '(;k [;k {;k '';k ";k -;k'
  - xfail: ...

- - '!k @k #k $k %k ^k &k *k )k _k =k +k ]k }k \\k |k .k ,k ;k :k ?k <k >k `k ~k /k'
  - '!;k @;k #;k $;k %;k ^;k &;k *;k );k _;k =;k +;k ];k };k \\;k |;k .;k ,;k ;;k :;k ?;k <;k >;k `;k ~;k /;k'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-knowledge xl-([{''"knowledge xl/-knowledge xl$-knowledge'
  - 'xl-k xl-([{''"k xl/-k xl$-k'
  - xfail: ...

- - 'xl(knowledge xl[knowledge xl{knowledge xl''knowledge xl"knowledge xl-=([{''"knowledge'
  - 'xl(k xl[k xl{k xl''k xl"k xl-=([{''"k'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'knowledge) knowledge] knowledge} knowledge'' knowledge" knowledge- knowledge, knowledge. knowledge; knowledge: knowledge? knowledge!'
  - 'k) k] k} k'' k" k- k, k. k; k: k? k!'
  - xfail: ...

- - 'knowledge@ knowledge# knowledge$ knowledge% knowledge^ knowledge& knowledge* knowledge( knowledge_ knowledge= knowledge+ knowledge[ knowledge{ knowledge\\ knowledge| knowledge< knowledge> knowledge` knowledge~ knowledge/'
  - 'k@ k# k$ k% k^ k& k* k( k_ k= k+ k[ k{ k\\ k| k< k> k` k~ k/'
  - xfail: contraction followed by special characters is ignored

- - 'k) k] k} k'' k" k- k, k. k; k: k? k!'
  - ';k) ;k] ;k} ;k'' ;k" ;k- ;k, ;k. ;k; ;k: ;k? ;k!'
  - xfail: ...

- - 'k@ k# k$ k% k^ k& k* k( k_ k= k+ k[ k{ k\\ k| k< k> k` k~ k/'
  - ';k@ ;k# ;k$ ;k% ;k^ ;k& ;k* ;k( ;k_ ;k= ;k+ ;k[ ;k{ ;k\\ ;k| ;k< ;k> ;k` ;k~ ;k/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'knowledge-xl knowledge-([{''"xl knowledge-/xl knowledge-$xl'
  - 'k-xl k-([{''"xl k-/xl k-$xl'
  - xfail: ...

- - 'knowledge(xl knowledge[xl knowledge{xl knowledge''xl knowledge"xl knowledge=([{''"-xl knowledge([{''"-xl knowledge/-xl knowledge$-xl'
  - 'k(xl k[xl k{xl k''xl k"xl k=([{''"-xl k([{''"-xl k/-xl k$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(letter [letter {letter ''letter "letter -letter'
  - '(lr [lr {lr ''lr "lr -lr'
  - xfail: ...

- - '!letter @letter #letter $letter %letter ^letter &letter *letter )letter _letter =letter +letter ]letter }letter \\letter |letter .letter ,letter ;letter :letter ?letter <letter >letter `letter ~letter /letter'
  - '!lr @lr #lr $lr %lr ^lr &lr *lr )lr _lr =lr +lr ]lr }lr \\lr |lr .lr ,lr ;lr :lr ?lr <lr >lr ?lr `lr ~lr /lr'
  - xfail: contraction following special characters is ignored

- - '(lr [lr {lr ''lr "lr -lr'
  - '(;lr [;lr {;lr '';lr ";lr -;lr'
  - xfail: ...

- - '!lr @lr #lr $lr %lr ^lr &lr *lr )lr _lr =lr +lr ]lr }lr \\lr |lr .lr ,lr ;lr :lr ?lr <lr >lr ?lr `lr ~lr /lr'
  - '!;lr @;lr #;lr $;lr %;lr ^;lr &;lr *;lr );lr _;lr =;lr +;lr ];lr };lr \\;lr |;lr .;lr ,;lr ;;lr :;lr ?;lr <;lr >;lr `;lr ~;lr /;lr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-letter xl-([{''"letter xl/-letter xl$-letter'
  - 'xl-lr xl-([{''"lr xl/-lr xl$-lr'
  - xfail: ...

- - 'xl(letter xl[letter xl{letter xl''letter xl"letter xl-=([{''"letter'
  - 'xl(lr xl[lr xl{lr xl''lr xl"lr xl-=([{''"lr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'letter) letter] letter} letter'' letter" letter- letter, letter. letter; letter: letter? letter!'
  - 'lr) lr] lr} lr'' lr" lr- lr, lr. lr; lr: lr? lr!'
  - xfail: ...

- - 'letter@ letter# letter$ letter% letter^ letter& letter* letter( letter_ letter= letter+ letter[ letter{ letter\\ letter| letter< letter> letter` letter~ letter/'
  - 'lr@ lr# lr$ lr% lr^ lr& lr* lr( lr_ lr= lr+ lr[ lr{ lr\\ lr| lr< lr> lr` lr~ lr/'
  - xfail: contraction followed by special characters is ignored

- - 'lr) lr] lr} lr'' lr" lr- lr, lr. lr; lr: lr? lr!'
  - ';lr) ;lr] ;lr} ;lr'' ;lr" ;lr- ;lr, ;lr. ;lr; ;lr: ;lr? ;lr!'
  - xfail: ...

- - 'lr@ lr# lr$ lr% lr^ lr& lr* lr( lr_ lr= lr+ lr[ lr{ lr\\ lr| lr< lr> lr` lr~ lr/'
  - ';lr@ ;lr# ;lr$ ;lr% ;lr^ ;lr& ;lr* ;lr( ;lr_ ;lr= ;lr+ ;lr[ ;lr{ ;lr\\ ;lr| ;lr< ;lr> ;lr` ;lr~ ;lr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'letter-xl letter-([{''"xl letter-/xl letter-$xl'
  - 'lr-xl lr-([{''"xl lr-/xl lr-$xl'
  - xfail: ...

- - 'letter(xl letter[xl letter{xl letter''xl letter"xl letter=([{''"-xl letter([{''"-xl letter/-xl letter$-xl'
  - 'lr(xl lr[xl lr{xl lr''xl lr"xl lr=([{''"-xl lr([{''"-xl lr/-xl lr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'letterb letterc letterd letterf letterg letterh letterj letterk letterl letterm lettern letterp letterq letterr letters lettert letterv letterw letterx letterz'
  - 'lrb lrc lrd lrf lrg lrh lrj lrk lrl lrm lrn lrp lrq lrr lrs lrt lrv lrw lrx lrz'

- - 'lrb lrc lrd lrf lrg lrh lrj lrk lrl lrm lrn lrp lrq lrr lrs lrt lrv lrw lrx lrz lrful lrment lrness lrsion lrtion lrless lrance lrence lrity lrong'
  - ';lrb ;lrc ;lrd ;lrf ;lrg ;lrh ;lrj ;lrk ;lrl ;lrm ;lrn ;lrp ;lrq ;lrr ;lrs ;lrt ;lrv ;lrw ;lrx ;lrz ;lr;l ;lr;t ;lr;s ;lr.n ;lr;n ;lr.s ;lr.e ;lr;e ;lr;y ;lr;g'
  - xfail: non-contraction of "lr" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "lr"

- - '(like [like {like ''like "like -like'
  - '(l [l {l ''l "l -l'
  - xfail: ...

- - '!like @like #like $like %like ^like &like *like )like _like =like +like ]like }like \\like |like .like ,like ;like :like ?like <like >like `knowlede ~knowlede /knowlede'
  - '!l @l #l $l %l ^l &l *l )l _l =l +l ]l }l \\l |l .l ,l ;l :l ?l <l >l `l ~l /l'
  - xfail: contraction following special characters is ignored

- - '(l [l {l ''l "l -l'
  - '(;l [;l {;l '';l ";l -;l'
  - xfail: ...

- - '!l @l #l $l %l ^l &l *l )l _l =l +l ]l }l \\l |l .l ,l ;l :l ?l <l >l `l ~l /l'
  - '!;l @;l #;l $;l %;l ^;l &;l *;l );l _;l =;l +;l ];l };l \\;l |;l .;l ,;l ;;l :;l ?;l <;l >;l `;l ~;l /;l'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-like xl-([{''"like xl/-like xl$-like'
  - 'xl-l xl-([{''"l xl/-l xl$-l'
  - xfail: ...

- - 'xl(like xl[like xl{like xl''like xl"like xl-=([{''"like'
  - 'xl(l xl[l xl{l xl''l xl"l xl-=([{''"l'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'like) like] like} like'' like" like- like, like. like; like: like? like!'
  - 'l) l] l} l'' l" l- l, l. l; l: l? l!'
  - xfail: ...

- - 'like@ like# like$ like% like^ like& like* like( like_ like= like+ like[ like{ like\\ like| like< like> like` like~ like/'
  - 'l@ l# l$ l% l^ l& l* l( l_ l= l+ l[ l{ l\\ l| l< l> l` l~ l/'
  - xfail: contraction followed by special characters is ignored

- - 'l) l] l} l'' l" l- l, l. l; l: l? l!'
  - ';k) ;k] ;k} ;k'' ;k" ;k- ;k, ;k. ;k; ;k: ;k? ;k!'
  - xfail: ...

- - 'l@ l# l$ l% l^ l& l* l( l_ l= l+ l[ l{ l\\ l| l< l> l` l~ l/'
  - ';k@ ;k# ;k$ ;k% ;k^ ;k& ;k* ;k( ;k_ ;k= ;k+ ;k[ ;k{ ;k\\ ;k| ;k< ;k> ;k` ;k~ ;k/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'like-xl like-([{''"xl like-/xl like-$xl'
  - 'l-xl l-([{''"xl l-/xl l-$xl'
  - xfail: ...

- - 'like(xl like[xl like{xl like''xl like"xl like=([{''"-xl like([{''"-xl like/-xl like$-xl'
  - 'l(xl l[xl l{xl l''xl l"xl l=([{''"-xl l([{''"-xl l/-xl l$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(little [little {little ''little "little -little'
  - '(ll [ll {ll ''ll "ll -ll'
  - xfail: ...

- - '!little @little #little $little %little ^little &little *little )little _little =little +little ]little }little \\little |little .little ,little ;little :little ?little <little >little `little ~little /little'
  - '!ll @ll #ll $ll %ll ^ll &ll *ll )ll _ll =ll +ll ]ll }ll \\ll |ll .ll ,ll ;ll :ll ?ll <ll >ll ?ll `ll ~ll /ll'
  - xfail: contraction following special characters is ignored

- - '(ll [ll {ll ''ll "ll -ll'
  - '(;ll [;ll {;ll '';ll ";ll -;ll'
  - xfail: ...

- - '!ll @ll #ll $ll %ll ^ll &ll *ll )ll _ll =ll +ll ]ll }ll \\ll |ll .ll ,ll ;ll :ll ?ll <ll >ll ?ll `ll ~ll /ll'
  - '!;ll @;ll #;ll $;ll %;ll ^;ll &;ll *;ll );ll _;ll =;ll +;ll ];ll };ll \\;ll |;ll .;ll ,;ll ;;ll :;ll ?;ll <;ll >;ll `;ll ~;ll /;ll'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-little xl-([{''"little xl/-little xl$-little'
  - 'xl-ll xl-([{''"ll xl/-ll xl$-ll'
  - xfail: ...

- - 'xl(little xl[little xl{little xl''little xl"little xl-=([{''"little'
  - 'xl(ll xl[ll xl{ll xl''ll xl"ll xl-=([{''"ll'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'little) little] little} little'' little" little- little, little. little; little: little? little!'
  - 'll) ll] ll} ll'' ll" ll- ll, ll. ll; ll: ll? ll!'
  - xfail: ...

- - 'little@ little# little$ little% little^ little& little* little( little_ little= little+ little[ little{ little\\ little| little< little> little` little~ little/'
  - 'll@ ll# ll$ ll% ll^ ll& ll* ll( ll_ ll= ll+ ll[ ll{ ll\\ ll| ll< ll> ll` ll~ ll/'
  - xfail: contraction followed by special characters is ignored

- - 'll) ll] ll} ll'' ll" ll- ll, ll. ll; ll: ll? ll!'
  - ';ll) ;ll] ;ll} ;ll'' ;ll" ;ll- ;ll, ;ll. ;ll; ;ll: ;ll? ;ll!'
  - xfail: ...

- - 'll@ ll# ll$ ll% ll^ ll& ll* ll( ll_ ll= ll+ ll[ ll{ ll\\ ll| ll< ll> ll` ll~ ll/'
  - ';ll@ ;ll# ;ll$ ;ll% ;ll^ ;ll& ;ll* ;ll( ;ll_ ;ll= ;ll+ ;ll[ ;ll{ ;ll\\ ;ll| ;ll< ;ll> ;ll` ;ll~ ;ll/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'little-xl little-([{''"xl little-/xl little-$xl'
  - 'll-xl ll-([{''"xl ll-/xl ll-$xl'
  - xfail: ...

- - 'little(xl little[xl little{xl little''xl little"xl little=([{''"-xl little([{''"-xl little/-xl little$-xl'
  - 'll(xl ll[xl ll{xl ll''xl ll"xl ll=([{''"-xl ll([{''"-xl ll/-xl ll$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'littleb littlec littled littlef littleg littleh littlej littlek littlel littlem littlen littlep littleq littler littles littlet littlev littlew littlex littlez'
  - 'llb llc lld llf llg llh llj llk lll llm lln llp llq llr lls llt llv llw llx llz'

- - 'llc lld llr'
  - ';llc ;lld ;llr'

- - 'llb llf llg llh llj llk lll llm lln llp llq lls llt llv llw llx llz llful llment llness llsion lltion llless llance llence llity llong'
  - ';llb ;llf ;llg ;llh ;llj ;llk ;lll ;llm ;lln ;llp ;llq ;lls ;llt ;llv ;llw ;llx ;llz ;ll;l ;ll;t ;ll;s ;ll.n ;ll;n ;ll.s ;ll.e ;ll;e ;ll;y ;ll;g'
  - xfail: non-contraction of "ll" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "ll"

- - '(more [more {more ''more "more -more'
  - '(m [m {m ''m "m -m'
  - xfail: ...

- - '!more @more #more $more %more ^more &more *more )more _more =more +more ]more }more \\more |more .more ,more ;more :more ?more <more >more `more ~more /more'
  - '!m @m #m $m %m ^m &m *m )m _m =m +m ]m }m \\m |m .m ,m ;m :m ?m <m >m `m ~m /m'
  - xfail: contraction following special characters is ignored

- - '(m [m {m ''m "m -m'
  - '(;m [;m {;m '';m ";m -;m'
  - xfail: ...

- - '!m @m #m $m %m ^m &m *m )m _m =m +m ]m }m \\m |m .m ,m ;m :m ?m <m >m `m ~m /m'
  - '!;m @;m #;m $;m %;m ^;m &;m *;m );m _;m =;m +;m ];m };m \\;m |;m .;m ,;m ;;m :;m ?;m <;m >;m `;m ~;m /;m'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-more xl-([{''"more xl/-more xl$-more'
  - 'xl-m xl-([{''"m xl/-m xl$-m'
  - xfail: ...

- - 'xl(more xl[more xl{more xl''more xl"more xl-=([{''"more'
  - 'xl(m xl[m xl{m xl''m xl"m xl-=([{''"m'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'more) more] more} more'' more" more- more, more. more; more: more? more!'
  - 'm) m] m} m'' m" m- m, m. m; m: m? m!'
  - xfail: ...

- - 'more@ more# more$ more% more^ more& more* more( more_ more= more+ more[ more{ more\\ more| more< more> more` more~ more/'
  - 'm@ m# m$ m% m^ m& m* m( m_ m= m+ m[ m{ m\\ m| m< m> m` m~ m/'
  - xfail: contraction followed by special characters is ignored

- - 'm) m] m} m'' m" m- m, m. m; m: m? m!'
  - ';m) ;m] ;m} ;m'' ;m" ;m- ;m, ;m. ;m; ;m: ;m? ;m!'
  - xfail: ...

- - 'm@ m# m$ m% m^ m& m* m( m_ m= m+ m[ m{ m\\ m| m< m> m` m~ m/'
  - ';m@ ;m# ;m$ ;m% ;m^ ;m& ;m* ;m( ;m_ ;m= ;m+ ;m[ ;m{ ;m\\ ;m| ;m< ;m> ;m` ;m~ ;m/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'more-xl more-([{''"xl more-/xl more-$xl'
  - 'm-xl m-([{''"xl m-/xl m-$xl'
  - xfail: ...

- - 'more(xl more[xl more{xl more''xl more"xl more=([{''"-xl more([{''"-xl more/-xl more$-xl'
  - 'm(xl m[xl m{xl m''xl m"xl m=([{''"-xl m([{''"-xl m/-xl m$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(much [much {much ''much "much -much'
  - '(m* [m* {m* ''m* "m* -m*'
  - xfail: ...

- - '!much @much #much $much %much ^much &much *much )much _much =much +much ]much }much \\much |much .much ,much ;much :much ?much <much >much `much ~much /much'
  - '!m* @m* #m* $m* %m* ^m* &m* *m* )m* _m* =m* +m* ]m* }m* \\m* |m* .m* ,m* ;m* :m* ?m* <m* >m* ?m* `m* ~m* /m*'
  - xfail: contraction following special characters is ignored

- - '(mch [mch {mch ''mch "mch -mch'
  - '(mch [mch {mch ''mch "mch -mch'
  - xfail: ...

- - '!mch @mch #mch $mch %mch ^mch &mch *mch )mch _mch =mch +mch ]mch }mch \\mch |mch .mch ,mch ;mch :mch ?mch <mch >mch `mch ~mch /mch'
  - '!mch @mch #mch $mch %mch ^mch &mch *mch )mch _mch =mch +mch ]mch }mch \\mch |mch .mch ,mch ;mch :mch ?mch <mch >mch `mch ~mch /mch'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-much xl-([{''"much l/-much l$-much'
  - 'xl-m* xl-([{''"m* l/-m* l$-m*'
  - xfail: ...

- - 'xl(much xl[much xl{much xl''much xl"much xl-=([{''"much'
  - 'xl(m* xl[m* xl{m* xl''m* xl"m* xl-=([{''"m*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'much) much] much} much'' much" much- much, much. much; much: much? much!'
  - 'm*) m*] m*} m*'' m*" m*- m*, m*. m*; m*: m*? m*!'
  - xfail: ...

- - 'much@ much# much$ much% much^ much& much* much( much_ much= much+ much[ much{ much\\ much| much< much> much` much~ much/'
  - 'm*@ m*# m*$ m*% m*^ m*& m** m*( m*_ m*= m*+ m*[ m*{ m*\\ m*| m*< m*> m*` m*~ m*/'
  - xfail: contraction followed by special characters is ignored

- - 'mch) mch] mch} mch'' mch" mch- mch, mch. mch; mch: mch? mch!'
  - 'mch) mch] mch} mch'' mch" mch- mch, mch. mch; mch: mch? mch!'
  - xfail: ...

- - 'mch@ mch# mch$ mch% mch^ mch& mch* mch( mch_ mch= mch+ mch[ mch{ mch\\ mch| mch< mch> mch` mch~ mch/'
  - 'mch@ mch# mch$ mch% mch^ mch& mch* mch( mch_ mch= mch+ mch[ mch{ mch\\ mch| mch< mch> mch` mch~ mch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'much-xl much-([{''"xl much-/xl much-$xl'
  - 'm*-xl m*-([{''"xl m*-/xl m*-$xl'
  - xfail: ...

- - 'much(xl much[xl much{xl much''xl much"xl much=([{''"-xl much([{''"-xl much/-xl much$-xl'
  - 'm*(xl m*[xl m*{xl m*''xl m*"xl m*=([{''"-xl m*([{''"-xl m*/-xl m*$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(muchs [muchs {muchs ''muchs "muchs -muchs'
  - '(m*s [m*s {m*s ''m*s "m*s -m*s'
  - xfail: ...

- - '!muchs @muchs #muchs $muchs %muchs ^muchs &muchs *muchs )muchs _muchs =muchs +muchs ]muchs }muchs \\muchs |muchs .muchs ,muchs ;muchs :muchs ?muchs <muchs >muchs `muchs ~muchs /muchs'
  - '!m*s @m*s #m*s $m*s %m*s ^m*s &m*s *m*s )m*s _m*s =m*s +m*s ]m*s }m*s \\m*s |m*s .m*s ,m*s ;m*s :m*s ?m*s <m*s >m*s ?m*s `m*s ~m*s /m*s'
  - xfail: contraction following special characters is ignored

- - 'mchs (mchs [mchs {mchs ''mchs "mchs -mchs !mchs @mchs #mchs $mchs %mchs ^mchs &mchs *mchs )mchs _mchs =mchs +mchs ]mchs }mchs \\mchs |mchs .mchs ,mchs ;mchs :mchs ?mchs <mchs >mchs `mchs ~mchs /mchs'
  - 'mchs (mchs [mchs {mchs ''mchs "mchs -mchs !mchs @mchs #mchs $mchs %mchs ^mchs &mchs *mchs )mchs _mchs =mchs +mchs ]mchs }mchs \\mchs |mchs .mchs ,mchs ;mchs :mchs ?mchs <mchs >mchs `mchs ~mchs /mchs'
  - xfail: non-contraction of "mchs" conflicts witcv contraction of "muchs"

- - 'xl-muchs xl-([{''"muchs l/-muchs l$-muchs'
  - 'xl-m*s xl-([{''"m*s l/-m*s l$-m*s'
  - xfail: ...

- - 'xl(muchs xl[muchs xl{muchs xl''muchs xl"muchs xl-=([{''"muchs'
  - 'xl(m*s xl[m*s xl{m*s xl''m*s xl"m*s xl-=([{''"m*s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'muchs) muchs] muchs} muchs'' muchs" muchs- muchs, muchs. muchs; muchs: muchs? muchs!'
  - 'm*s) m*s] m*s} m*s'' m*s" m*s- m*s, m*s. m*s; m*s: m*s? m*s!'
  - xfail: ...

- - 'muchs@ muchs# muchs$ muchs% muchs^ muchs& muchm* muchs( muchs_ muchs= muchs+ muchs[ muchs{ muchs\\ muchs| muchs< muchs> muchs` muchs~ muchs/'
  - 'm*s@ m*s# m*s$ m*s% m*s^ m*s& m*m* m*s( m*s_ m*s= m*s+ m*s[ m*s{ m*s\\ m*s| m*s< m*s> m*s` m*s~ m*s/'
  - xfail: contraction followed by special characters is ignored

- - 'mchs) mchs] mchs} mchs'' mchs" mchs- mchs, mchs. mchs; mchs: mchs? mchs! mchs@ mchs# mchs$ mchs% mchs^ mchs& mchm* mchs( mchs_ mchs= mchs+ mchs[ mchs{ mchs\\ mchs| mchs< mchs> mchs` mchs~ mchs/'
  - 'mchs) mchs] mchs} mchs'' mchs" mchs- mchs, mchs. mchs; mchs: mchs? mchs! mchs@ mchs# mchs$ mchs% mchs^ mchs& mchm* mchs( mchs_ mchs= mchs+ mchs[ mchs{ mchs\\ mchs| mchs< mchs> mchs` mchs~ mchs/'
  - xfail: non-contraction of "mchs" conflicts with contraction of "muchs"

- - 'muchs-xl muchs-([{''"xl muchs-/xl muchs-$xl'
  - 'm*s-xl m*s-([{''"xl m*s-/xl m*s-$xl'
  - xfail: ...

- - 'muchs(xl muchs[xl muchs{xl muchs''xl muchs"xl muchs=([{''"-xl muchs([{''"-xl muchs/-xl muchs$-xl'
  - 'm*s(xl m*s[xl m*s{xl m*s''xl m*s"xl m*s=([{''"-xl m*s([{''"-xl m*s/-xl m*s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(must [must {must ''must "must -must'
  - '(m/ [m/ {m/ ''m/ "m/ -m/'
  - xfail: ...

- - '!must @must #must $must %must ^must &must *must )must _must =must +must ]must }must \\must |must .must ,must ;must :must ?must <must >must `must ~must /must'
  - '!m/ @m/ #m/ $m/ %m/ ^m/ &m/ *m/ )m/ _m/ =m/ +m/ ]m/ }m/ \\m/ |m/ .m/ ,m/ ;m/ :m/ ?m/ <m/ >m/ ?m/ `m/ ~m/ /m/'
  - xfail: contraction following special characters is ignored

- - '(mst [mst {mst ''mst "mst -mst'
  - '(mst [mst {mst ''mst "mst -mst'
  - xfail: ...

- - '!mst @mst #mst $mst %mst ^mst &mst *mst )mst _mst =mst +mst ]mst }mst \\mst |mst .mst ,mst ;mst :mst ?mst <mst >mst `mst ~mst /mst'
  - '!mst @mst #mst $mst %mst ^mst &mst *mst )mst _mst =mst +mst ]mst }mst \\mst |mst .mst ,mst ;mst :mst ?mst <mst >mst `mst ~mst /mst'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-must xl-([{''"must l/-must l$-must'
  - 'xl-m/ xl-([{''"m/ l/-m/ l$-m/'
  - xfail: ...

- - 'xl(must xl[must xl{must xl''must xl"must xl-=([{''"must'
  - 'xl(m/ xl[m/ xl{m/ xl''m/ xl"m/ xl-=([{''"m/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'must) must] must} must'' must" must- must, must. must; must: must? must!'
  - 'm/) m/] m/} m/'' m/" m/- m/, m/. m/; m/: m/? m/!'
  - xfail: ...

- - 'must@ must# must$ must% must^ must& must* must( must_ must= must+ must[ must{ must\\ must| must< must> must` must~ must/'
  - 'm/@ m/# m/$ m/% m/^ m/& m/* m/( m/_ m/= m/+ m/[ m/{ m/\\ m/| m/< m/> m/` m/~ m//'
  - xfail: contraction followed by special characters is ignored

- - 'mst) mst] mst} mst'' mst" mst- mst, mst. mst; mst: mst? mst!'
  - 'mst) mst] mst} mst'' mst" mst- mst, mst. mst; mst: mst? mst!'
  - xfail: ...

- - 'mst@ mst# mst$ mst% mst^ mst& mst* mst( mst_ mst= mst+ mst[ mst{ mst\\ mst| mst< mst> mst` mst~ mst/'
  - 'mst@ mst# mst$ mst% mst^ mst& mst* mst( mst_ mst= mst+ mst[ mst{ mst\\ mst| mst< mst> mst` mst~ mst/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'must-xl must-([{''"xl must-/xl must-$xl'
  - 'm/-xl m/-([{''"xl m/-/xl m/-$xl'
  - xfail: ...

- - 'must(xl must[xl must{xl must''xl must"xl must=([{''"-xl must([{''"-xl must/-xl must$-xl'
  - 'm/(xl m/[xl m/{xl m/''xl m/"xl m/=([{''"-xl m/([{''"-xl m//-xl m/$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musta [musta {musta ''musta "musta -musta'
  - '(m/a [m/a {m/a ''m/a "m/a -m/a'
  - xfail: ...

- - '!musta @musta #musta $musta %musta ^musta &musta *musta )musta _musta =musta +musta ]musta }musta \\musta |musta .musta ,musta ;musta :musta ?musta <musta >musta `musta ~musta /musta'
  - '!m/a @m/a #m/a $m/a %m/a ^m/a &m/a *m/a )m/a _m/a =m/a +m/a ]m/a }m/a \\m/a |m/a .m/a ,m/a ;m/a :m/a ?m/a <m/a >m/a ?m/a `m/a ~m/a /m/a'
  - xfail: contraction following special characters is ignored

- - 'msta (msta [msta {msta ''msta "msta -msta !msta @msta #msta $msta %msta ^msta &msta *msta )msta _msta =msta +msta ]msta }msta \\msta |msta .msta ,msta ;msta :msta ?msta <msta >msta `msta ~msta /msta'
  - 'msta (msta [msta {msta ''msta "msta -msta !msta @msta #msta $msta %msta ^msta &msta *msta )msta _msta =msta +msta ]msta }msta \\msta |msta .msta ,msta ;msta :msta ?msta <msta >msta `msta ~msta /msta'
  - xfail: non-contraction of "msta" conflicta witcv contraction of "musta"

- - 'xl-musta xl-([{''"musta l/-musta l$-musta'
  - 'xl-m/a xl-([{''"m/a l/-m/a l$-m/a'
  - xfail: ...

- - 'xl(musta xl[musta xl{musta xl''musta xl"musta xl-=([{''"musta'
  - 'xl(m/a xl[m/a xl{m/a xl''m/a xl"m/a xl-=([{''"m/a'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musta) musta] musta} musta'' musta" musta- musta, musta. musta; musta: musta? musta!'
  - 'm/a) m/a] m/a} m/a'' m/a" m/a- m/a, m/a. m/a; m/a: m/a? m/a!'
  - xfail: ...

- - 'musta@ musta# musta$ musta% musta^ musta& mustm/ musta( musta_ musta= musta+ musta[ musta{ musta\\ musta| musta< musta> musta` musta~ musta/'
  - 'm/a@ m/a# m/a$ m/a% m/a^ m/a& m/m/ m/a( m/a_ m/a= m/a+ m/a[ m/a{ m/a\\ m/a| m/a< m/a> m/a` m/a~ m/a/'
  - xfail: contraction followed by special characters is ignored

- - 'msta) msta] msta} msta'' msta" msta- msta, msta. msta; msta: msta? msta! msta@ msta# msta$ msta% msta^ msta& mstm/ msta( msta_ msta= msta+ msta[ msta{ msta\\ msta| msta< msta> msta` msta~ msta/'
  - 'msta) msta] msta} msta'' msta" msta- msta, msta. msta; msta: msta? msta! msta@ msta# msta$ msta% msta^ msta& mstm/ msta( msta_ msta= msta+ msta[ msta{ msta\\ msta| msta< msta> msta` msta~ msta/'
  - xfail: non-contraction of "msta" conflicta with contraction of "musta"

- - 'musta-xl musta-([{''"xl musta-/xl musta-$xl'
  - 'm/a-xl m/a-([{''"xl m/a-/xl m/a-$xl'
  - xfail: ...

- - 'musta(xl musta[xl musta{xl musta''xl musta"xl musta=([{''"-xl musta([{''"-xl musta/-xl musta$-xl'
  - 'm/a(xl m/a[xl m/a{xl m/a''xl m/a"xl m/a=([{''"-xl m/a([{''"-xl m/a/-xl m/a$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musts [musts {musts ''musts "musts -musts'
  - '(m/s [m/s {m/s ''m/s "m/s -m/s'
  - xfail: ...

- - '!musts @musts #musts $musts %musts ^musts &musts *musts )musts _musts =musts +musts ]musts }musts \\musts |musts .musts ,musts ;musts :musts ?musts <musts >musts `musts ~musts /musts'
  - '!m/s @m/s #m/s $m/s %m/s ^m/s &m/s *m/s )m/s _m/s =m/s +m/s ]m/s }m/s \\m/s |m/s .m/s ,m/s ;m/s :m/s ?m/s <m/s >m/s ?m/s `m/s ~m/s /m/s'
  - xfail: contraction following special characters is ignored

- - 'msts (msts [msts {msts ''msts "msts -msts !msts @msts #msts $msts %msts ^msts &msts *msts )msts _msts =msts +msts ]msts }msts \\msts |msts .msts ,msts ;msts :msts ?msts <msts >msts `msts ~msts /msts'
  - 'msts (msts [msts {msts ''msts "msts -msts !msts @msts #msts $msts %msts ^msts &msts *msts )msts _msts =msts +msts ]msts }msts \\msts |msts .msts ,msts ;msts :msts ?msts <msts >msts `msts ~msts /msts'
  - xfail: non-contraction of "msts" conflicts witcv contraction of "musts"

- - 'xl-musts xl-([{''"musts l/-musts l$-musts'
  - 'xl-m/s xl-([{''"m/s l/-m/s l$-m/s'
  - xfail: ...

- - 'xl(musts xl[musts xl{musts xl''musts xl"musts xl-=([{''"musts'
  - 'xl(m/s xl[m/s xl{m/s xl''m/s xl"m/s xl-=([{''"m/s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musts) musts] musts} musts'' musts" musts- musts, musts. musts; musts: musts? musts!'
  - 'm/s) m/s] m/s} m/s'' m/s" m/s- m/s, m/s. m/s; m/s: m/s? m/s!'
  - xfail: ...

- - 'musts@ musts# musts$ musts% musts^ musts& mustm/ musts( musts_ musts= musts+ musts[ musts{ musts\\ musts| musts< musts> musts` musts~ musts/'
  - 'm/s@ m/s# m/s$ m/s% m/s^ m/s& m/m/ m/s( m/s_ m/s= m/s+ m/s[ m/s{ m/s\\ m/s| m/s< m/s> m/s` m/s~ m/s/'
  - xfail: contraction followed by special characters is ignored

- - 'msts) msts] msts} msts'' msts" msts- msts, msts. msts; msts: msts? msts! msts@ msts# msts$ msts% msts^ msts& mstm/ msts( msts_ msts= msts+ msts[ msts{ msts\\ msts| msts< msts> msts` msts~ msts/'
  - 'msts) msts] msts} msts'' msts" msts- msts, msts. msts; msts: msts? msts! msts@ msts# msts$ msts% msts^ msts& mstm/ msts( msts_ msts= msts+ msts[ msts{ msts\\ msts| msts< msts> msts` msts~ msts/'
  - xfail: non-contraction of "msts" conflicts with contraction of "musts"

- - 'musts-xl musts-([{''"xl musts-/xl musts-$xl'
  - 'm/s-xl m/s-([{''"xl m/s-/xl m/s-$xl'
  - xfail: ...

- - 'musts(xl musts[xl musts{xl musts''xl musts"xl musts=([{''"-xl musts([{''"-xl musts/-xl musts$-xl'
  - 'm/s(xl m/s[xl m/s{xl m/s''xl m/s"xl m/s=([{''"-xl m/s([{''"-xl m/s/-xl m/s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musty [musty {musty ''musty "musty -musty'
  - '(m/y [m/y {m/y ''m/y "m/y -m/y'
  - xfail: ...

- - '!musty @musty #musty $musty %musty ^musty &musty *musty )musty _musty =musty +musty ]musty }musty \\musty |musty .musty ,musty ;musty :musty ?musty <musty >musty `musty ~musty /musty'
  - '!m/y @m/y #m/y $m/y %m/y ^m/y &m/y *m/y )m/y _m/y =m/y +m/y ]m/y }m/y \\m/y |m/y .m/y ,m/y ;m/y :m/y ?m/y <m/y >m/y ?m/y `m/y ~m/y /m/y'
  - xfail: contraction following special characters is ignored

- - 'msty (msty [msty {msty ''msty "msty -msty !msty @msty #msty $msty %msty ^msty &msty *msty )msty _msty =msty +msty ]msty }msty \\msty |msty .msty ,msty ;msty :msty ?msty <msty >msty `msty ~msty /msty'
  - 'msty (msty [msty {msty ''msty "msty -msty !msty @msty #msty $msty %msty ^msty &msty *msty )msty _msty =msty +msty ]msty }msty \\msty |msty .msty ,msty ;msty :msty ?msty <msty >msty `msty ~msty /msty'
  - xfail: non-contraction of "msty" conflicty witcv contraction of "musty"

- - 'xl-musty xl-([{''"musty l/-musty l$-musty'
  - 'xl-m/y xl-([{''"m/y l/-m/y l$-m/y'
  - xfail: ...

- - 'xl(musty xl[musty xl{musty xl''musty xl"musty xl-=([{''"musty'
  - 'xl(m/y xl[m/y xl{m/y xl''m/y xl"m/y xl-=([{''"m/y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musty) musty] musty} musty'' musty" musty- musty, musty. musty; musty: musty? musty!'
  - 'm/y) m/y] m/y} m/y'' m/y" m/y- m/y, m/y. m/y; m/y: m/y? m/y!'
  - xfail: ...

- - 'musty@ musty# musty$ musty% musty^ musty& mustm/ musty( musty_ musty= musty+ musty[ musty{ musty\\ musty| musty< musty> musty` musty~ musty/'
  - 'm/y@ m/y# m/y$ m/y% m/y^ m/y& m/m/ m/y( m/y_ m/y= m/y+ m/y[ m/y{ m/y\\ m/y| m/y< m/y> m/y` m/y~ m/y/'
  - xfail: contraction followed by special characters is ignored

- - 'msty) msty] msty} msty'' msty" msty- msty, msty. msty; msty: msty? msty! msty@ msty# msty$ msty% msty^ msty& mstm/ msty( msty_ msty= msty+ msty[ msty{ msty\\ msty| msty< msty> msty` msty~ msty/'
  - 'msty) msty] msty} msty'' msty" msty- msty, msty. msty; msty: msty? msty! msty@ msty# msty$ msty% msty^ msty& mstm/ msty( msty_ msty= msty+ msty[ msty{ msty\\ msty| msty< msty> msty` msty~ msty/'
  - xfail: non-contraction of "msty" conflicty with contraction of "musty"

- - 'musty-xl musty-([{''"xl musty-/xl musty-$xl'
  - 'm/y-xl m/y-([{''"xl m/y-/xl m/y-$xl'
  - xfail: ...

- - 'musty(xl musty[xl musty{xl musty''xl musty"xl musty=([{''"-xl musty([{''"-xl musty/-xl musty$-xl'
  - 'm/y(xl m/y[xl m/y{xl m/y''xl m/y"xl m/y=([{''"-xl m/y([{''"-xl m/y/-xl m/y$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(myself [myself {myself ''myself "myself -myself'
  - '(myf [myf {myf ''myf "myf -myf'
  - xfail: ...

- - '!myself @myself #myself $myself %myself ^myself &myself *myself )myself _myself =myself +myself ]myself }myself \\myself |myself .myself ,myself ;myself :myself ?myself <myself >myself `myself ~myself /myself'
  - '!myf @myf #myf $myf %myf ^myf &myf *myf )myf _myf =myf +myf ]myf }myf \\myf |myf .myf ,myf ;myf :myf ?myf <myf >myf `myf ~myf /myf'
  - xfail: contraction following special characters is ignored

- - '(myf [myf {myf ''myf "myf -myf'
  - '(;myf [;myf {;myf '';myf ";myf -;myf'
  - xfail: ...

- - '!myf @myf #myf $myf %myf ^myf &myf *myf )myf _myf =myf +myf ]myf }myf \\myf |myf .myf ,myf ;myf :myf ?myf <myf >myf `myf ~myf /myf'
  - '!;myf @;myf #;myf $;myf %;myf ^;myf &;myf *;myf );myf _;myf =;myf +;myf ];myf };myf \\;myf |;myf .;myf ,;myf ;;myf :;myf ?;myf <;myf >;myf `;myf ~;myf /;myf'
  - xfail: non-contraction following special characters myyself a missing grade 1 indicator

- - 'xl-myself xl-([{''"myself l/-myself l$-myself'
  - 'xl-myf xl-([{''"myf l/-myf l$-myf'
  - xfail: ...

- - 'xl(myself xl[myself xl{myself xl''myself xl"myself xl-=([{''"myself'
  - 'xl(myf xl[myf xl{myf xl''myf xl"myf xl-=([{''"myf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'myself) myself] myself} myself'' myself" myself- myself, myself. myself; myself: myself? myself!'
  - 'myf) myf] myf} myf'' myf" myf- myf, myf. myf; myf: myf? myf!'
  - xfail: ...

- - 'myself@ myself# myself$ myself% myself^ myself& myself* myself( myself_ myself= myself+ myself[ myself{ myself\\ myself| myself< myself> myself` myself~ myself/'
  - 'myf@ myf# myf$ myf% myf^ myf& myf* myf( myf_ myf= myf+ myf[ myf{ myf\\ myf| myf< myf> myf` myf~ myf/'
  - xfail: contraction followed by special characters is ignored

- - 'myf) myf] myf} myf'' myf" myf- myf, myf. myf; myf: myf? myf!'
  - ';myf) ;myf] ;myf} ;myf'' ;myf" ;myf- ;myf, ;myf. ;myf; ;myf: ;myf? ;myf!'
  - xfail: ...

- - 'myf@ myf# myf$ myf% myf^ myf& myf* myf( myf_ myf= myf+ myf[ myf{ myf\\ myf| myf< myf> myf` myf~ myf/'
  - ';myf@ ;myf# ;myf$ ;myf% ;myf^ ;myf& ;myf* ;myf( ;myf_ ;myf= ;myf+ ;myf[ ;myf{ ;myf\\ ;myf| ;myf< ;myf> ;myf` ;myf~ ;myf/'
  - xfail: non-contraction following special characters myyself a missing grade 1 indicator

- - 'myself-xl myself-([{''"xl myself-/xl myself-$xl'
  - 'myf-xl myf-([{''"xl myf-/xl myf-$xl'
  - xfail: ...

- - 'myself(xl myself[xl myself{xl myself''xl myself"xl myself=([{''"-xl myself([{''"-xl myself/-xl myself$-xl'
  - 'myf(xl myf[xl myf{xl myf''xl myf"xl myf=([{''"-xl myf([{''"-xl myf/-xl myf$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(myselfs [myselfs {myselfs ''myselfs "myselfs -myselfs'
  - '(myfs [myfs {myfs ''myfs "myfs -myfs'
  - xfail: ...

- - '!myselfs @myselfs #myselfs $myselfs %myselfs ^myselfs &myselfs *myselfs )myselfs _myselfs =myselfs +myselfs ]myselfs }myselfs \\myselfs |myselfs .myselfs ,myselfs ;myselfs :myselfs ?myselfs <myselfs >myselfs `myselfs ~myselfs /myselfs'
  - '!myfs @myfs #myfs $myfs %myfs ^myfs &myfs *myfs )myfs _myfs =myfs +myfs ]myfs }myfs \\myfs |myfs .myfs ,myfs ;myfs :myfs ?myfs <myfs >myfs `myfs ~myfs /myfs'
  - xfail: contraction following special characters is ignored

- - 'myfs (myfs [myfs {myfs ''myfs "myfs -myfs !myfs @myfs #myfs $myfs %myfs ^myfs &myfs *myfs )myfs _myfs =myfs +myfs ]myfs }myfs \\myfs |myfs .myfs ,myfs ;myfs :myfs ?myfs <myfs >myfs `myfs ~myfs /myfs'
  - ';myfs (;myfs [;myfs {;myfs '';myfs ";myfs -;myfs !;myfs @;myfs #;myfs $;myfs %;myfs ^;myfs &;myfs *;myfs );myfs _;myfs =;myfs +;myfs ];myfs };myfs \\;myfs |;myfs .;myfs ,;myfs ;;myfs :;myfs ?;myfs <;myfs >;myfs `;myfs ~;myfs /;myfs'
  - xfail: non-contraction following special characters myyselfs a missing grade 1 indicator

- - 'xl-myselfs xl-([{''"myselfs l/-myselfs l$-myselfs'
  - 'xl-myfs xl-([{''"myfs l/-myfs l$-myfs'
  - xfail: ...

- - 'xl(myselfs xl[myselfs xl{myselfs xl''myselfs xl"myselfs xl-=([{''"myselfs'
  - 'xl(myfs xl[myfs xl{myfs xl''myfs xl"myfs xl-=([{''"myfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'myselfs) myselfs] myselfs} myselfs'' myselfs" myselfs- myselfs, myselfs. myselfs; myselfs: myselfs? myselfs!'
  - 'myfs) myfs] myfs} myfs'' myfs" myfs- myfs, myfs. myfs; myfs: myfs? myfs!'
  - xfail: ...

- - 'myselfs@ myselfs# myselfs$ myselfs% myselfs^ myselfs& myselfs* myselfs( myselfs_ myselfs= myselfs+ myselfs[ myselfs{ myselfs\\ myselfs| myselfs< myselfs> myselfs` myselfs~ myselfs/'
  - 'myfs@ myfs# myfs$ myfs% myfs^ myfs& myfs* myfs( myfs_ myfs= myfs+ myfs[ myfs{ myfs\\ myfs| myfs< myfs> myfs` myfs~ myfs/'
  - xfail: contraction followed by special characters is ignored

- - 'myfs) myfs] myfs} myfs'' myfs" myfs- myfs, myfs. myfs; myfs: myfs? myfs! myfs@ myfs# myfs$ myfs% myfs^ myfs& myfs* myfs( myfs_ myfs= myfs+ myfs[ myfs{ myfs\\ myfs| myfs< myfs> myfs` myfs~ myfs/'
  - ';myfs) ;myfs] ;myfs} ;myfs'' ;myfs" ;myfs- ;myfs, ;myfs. ;myfs; ;myfs: ;myfs? ;myfs! ;myfs@ ;myfs# ;myfs$ ;myfs% ;myfs^ ;myfs& ;myfs* ;myfs( ;myfs_ ;myfs= ;myfs+ ;myfs[ ;myfs{ ;myfs\\ ;myfs| ;myfs< ;myfs> ;myfs` ;myfs~ ;myfs/'
  - xfail: non-contraction following special characters myyselfs a missing grade 1 indicator

- - 'myselfs-xl myselfs-([{''"xl myselfs-/xl myselfs-$xl'
  - 'myfs-xl myfs-([{''"xl myfs-/xl myfs-$xl'
  - xfail: ...

- - 'myselfs(xl myselfs[xl myselfs{xl myselfs''xl myselfs"xl myselfs=([{''"-xl myselfs([{''"-xl myselfs/-xl myselfs$-xl'
  - 'myfs(xl myfs[xl myfs{xl myfs''xl myfs"xl myfs=([{''"-xl myfs([{''"-xl myfs/-xl myfs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(necessary [necessary {necessary ''necessary "necessary -necessary'
  - '(nec [nec {nec ''nec "nec -nec'
  - xfail: ...

- - '!necessary @necessary #necessary $necessary %necessary ^necessary &necessary *necessary )necessary _necessary =necessary +necessary ]necessary }necessary \\necessary |necessary .necessary ,necessary ;necessary :necessary ?necessary <necessary >necessary'
  - '!nec @nec #nec $nec %nec ^nec &nec *nec )nec _nec =nec +nec ]nec }nec \\nec |nec .nec ,nec ;nec :nec ?nec <nec >nec'
  - xfail: contraction following special characters is ignored

- - '`necessary, ~necessary /necessary'
  - '`nec ~nec /nec'
  - xfail: contraction following special characters is ignored

- - '(nec [nec {nec ''nec "nec -nec'
  - '(;nec [;nec {;nec '';nec ";nec -nec'
  - xfail: ...

- - '!nec @nec #nec $nec %nec ^nec &nec *nec )nec _nec =nec +nec ]nec }nec \\nec |nec .nec ,nec ;nec :nec ?nec <nec >nec `nec ~nec /nec'
  - '!;nec @;nec #;nec $;nec %;nec ^;nec &;nec *;nec );nec _;nec =;nec +;nec ];nec };nec \\;nec |;nec .;nec ,;nec ;;nec :;nec ?;nec <;nec >;nec `;nec ~;nec /;nec'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-necessary xl-([{''"necessary l/-necessary l$-necessary'
  - 'xl-nec xl-([{''"nec l/-nec l$-nec'
  - xfail: ...

- - 'xl(necessary xl[necessary xl{necessary xl''necessary xl"necessary xl-=([{''"necessary'
  - 'xl(nec xl[nec xl{nec xl''nec xl"nec xl-=([{''"nec'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'necessary) necessary] necessary} necessary'' necessary" necessary- necessary, necessary. necessary; necessary: necessary? necessary!'
  - 'nec) nec] nec} nec'' nec" nec- nec, nec. nec; nec: nec? nec!'
  - xfail: ...

- - 'necessary@ necessary# necessary$ necessary% necessary^ necessary& necessary* necessary( necessary_ necessary= necessary+ necessary[ necessary{ necessary\\ necessary| necessary< necessary> necessary` necessary~ necessary/'
  - 'nec@ nec# nec$ nec% nec^ nec& nec* nec( nec_ nec= nec+ nec[ nec{ nec\\ nec| nec< nec> nec` nec~ nec/'
  - xfail: contraction followed by special characters is ignored

- - 'nec) nec] nec} nec'' nec" nec- nec, nec. nec; nec: nec? nec!'
  - ';nec) ;nec] ;nec} ;nec'' ;nec" ;nec- ;nec, ;nec. ;nec; ;nec: ;nec? ;nec!'
  - xfail: ...

- - 'nec@ nec# nec$ nec% nec^ nec& nec* nec( nec_ nec= nec+ nec[ nec{ nec\\ nec| nec< nec> nec` nec~ nec/'
  - ';nec@ ;nec# ;nec$ ;nec% ;nec^ ;nec& ;nec* ;nec( ;nec_ ;nec= ;nec+ ;nec[ ;nec{ ;nec\\ ;nec| ;nec< ;nec> ;nec` ;nec~ ;nec/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'necessary-xl necessary-([{''"xl necessary-/xl necessary-$xl'
  - 'nec-xl nec-([{''"xl nec-/xl nec-$xl'
  - xfail: ...

- - 'necessary(xl necessary[xl necessary{xl necessary''xl necessary"xl necessary=([{''"-xl necessary([{''"-xl necessary/-xl necessary$-xl'
  - 'nec(xl nec[xl nec{xl nec''xl nec"xl nec=([{''"-xl nec([{''"-xl nec/-xl nec$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unnecessary [unnecessary {unnecessary ''unnecessary "unnecessary -unnecessary'
  - '(unnec [unnec {unnec ''unnec "unnec -unnec'
  - xfail: ...

- - '!unnecessary @unnecessary #unnecessary $unnecessary %unnecessary ^unnecessary &unnecessary *unnecessary )unnecessary _unnecessary =unnecessary +unnecessary ]unnecessary }unnecessary \\unnecessary |unnecessary .unnecessary ,unnecessary ;unnecessary :unnecessary'
  - '!unnec @unnec #unnec $unnec %unnec ^unnec &unnec *unnec )unnec _unnec =unnec +unnec ]unnec }unnec \\unnec |unnec .unnec ,unnec ;unnec :unnec'
  - xfail: contraction followingly special characters is ignored

- - '?unnecessary <unnecessary >unnecessary `unnecessary, ~unnecessary /unnecessary'
  - '?unnec <unnec >unnec `unnec ~unnec /unnec'
  - xfail: contraction followingly special characters is ignored

- - '(unnec [unnec {unnec ''unnec "unnec -unnec'
  - '(;unnec [;unnec {;unnec '';unnec ";unnec -;unnec'
  - xfail: ...

- - '!unnec @unnec #unnec $unnec %unnec ^unnec &unnec *unnec )unnec _unnec =unnec +unnec ]unnec }unnec \\unnec |unnec .unnec ,unnec ;unnec :unnec ?unnec <unnec >unnec `unnec ~unnec /unnec'
  - '!;unnec @;unnec #;unnec $;unnec %;unnec ^;unnec &;unnec *;unnec );unnec _;unnec =;unnec +;unnec ];unnec };unnec \\;unnec |;unnec .;unnec ,;unnec ;;unnec :;unnec ?;unnec <;unnec >;unnec `;unnec ~;unnec /;unnec'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unnecessary xl-([{''"unnecessary l/-unnecessary l$-unnecessary'
  - 'xl-unnec xl-([{''"unnec l/-unnec l$-unnec'
  - xfail: ...

- - 'xl(unnecessary xl[unnecessary xl{unnecessary xl''unnecessary xl"unnecessary xl-=([{''"unnecessary'
  - 'xl(unnec xl[unnec xl{unnec xl''unnec xl"unnec xl-=([{''"unnec'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unnecessary) unnecessary] unnecessary} unnecessary'' unnecessary" unnecessary- unnecessary, unnecessary. unnecessary; unnecessary: unnecessary? unnecessary!'
  - 'unnec) unnec] unnec} unnec'' unnec" unnec- unnec, unnec. unnec; unnec: unnec? unnec!'
  - xfail: ...

- - 'unnecessary@ unnecessary# unnecessary$ unnecessary% unnecessary^ unnecessary& unnecessary* unnecessary( unnecessary_ unnecessary= unnecessary+ unnecessary[ unnecessary{ unnecessary\\ unnecessary| unnecessary< unnecessary> unnecessary` unnecessary~ unnecessary/'
  - 'unnec@ unnec# unnec$ unnec% unnec^ unnec& unnec* unnec( unnec_ unnec= unnec+ unnec[ unnec{ unnec\\ unnec| unnec< unnec> unnec` unnec~ unnec/'
  - xfail: contraction followed by special characters is ignored

- - 'unnec) unnec] unnec} unnec'' unnec" unnec- unnec, unnec. unnec; unnec: unnec? unnec!'
  - ';unnec) ;unnec] ;unnec} ;unnec'' ;unnec" ;unnec- ;unnec, ;unnec. ;unnec; ;unnec: ;unnec? ;unnec!'
  - xfail: ...

- - 'unnec@ unnec# unnec$ unnec% unnec^ unnec& unnec* unnec( unnec_ unnec= unnec+ unnec[ unnec{ unnec\\ unnec| unnec< unnec> unnec` unnec~ unnec/'
  - ';unnec@ ;unnec# ;unnec$ ;unnec% ;unnec^ ;unnec& ;unnec* ;unnec( ;unnec_ ;unnec= ;unnec+ ;unnec[ ;unnec{ ;unnec\\ ;unnec| ;unnec< ;unnec> ;unnec` ;unnec~ ;unnec/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unnecessary-xl unnecessary-([{''"xl unnecessary-/xl unnecessary-$xl'
  - 'unnec-xl unnec-([{''"xl unnec-/xl unnec-$xl'
  - xfail: ...

- - 'unnecessary(xl unnecessary[xl unnecessary{xl unnecessary''xl unnecessary"xl unnecessary=([{''"-xl unnecessary([{''"-xl unnecessary/-xl unnecessary$-xl'
  - 'unnec(xl unnec[xl unnec{xl unnec''xl unnec"xl unnec=([{''"-xl unnec([{''"-xl unnec/-xl unnec$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unnecessarys [unnecessarys {unnecessarys ''unnecessarys "unnecessarys -unnecessarys'
  - '(unnecs [unnecs {unnecs ''unnecs "unnecs -unnecs'
  - xfail: ...

- - '!unnecessarys @unnecessarys #unnecessarys $unnecessarys %unnecessarys ^unnecessarys &unnecessarys *unnecessarys )unnecessarys _unnecessarys =unnecessarys +unnecessarys ]unnecessarys }unnecessarys \\unnecessarys |unnecessarys .unnecessarys ,unnecessarys'
  - '!unnecs @unnecs #unnecs $unnecs %unnecs ^unnecs &unnecs *unnecs )unnecs _unnecs =unnecs +unnecs ]unnecs }unnecs \\unnecs |unnecs .unnecs ,unnecs'
  - xfail: contraction followingly special characters is ignored

- - ';unnecessarys :unnecessarys ?unnecessarys <unnecessarys >unnecessarys `unnecessarys, ~unnecessarys /unnecessarys'
  - 'bunnecs :unnecs ?unnecs <unnecs >unnecs `unnecs ~unnecs /unnecs'
  - xfail: contraction followingly special characters is ignored

- - 'unnecs (unnecs [unnecs {unnecs ''unnecs "unnecs -unnecs !unnecs @unnecs #unnecs $unnecs %unnecs ^unnecs &unnecs *unnecs )unnecs _unnecs =unnecs +unnecs ]unnecs }unnecs \\unnecs |unnecs .unnecs ,unnecs ;unnecs :unnecs ?unnecs <unnecs >unnecs `unnecs ~unnecs /unnec'
  - ';unnecs (;unnecs [;unnecs {;unnecs '';unnecs ";unnecs -;unnecs !;unnecs @;unnecs #;unnecs $;unnecs %;unnecs ^;unnecs &;unnecs *;unnecs );unnecs _;unnecs =;unnecs +;unnecs ];unnecs };unnecs \\;unnecs |;unnecs .;unnecs ,;unnecs ;;unnecs :;unnecs ?;unnecs <;unnecs >'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unnecessarys xl-([{''"unnecessarys l/-unnecessarys l$-unnecessarys'
  - 'xl-unnecs xl-([{''"unnecs l/-unnecs l$-unnecs'
  - xfail: ...

- - 'xl(unnecessarys xl[unnecessarys xl{unnecessarys xl''unnecessarys xl"unnecessarys xl-=([{''"unnecessarys'
  - 'xl(unnecs xl[unnecs xl{unnecs xl''unnecs xl"unnecs xl-=([{''"unnecs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unnecessarys) unnecessarys] unnecessarys} unnecessarys'' unnecessarys" unnecessarys- unnecessarys, unnecessarys. unnecessarys; unnecessarys: unnecessarys? unnecessarys!'
  - 'unnecs) unnecs] unnecs} unnecs'' unnecs" unnecs- unnecs, unnecs. unnecs; unnecs: unnecs? unnecs!'
  - xfail: ...

- - 'unnecessarys@ unnecessarys# unnecessarys$ unnecessarys% unnecessarys^ unnecessarys& unnecessarys* unnecessarys( unnecessarys_ unnecessarys= unnecessarys+ unnecessarys[ unnecessarys{ unnecessarys\\ unnecessarys| unnecessarys< unnecessarys> unnecessarys`'
  - 'unnecs@ unnecs# unnecs$ unnecs% unnecs^ unnecs& unnecs* unnecs( unnecs_ unnecs= unnecs+ unnecs[ unnecs{ unnecs\\ unnecs| unnecs< unnecs> unnecs`'
  - xfail: contraction followed by special characters is ignored

- - 'unnecessarys~ unnecessarys/'
  - 'unnecs~ unnecs/'
  - xfail: contraction followed by special characters is ignored

- - 'unnecs) unnecs] unnecs} unnecs'' unnecs" unnecs- unnecs, unnecs. unnecs; unnecs: unnecs? unnecs! unnecs@ unnecs# unnecs$ unnecs% unnecs^ unnecs& unnecs* unnecs( unnecs_ unnecs= unnecs+ unnecs[ unnecs{ unnecs\\ unnecs| unnecs< unnecs> unnecs` unnecs~ unnecs/'
  - ';unnecs) ;unnecs] ;unnecs} ;unnecs'' ;unnecs" ;unnecs- ;unnecs, ;unnecs. ;unnecs; ;unnecs: ;unnecs? ;unnecs! ;unnecs@ ;unnecs# ;unnecs$ ;unnecs% ;unnecs^ ;unnecs& ;unnecs* ;unnecs( ;unnecs_ ;unnecs= ;unnecs+ ;unnecs[ ;unnecs{ ;unnecs\\ ;unnecs| ;unnecs< ;unnecs>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unnecessarys-xl unnecessarys-([{''"xl unnecessarys-/xl unnecessarys-$xl'
  - 'unnecs-xl unnecs-([{''"xl unnecs-/xl unnecs-$xl'
  - xfail: ...

- - 'unnecessarys(xl unnecessarys[xl unnecessarys{xl unnecessarys''xl unnecessarys"xl unnecessarys=([{''"-xl unnecessarys([{''"-xl unnecessarys/-xl unnecessarys$-xl'
  - 'unnecs(xl unnecs[xl unnecs{xl unnecs''xl unnecs"xl unnecs=([{''"-xl unnecs([{''"-xl unnecs/-xl unnecs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(necessarys [necessarys {necessarys ''necessarys "necessarys -necessarys'
  - '(necs [necs {necs ''necs "necs -necs'
  - xfail: ...

- - '!necessarys @necessarys #necessarys $necessarys %necessarys ^necessarys &necessarys *necessarys )necessarys _necessarys =necessarys +necessarys ]necessarys }necessarys \\necessarys |necessarys .necessarys ,necessarys ;necessarys :necessarys ?necessarys'
  - '!necs @necs #necs $necs %necs ^necs &necs *necs )necs _necs =necs +necs ]necs }necs \\necs |necs .necs ,necs ;necs :necs ?necs'
  - xfail: contraction following special characters is ignored

- - '<necessarys >necessarys `necessarys, ~necessarys /necessarys'
  - '<necs >necs `necs ~necs /necs'
  - xfail: contraction following special characters is ignored

- - 'necs (necs [necs {necs ''necs "necs -necs !necs @necs #necs $necs %necs ^necs &necs *necs )necs _necs =necs +necs ]necs }necs \\necs |necs .necs ,necs ;necs :necs ?necs <necs >necs `necs ~necs /necs'
  - ';necs (;necs [;necs {;necs '';necs ";necs -;necs !;necs @;necs #;necs $;necs %;necs ^;necs &;necs *;necs );necs _;necs =;necs +;necs ];necs };necs \\;necs |;necs .;necs ,;necs ;;necs :;necs ?;necs <;necs >;necs `;necs ~;necs /;necs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-necessarys xl-([{''"necessarys l/-necessarys l$-necessarys'
  - 'xl-necs xl-([{''"necs l/-necs l$-necs'
  - xfail: ...

- - 'xl(necessarys xl[necessarys xl{necessarys xl''necessarys xl"necessarys xl-=([{''"necessarys'
  - 'xl(necs xl[necs xl{necs xl''necs xl"necs xl-=([{''"necs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'necessarys) necessarys] necessarys} necessarys'' necessarys" necessarys- necessarys, necessarys. necessarys; necessarys: necessarys? necessarys!'
  - 'necs) necs] necs} necs'' necs" necs- necs, necs. necs; necs: necs? necs!'
  - xfail: ...

- - 'necessarys@ necessarys# necessarys$ necessarys% necessarys^ necessarys& necessarys* necessarys( necessarys_ necessarys= necessarys+ necessarys[ necessarys{ necessarys\\ necessarys| necessarys< necessarys> necessarys` necessarys~ necessarys/'
  - 'necs@ necs# necs$ necs% necs^ necs& necs* necs( necs_ necs= necs+ necs[ necs{ necs\\ necs| necs< necs> necs` necs~ necs/'
  - xfail: contraction followed by special characters is ignored

- - 'necs) necs] necs} necs'' necs" necs- necs, necs. necs; necs: necs? necs! necs@ necs# necs$ necs% necs^ necs& necs* necs( necs_ necs= necs+ necs[ necs{ necs\\ necs| necs< necs> necs` necs~ necs/'
  - ';necs) ;necs] ;necs} ;necs'' ;necs" ;necs- ;necs, ;necs. ;necs; ;necs: ;necs? ;necs! ;necs@ ;necs# ;necs$ ;necs% ;necs^ ;necs& ;necs* ;necs( ;necs_ ;necs= ;necs+ ;necs[ ;necs{ ;necs\\ ;necs| ;necs< ;necs> ;necs` ;necs~ ;necs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'necessarys-xl necessarys-([{''"xl necessarys-/xl necessarys-$xl'
  - 'necs-xl necs-([{''"xl necs-/xl necs-$xl'
  - xfail: ...

- - 'necessarys(xl necessarys[xl necessarys{xl necessarys''xl necessarys"xl necessarys=([{''"-xl necessarys([{''"-xl necessarys/-xl necessarys$-xl'
  - 'necs(xl necs[xl necs{xl necs''xl necs"xl necs=([{''"-xl necs([{''"-xl necs/-xl necs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(neither [neither {neither ''neither "neither -neither'
  - '(nei [nei {nei ''nei "nei -nei'
  - xfail: ...

- - '!neither @neither #neither $neither %neither ^neither &neither *neither )neither _neither =neither +neither ]neither }neither \\neither |neither .neither ,neither ;neither :neither ?neither <neither >neither `neither ~neither /neither'
  - '!nei @nei #nei $nei %nei ^nei &nei *nei )nei _nei =nei +nei ]nei }nei \\nei |nei .nei ,nei ;nei :nei ?nei <nei >nei ?nei `nei ~nei /nei'
  - xfail: contraction following special characters is ignored

- - '(nei [nei {nei ''nei "nei -nei'
  - '(;nei [;nei {;nei '';nei ";nei -;nei'
  - xfail: ...

- - '!nei @nei #nei $nei %nei ^nei &nei *nei )nei _nei =nei +nei ]nei }nei \\nei |nei .nei ,nei ;nei :nei ?nei <nei >nei ?nei `nei ~nei /nei'
  - '!;nei @;nei #;nei $;nei %;nei ^;nei &;nei *;nei );nei _;nei =;nei +;nei ];nei };nei \\;nei |;nei .;nei ,;nei ;;nei :;nei ?;nei <;nei >;nei `;nei ~;nei /;nei'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-neither xl-([{''"neither xl/-neither xl$-neither'
  - 'xl-nei xl-([{''"nei xl/-nei xl$-nei'
  - xfail: ...

- - 'xl(neither xl[neither xl{neither xl''neither xl"neither xl-=([{''"neither'
  - 'xl(nei xl[nei xl{nei xl''nei xl"nei xl-=([{''"nei'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'neither) neither] neither} neither'' neither" neither- neither, neither. neither; neither: neither? neither!'
  - 'nei) nei] nei} nei'' nei" nei- nei, nei. nei; nei: nei? nei!'
  - xfail: ...

- - 'neither@ neither# neither$ neither% neither^ neither& neither* neither( neither_ neither= neither+ neither[ neither{ neither\\ neither| neither< neither> neither` neither~ neither/'
  - 'nei@ nei# nei$ nei% nei^ nei& nei* nei( nei_ nei= nei+ nei[ nei{ nei\\ nei| nei< nei> nei` nei~ nei/'
  - xfail: contraction followed by special characters is ignored

- - 'nei) nei] nei} nei'' nei" nei- nei, nei. nei; nei: nei? nei!'
  - ';nei) ;nei] ;nei} ;nei'' ;nei" ;nei- ;nei, ;nei. ;nei; ;nei: ;nei? ;nei!'
  - xfail: ...

- - 'nei@ nei# nei$ nei% nei^ nei& nei* nei( nei_ nei= nei+ nei[ nei{ nei\\ nei| nei< nei> nei` nei~ nei/'
  - ';nei@ ;nei# ;nei$ ;nei% ;nei^ ;nei& ;nei* ;nei( ;nei_ ;nei= ;nei+ ;nei[ ;nei{ ;nei\\ ;nei| ;nei< ;nei> ;nei` ;nei~ ;nei/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'neither-xl neither-([{''"xl neither-/xl neither-$xl'
  - 'nei-xl nei-([{''"xl nei-/xl nei-$xl'
  - xfail: ...

- - 'neither(xl neither[xl neither{xl neither''xl neither"xl neither=([{''"-xl neither([{''"-xl neither/-xl neither$-xl'
  - 'nei(xl nei[xl nei{xl nei''xl nei"xl nei=([{''"-xl nei([{''"-xl nei/-xl nei$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(neithers [neithers {neithers ''neithers "neithers -neithers'
  - '(neis [neis {neis ''neis "neis -neis'
  - xfail: ...

- - '!neithers @neithers #neithers $neithers %neithers ^neithers &neithers *neithers )neithers _neithers =neithers +neithers ]neithers }neithers \\neithers |neithers .neithers ,neithers ;neithers :neithers ?neithers <neithers >neithers `neithers ~neithers /neithers'
  - '!neis @neis #neis $neis %neis ^neis &neis *neis )neis _neis =neis +neis ]neis }neis \\neis |neis .neis ,neis ;neis :neis ?neis <neis >neis ?neis `neis ~neis /neis'
  - xfail: contraction following special characters is ignored

- - 'neis  (neis [neis {neis ''neis "neis -neis !neis @neis #neis $neis %neis ^neis &neis *neis )neis _neis =neis +neis ]neis }neis \\neis |neis .neis ,neis ;neis :neis ?neis <neis >neis ?neis `neis ~neis /neis'
  - ';neis  (;neis [;neis {;neis '';neis ";neis -;neis !;neis @;neis #;neis $;neis %;neis ^;neis &;neis *;neis );neis _;neis =;neis +;neis ];neis };neis \\;neis |;neis .;neis ,;neis ;;neis :;neis ?;neis <;neis >;neis `;neis ~;neis /;neis'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-neithers xl-([{''"neithers xl/-neithers xl$-neithers'
  - 'xl-neis xl-([{''"neis xl/-neis xl$-neis'
  - xfail: ...

- - 'xl(neithers xl[neithers xl{neithers xl''neithers xl"neithers xl-=([{''"neithers'
  - 'xl(neis xl[neis xl{neis xl''neis xl"neis xl-=([{''"neis'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'neithers) neithers] neithers} neithers'' neithers" neithers- neithers, neithers. neithers; neithers: neithers? neithers!'
  - 'neis) neis] neis} neis'' neis" neis- neis, neis. neis; neis: neis? neis!'
  - xfail: ...

- - 'neithers@ neithers# neithers$ neithers% neithers^ neithers& neithers* neithers( neithers_ neithers= neithers+ neithers[ neithers{ neithers\\ neithers| neithers< neithers> neithers` neithers~ neithers/'
  - 'neis@ neis# neis$ neis% neis^ neis& neis* neis( neis_ neis= neis+ neis[ neis{ neis\\ neis| neis< neis> neis` neis~ neis/'
  - xfail: contraction followed by special characters is ignored

- - 'neis) neis] neis} neis'' neis" neis- neis, neis. neis; neis: neis? neis! neis@ neis# neis$ neis% neis^ neis& neis* neis( neis_ neis= neis+ neis[ neis{ neis\\ neis| neis< neis> neis` neis~ neis/'
  - ';neis) ;neis] ;neis} ;neis'' ;neis" ;neis- ;neis, ;neis. ;neis; ;neis: ;neis? ;neis! ;neis@ ;neis# ;neis$ ;neis% ;neis^ ;neis& ;neis* ;neis( ;neis_ ;neis= ;neis+ ;neis[ ;neis{ ;neis\\ ;neis| ;neis< ;neis> ;neis` ;neis~ ;neis/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'neithers-xl neithers-([{''"xl neithers-/xl neithers-$xl'
  - 'neis-xl neis-([{''"xl neis-/xl neis-$xl'
  - xfail: ...

- - 'neithers(xl neithers[xl neithers{xl neithers''xl neithers"xl neithers=([{''"-xl neithers([{''"-xl neithers/-xl neithers$-xl'
  - 'neis(xl neis[xl neis{xl neis''xl neis"xl neis=([{''"-xl neis([{''"-xl neis/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(newsletter [newsletter {newsletter ''newsletter "newsletter -newsletter'
  - '(newslr [newslr {newslr ''newslr "newslr -newslr'
  - xfail: ...

- - '!newsletter @newsletter #newsletter $newsletter %newsletter ^newsletter &newsletter *newsletter )newsletter _newsletter =newsletter +newsletter ]newsletter }newsletter \\newsletter |newsletter .newsletter ,newsletter ;newsletter :newsletter ?newsletter'
  - '!newslr @newslr #newslr $newslr %newslr ^newslr &newslr *newslr )newslr _newslr =newslr +newslr ]newslr }newslr \\newslr |newslr .newslr ,newslr ;newslr :newslr ?newslr'
  - xfail: contraction following special characters is ignored

- - '<newsletter >newsletter `newsletter ~newsletter /newsletter'
  - '<newslr >newslr `newslr ~newslr /newslr'
  - xfail: contraction following special characters is ignored

- - '(newslr [newslr {newslr ''newslr "newslr -newslr'
  - '(;newslr [;newslr {;newslr '';newslr ";newslr -;newslr'
  - xfail: ...

- - '!newslr @newslr #newslr $newslr %newslr ^newslr &newslr *newslr )newslr _newslr =newslr +newslr ]newslr }newslr \\newslr |newslr .newslr ,newslr ;newslr :newslr ?newslr <newslr >newslr ?newslr `newslr ~newslr /newslr'
  - '!;newslr @;newslr #;newslr $;newslr %;newslr ^;newslr &;newslr *;newslr );newslr _;newslr =;newslr +;newslr ];newslr };newslr \\;newslr |;newslr .;newslr ,;newslr ;;newslr :;newslr ?;newslr <;newslr >;newslr `;newslr ~;newslr /;newslr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-newsletter xl-([{''"newsletter l/-newsletter l$-newsletter'
  - 'xl-newslr xl-([{''"newslr l/-newslr l$-newslr'
  - xfail: ...

- - 'xl(newsletter xl[newsletter xl{newsletter xl''newsletter xl"newsletter xl-=([{''"newsletter'
  - 'xl(newslr xl[newslr xl{newslr xl''newslr xl"newslr xl-=([{''"newslr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'newsletter) newsletter] newsletter} newsletter'' newsletter" newsletter- newsletter, newsletter. newsletter; newsletter: newsletter? newsletter!'
  - 'newslr) newslr] newslr} newslr'' newslr" newslr- newslr, newslr. newslr; newslr: newslr? newslr!'
  - xfail: ...

- - 'newsletter@ newsletter# newsletter$ newsletter% newsletter^ newsletter& newsletter* newsletter( newsletter_ newsletter= newsletter+ newsletter[ newsletter{ newsletter\\ newsletter| newsletter< newsletter> newsletter` newslrogeth'
  - 'newslr@ newslr# newslr$ newslr% newslr^ newslr& newslr* newslr( newslr_ newslr= newslr+ newslr[ newslr{ newslr\\ newslr| newslr< newslr> newslr` newslr~ newslr/'
  - xfail: contraction followed by special characters is ignored

- - 'newslr) newslr] newslr} newslr'' newslr" newslr- newslr, newslr. newslr; newslr: newslr? newslr!'
  - ';newslr) ;newslr] ;newslr} ;newslr'' ;newslr" ;newslr- ;newslr, ;newslr. ;newslr; ;newslr: ;newslr? ;newslr!'
  - xfail: ...

- - 'newslr@ newslr# newslr$ newslr% newslr^ newslr& newslr* newslr( newslr_ newslr= newslr+ newslr[ newslr{ newslr\\ newslr| newslr< newslr> newslr` newslr~ newslr/'
  - ';newslr@ ;newslr# ;newslr$ ;newslr% ;newslr^ ;newslr& ;newslr* ;newslr( ;newslr_ ;newslr= ;newslr+ ;newslr[ ;newslr{ ;newslr\\ ;newslr| ;newslr< ;newslr> ;newslr` ;newslr~ ;newslr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'newsletter-xl newsletter-([{''"xl newsletter-/xl newsletter-$xl'
  - 'newslr-xl newslr-([{''"xl newslr-/xl newslr-$xl'
  - xfail: ...

- - 'newsletter(xl newsletter[xl newsletter{xl newsletter''xl newsletter"xl newsletter=([{''"-xl newsletter([{''"-xl newsletter/-xl newsletter$-xl'
  - 'newslr(xl newslr[xl newslr{xl newslr''xl newslr"xl newslr=([{''"-xl newslr([{''"-xl newslr/-xl newslr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(newsletters [newsletters {newsletters ''newsletters "newsletters -newsletters'
  - '(newslrs [newslrs {newslrs ''newslrs "newslrs -newslrs'
  - xfail: ...

- - '!newsletters @newsletters #newsletters $newsletters %newsletters ^newsletters &newsletters *newsletters )newsletters _newsletters =newsletters +newsletters ]newsletters }newsletters \\newsletters |newsletters .newsletters ,newsletters ;newsletters :newsletters'
  - '!newslrs @newslrs #newslrs $newslrs %newslrs ^newslrs &newslrs *newslrs )newslrs _newslrs =newslrs +newslrs ]newslrs }newslrs \\newslrs |newslrs .newslrs ,newslrs ;newslrs :newslrs'
  - xfail: contraction following special characters is ignored

- - '?newsletters <newsletters >newsletters `newsletters ~newsletters /newsletters'
  - '?newslrs <newslrs >newslrs `newslrs ~newslrs /newslrs'
  - xfail: contraction following special characters is ignored

- - 'newslrs (newslrs [newslrs {newslrs ''newslrs "newslrs -newslrs !newslrs @newslrs #newslrs $newslrs %newslrs ^newslrs &newslrs *newslrs )newslrs _newslrs =newslrs +newslrs ]newslrs }newslrs \\newslrs |newslrs .newslrs ,newslrs ;newslrs :newslrs ?newslrs <newslrs >'
  - ';newslrs (;newslrs [;newslrs {;newslrs '';newslrs ";newslrs -;newslrs !;newslrs @;newslrs #;newslrs $;newslrs %;newslrs ^;newslrs &;newslrs *;newslrs );newslrs _;newslrs =;newslrs +;newslrs ];newslrs };newslrs \\;newslrs |;newslrs .;newslrs ,;newslrs ;;newslrs :;'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-newsletters xl-([{''"newsletters l/-newsletters l$-newsletters'
  - 'xl-newslrs xl-([{''"newslrs l/-newslrs l$-newslrs'
  - xfail: ...

- - 'xl(newsletters xl[newsletters xl{newsletters xl''newsletters xl"newsletters xl-=([{''"newsletters'
  - 'xl(newslrs xl[newslrs xl{newslrs xl''newslrs xl"newslrs xl-=([{''"newslrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'newsletters) newsletters] newsletters} newsletters'' newsletters" newsletters- newsletters, newsletters. newsletters; newsletters: newsletters? newsletters!'
  - 'newslrs) newslrs] newslrs} newslrs'' newslrs" newslrs- newslrs, newslrs. newslrs; newslrs: newslrs? newslrs!'
  - xfail: ...

- - 'newsletters@ newsletters# newsletters$ newsletters% newsletters^ newsletters& newsletters* newsletters( newsletters_ newsletters= newsletters+ newsletters[ newsletters{ newsletters\\ newsletters| newsletters< newsletters> newsletters` newslrogeth'
  - 'newslrs@ newslrs# newslrs$ newslrs% newslrs^ newslrs& newslrs* newslrs( newslrs_ newslrs= newslrs+ newslrs[ newslrs{ newslrs\\ newslrs| newslrs< newslrs> newslrs` newslrs~ newslrs/'
  - xfail: contraction followed by special characters is ignored

- - 'newslrs) newslrs] newslrs} newslrs'' newslrs" newslrs- newslrs, newslrs. newslrs; newslrs: newslrs? newslrs! newslrs@ newslrs# newslrs$ newslrs% newslrs^ newslrs& newslrs* newslrs( newslrs_ newslrs= newslrs+ newslrs[ newslrs{ newslrs\\ newslrs| newslrs< newslrs>'
  - ';newslrs) ;newslrs] ;newslrs} ;newslrs'' ;newslrs" ;newslrs- ;newslrs, ;newslrs. ;newslrs; ;newslrs: ;newslrs? ;newslrs! ;newslrs@ ;newslrs# ;newslrs$ ;newslrs% ;newslrs^ ;newslrs& ;newslrs* ;newslrs( ;newslrs_ ;newslrs= ;newslrs+ ;newslrs[ ;newslrs{ ;newslrs\\ ;'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'newsletters-xl newsletters-([{''"xl newsletters-/xl newsletters-$xl'
  - 'newslrs-xl newslrs-([{''"xl newslrs-/xl newslrs-$xl'
  - xfail: ...

- - 'newsletters(xl newsletters[xl newsletters{xl newsletters''xl newsletters"xl newsletters=([{''"-xl newsletters([{''"-xl newsletters/-xl newsletters$-xl'
  - 'newslrs(xl newslrs[xl newslrs{xl newslrs''xl newslrs"xl newslrs=([{''"-xl newslrs([{''"-xl newslrs/-xl newslrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(not [not {not ''not "not -not'
  - '(n [n {n ''n "n -n'
  - xfail: ...

- - '!not @not #not $not %not ^not &not *not )not _not =not +not ]not }not \\not |not .not ,not ;not :not ?not <not >not `not ~not /not'
  - '!n @n #n $n %n ^n &n *n )n _n =n +n ]n }n \\n |n .n ,n ;n :n ?n <n >n `n ~n /n'
  - xfail: contraction following special characters is ignored

- - '(n [n {n ''n "n -n'
  - '(;n [;n {;n '';n ";n -;n'
  - xfail: ...

- - '!n @n #n $n %n ^n &n *n )n _n =n +n ]n }n \\n |n .n ,n ;n :n ?n <n >n `n ~n /n'
  - '!;n @;n #;n $;n %;n ^;n &;n *;n );n _;n =;n +;n ];n };n \\;n |;n .;n ,;n ;;n :;n ?;n <;n >;n `;n ~;n /;n'
  - xfail: non-contraction following special characters has a nissing grade 1 indicator

- - 'xl-not xl-([{''"not xl/-not xl$-not'
  - 'xl-n xl-([{''"n xl/-n xl$-n'
  - xfail: ...

- - 'xl(not xl[not xl{not xl''not xl"not xl-=([{''"not'
  - 'xl(n xl[n xl{n xl''n xl"n xl-=([{''"n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'not) not] not} not'' not" not- not, not. not; not: not? not!'
  - 'n) n] n} n'' n" n- n, n. n; n: n? n!'
  - xfail: ...

- - 'not@ not# not$ not% not^ not& not* not( not_ not= not+ not[ not{ not\\ not| not< not> not` not~ not/'
  - 'n@ n# n$ n% n^ n& n* n( n_ n= n+ n[ n{ n\\ n| n< n> n` n~ n/'
  - xfail: contraction followed by special characters is ignored

- - 'n) n] n} n'' n" n- n, n. n; n: n? n!'
  - ';n) ;n] ;n} ;n'' ;n" ;n- ;n, ;n. ;n; ;n: ;n? ;n!'
  - xfail: ...

- - 'n@ n# n$ n% n^ n& n* n( n_ n= n+ n[ n{ n\\ n| n< n> n` n~ n/'
  - ';n@ ;n# ;n$ ;n% ;n^ ;n& ;n* ;n( ;n_ ;n= ;n+ ;n[ ;n{ ;n\\ ;n| ;n< ;n> ;n` ;n~ ;n/'
  - xfail: non-contraction following special characters has a nissing grade 1 indicator

- - 'not-xl not-([{''"xl not-/xl not-$xl'
  - 'n-xl n-([{''"xl n-/xl n-$xl'
  - xfail: ...

- - 'not(xl not[xl not{xl not''xl not"xl not=([{''"-xl not([{''"-xl not/-xl not$-xl'
  - 'n(xl n[xl n{xl n''xl n"xl n=([{''"-xl n([{''"-xl n/-xl n$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(oneself [oneself {oneself ''oneself "oneself -oneself'
  - '("of ["of {"of ''"of ""of -"of'
  - xfail: ...

- - '!oneself @oneself #oneself $oneself %oneself ^oneself &oneself *oneself )oneself _oneself =oneself +oneself ]oneself }oneself \\oneself |oneself .oneself ,oneself ;oneself :oneself ?oneself <themselv'
  - '!"of @"of #"of $"of %"of ^"of &"of *"of )"of _"of ="of +"of ]"of }"of \\"of |"of ."of ,"of ;"of :"of ?"of <"of >"of `"of ~"of /"of'
  - xfail: contraction following special characters is ignored

- - '(onef [onef {onef ''onef "onef -onef'
  - '(onef [onef {onef ''onef "onef -onef'
  - xfail: ...

- - '!onef @onef #onef $onef %onef ^onef &onef *onef )onef _onef =onef +onef ]onef }onef \\onef |onef .onef ,onef ;onef :onef ?onef <onef >onef `onef ~onef /onef'
  - '!onef @onef #onef $onef %onef ^onef &onef *onef )onef _onef =onef +onef ]onef }onef \\onef |onef .onef ,onef ;onef :onef ?onef <onef >onef `onef ~onef /onef'
  - xfail: non-contraction following special characters thyyself a missing grade " indicator

- - 'xl-oneself xl-([{''"oneself xl/-oneself xl$-oneself'
  - 'xl-"of xl-([{''""of xl/-"of xl$-"of'
  - xfail: ...

- - 'xl(oneself xl[oneself xl{oneself xl''oneself xl"oneself xl-=([{''"oneself'
  - 'xl("of xl["of xl{"of xl''"of xl""of xl-=([{''""of'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'oneself) oneself] oneself} oneself'' oneself" oneself- oneself, oneself. oneself; oneself: oneself? oneself!'
  - '"of) "of] "of} "of'' "of" "of- "of, "of. "of; "of: "of? "of!'
  - xfail: ...

- - 'oneself@ oneself# oneself$ oneself% oneself^ oneself& oneself* oneself( oneself_ oneself= oneself+ oneself[ oneself{ oneself\\ oneself| oneself< oneself> oneself` oneself~ oneself/'
  - '"of@ "of# "of$ "of% "of^ "of& "of* "of( "of_ "of= "of+ "of[ "of{ "of\\ "of| "of< "of> "of` "of~ "of/'
  - xfail: contraction followed by special characters is ignored

- - 'onef) onef] onef} onef'' onef" onef- onef, onef. onef; onef: onef? onef!'
  - 'onef) onef] onef} onef'' onef" onef- onef, onef. onef; onef: onef? onef!'
  - xfail: ...

- - 'onef@ onef# onef$ onef% onef^ onef& onef* onef( onef_ onef= onef+ onef[ onef{ onef\\ onef| onef< onef> onef` onef~ onef/'
  - 'onef@ onef# onef$ onef% onef^ onef& onef* onef( onef_ onef= onef+ onef[ onef{ onef\\ onef| onef< onef> onef` onef~ onef/'
  - xfail: non-contraction following special characters thyyself a missing grade " indicator

- - 'oneself-xl oneself-([{''"xl oneself-/xl oneself-$xl'
  - '"of-xl "of-([{''"xl "of-/xl "of-$xl'
  - xfail: ...

- - 'oneself(xl oneself[xl oneself{xl oneself''xl oneself"xl oneself=([{''"-xl oneself([{''"-xl oneself/-xl oneself$-xl'
  - '"of(xl "of[xl "of{xl "of''xl "of"xl "of=([{''"-xl "of([{''"-xl "of/-xl "of$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(oneselfs [oneselfs {oneselfs ''oneselfs "oneselfs -oneselfs'
  - '("ofs ["ofs {"ofs ''"ofs ""ofs -"ofs'
  - xfail: ...

- - '!oneselfs @oneselfs #oneselfs $oneselfs %oneselfs ^oneselfs &oneselfs *oneselfs )oneselfs _oneselfs =oneselfs +oneselfs ]oneselfs }oneselfs \\oneselfs |oneselfs .oneselfs ,oneselfs ;oneselfs :oneselfs ?'
  - '!"ofs @"ofs #"ofs $"ofs %"ofs ^"ofs &"ofs *"ofs )"ofs _"ofs ="ofs +"ofs ]"ofs }"ofs \\"ofs |"ofs ."ofs ,"ofs ;"ofs :"ofs ?"ofs <"ofs >"ofs `"ofs ~"ofs /"ofs'
  - xfail: contraction following special characters is ignored

- - 'onefs (onefs [onefs {onefs ''onefs "onefs -onefs !onefs @onefs #onefs $onefs %onefs ^onefs &onefs *onefs )onefs _onefs =onefs +onefs ]onefs }onefs \\onefs |onefs .onefs ,onefs ;onefs :onefs ?onefs <onefs >'
  - 'onefs (onefs [onefs {onefs ''onefs "onefs -onefs !onefs @onefs #onefs $onefs %onefs ^onefs &onefs *onefs )onefs _onefs =onefs +onefs ]onefs }onefs \\onefs |onefs .onefs ,onefs ;onefs :onefs ?onefs <onefs >'
  - xfail: non-contraction following special characters thyyselfs a missing grade " indicator

- - 'xl-oneselfs xl-([{''"oneselfs xl/-oneselfs xl$-oneselfs'
  - 'xl-"ofs xl-([{''""ofs xl/-"ofs xl$-"ofs'
  - xfail: ...

- - 'xl(oneselfs xl[oneselfs xl{oneselfs xl''oneselfs xl"oneselfs xl-=([{''"oneselfs'
  - 'xl("ofs xl["ofs xl{"ofs xl''"ofs xl""ofs xl-=([{''""ofs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'oneselfs) oneselfs] oneselfs} oneselfs'' oneselfs" oneselfs- oneselfs, oneselfs. oneselfs; oneselfs: oneselfs? oneselfs!'
  - '"ofs) "ofs] "ofs} "ofs'' "ofs" "ofs- "ofs, "ofs. "ofs; "ofs: "ofs? "ofs!'
  - xfail: ...

- - 'oneselfs@ oneselfs# oneselfs$ oneselfs% oneselfs^ oneselfs& oneselfs* oneselfs( oneselfs_ oneselfs= oneselfs+ oneselfs[ oneselfs{ oneselfs\\ oneselfs| oneselfs< oneselfs> oneselfs` oneselfs~ oneselfs/'
  - '"ofs@ "ofs# "ofs$ "ofs% "ofs^ "ofs& "ofs* "ofs( "ofs_ "ofs= "ofs+ "ofs[ "ofs{ "ofs\\ "ofs| "ofs< "ofs> "ofs` "ofs~ "ofs/'
  - xfail: contraction followed by special characters is ignored

- - 'onefs) onefs] onefs} onefs'' onefs" onefs- onefs, onefs. onefs; onefs: onefs? onefs! onefs@ onefs# onefs$ onefs% onefs^ onefs& onefs* onefs( onefs_ onefs= onefs+ onefs[ onefs{ onefs\\ onefs| onefs< onefs>'
  - 'onefs) onefs] onefs} onefs'' onefs" onefs- onefs, onefs. onefs; onefs: onefs? onefs! onefs@ onefs# onefs$ onefs% onefs^ onefs& onefs* onefs( onefs_ onefs= onefs+ onefs[ onefs{ onefs\\ onefs| onefs< onefs>'
  - xfail: non-contraction following special characters thyyselfs a missing grade " indicator

- - 'oneselfs-xl oneselfs-([{''"xl oneselfs-/xl oneselfs-$xl'
  - '"ofs-xl "ofs-([{''"xl "ofs-/xl "ofs-$xl'
  - xfail: ...

- - 'oneselfs(xl oneselfs[xl oneselfs{xl oneselfs''xl oneselfs"xl oneselfs=([{''"-xl oneselfs([{''"-xl oneselfs/-xl oneselfs$-xl'
  - '"ofs(xl "ofs[xl "ofs{xl "ofs''xl "ofs"xl "ofs=([{''"-xl "ofs([{''"-xl "ofs/-xl "ofs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(ourselves [ourselves {ourselves ''ourselves "ourselves -ourselves'
  - '(|rvs [|rvs {|rvs ''|rvs "|rvs -|rvs'
  - xfail: ...

- - '!ourselves @ourselves #ourselves $ourselves %ourselves ^ourselves &ourselves *ourselves )ourselves _ourselves =ourselves +ourselves ]ourselves }ourselves \\ourselves |ourselves .ourselves ,ourselves ;ourselves :ourselves ?ourselves <ourselv'
  - '!|rvs @|rvs #|rvs $|rvs %|rvs ^|rvs &|rvs *|rvs )|rvs _|rvs =|rvs +|rvs ]|rvs }|rvs \\|rvs ||rvs .|rvs ,|rvs ;|rvs :|rvs ?|rvs <|rvs >|rvs `|rvs ~|rvs /|rvs'
  - xfail: contraction following special characters is ignored

- - '(ourvs [ourvs {ourvs ''ourvs "ourvs -ourvs'
  - '(ourvs [ourvs {ourvs ''ourvs "ourvs -ourvs'
  - xfail: ...

- - '!ourvs @ourvs #ourvs $ourvs %ourvs ^ourvs &ourvs *ourvs )ourvs _ourvs =ourvs +ourvs ]ourvs }ourvs \\ourvs |ourvs .ourvs ,ourvs ;ourvs :ourvs ?ourvs <ourvs >ourvs `ourvs ~ourvs /ourvs'
  - '!ourvs @ourvs #ourvs $ourvs %ourvs ^ourvs &ourvs *ourvs )ourvs _ourvs =ourvs +ourvs ]ourvs }ourvs \\ourvs |ourvs .ourvs ,ourvs ;ourvs :ourvs ?ourvs <ourvs >ourvs `ourvs ~ourvs /ourvs'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-ourselves xl-([{''"ourselves l/-ourselves l$-ourselves'
  - 'xl-|rvs xl-([{''"|rvs l/-|rvs l$-|rvs'
  - xfail: ...

- - 'xl(ourselves xl[ourselves xl{ourselves xl''ourselves xl"ourselves xl-=([{''"ourselves'
  - 'xl(|rvs xl[|rvs xl{|rvs xl''|rvs xl"|rvs xl-=([{''"|rvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ourselves) ourselves] ourselves} ourselves'' ourselves" ourselves- ourselves, ourselves. ourselves; ourselves: ourselves? ourselves!'
  - '|rvs) |rvs] |rvs} |rvs'' |rvs" |rvs- |rvs, |rvs. |rvs; |rvs: |rvs? |rvs!'
  - xfail: ...

- - 'ourselves@ ourselves# ourselves$ ourselves% ourselves^ ourselves& ourselves* ourselves( ourselves_ ourselves= ourselves+ ourselves[ ourselves{ ourselves\\ ourselves| ourselves< ourselves> ourselves` ourselves~ ourselves/'
  - '|rvs@ |rvs# |rvs$ |rvs% |rvs^ |rvs& |rvs* |rvs( |rvs_ |rvs= |rvs+ |rvs[ |rvs{ |rvs\\ |rvs| |rvs< |rvs> |rvs` |rvs~ |rvs/'
  - xfail: contraction followed by special characters is ignored

- - 'ourvs) ourvs] ourvs} ourvs'' ourvs" ourvs- ourvs, ourvs. ourvs; ourvs: ourvs? ourvs!'
  - 'ourvs) ourvs] ourvs} ourvs'' ourvs" ourvs- ourvs, ourvs. ourvs; ourvs: ourvs? ourvs!'
  - xfail: ...

- - 'ourvs@ ourvs# ourvs$ ourvs% ourvs^ ourvs& ourvs* ourvs( ourvs_ ourvs= ourvs+ ourvs[ ourvs{ ourvs\\ ourvs| ourvs< ourvs> ourvs` ourvs~ ourvs/'
  - 'ourvs@ ourvs# ourvs$ ourvs% ourvs^ ourvs& ourvs* ourvs( ourvs_ ourvs= ourvs+ ourvs[ ourvs{ ourvs\\ ourvs| ourvs< ourvs> ourvs` ourvs~ ourvs/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'ourselves-xl ourselves-([{''"xl ourselves-/xl ourselves-$xl'
  - '|rvs-xl |rvs-([{''"xl |rvs-/xl |rvs-$xl'
  - xfail: ...

- - 'ourselves(xl ourselves[xl ourselves{xl ourselves''xl ourselves"xl ourselves=([{''"-xl ourselves([{''"-xl ourselves/-xl ourselves$-xl'
  - '|rvs(xl |rvs[xl |rvs{xl |rvs''xl |rvs"xl |rvs=([{''"-xl |rvs([{''"-xl |rvs/-xl |rvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(ourselvess [ourselvess {ourselvess ''ourselvess "ourselvess -ourselvess'
  - '(|rvss [|rvss {|rvss ''|rvss "|rvss -|rvss'
  - xfail: ...

- - '!ourselvess @ourselvess #ourselvess $ourselvess %ourselvess ^ourselvess &ourselvess *ourselvess )ourselvess _ourselvess =ourselvess +ourselvess ]ourselvess }ourselvess \\ourselvess |ourselvess .ourselvess ,ourselvess ;ourselvess :ourselvess ?'
  - '!|rvss @|rvss #|rvss $|rvss %|rvss ^|rvss &|rvss *|rvss )|rvss _|rvss =|rvss +|rvss ]|rvss }|rvss \\|rvss ||rvss .|rvss ,|rvss ;|rvss :|rvss ?|rvss <|rvss >|rvss `|rvss ~|rvss /|rvss'
  - xfail: contraction following special characters is ignored

- - 'ourvss (ourvss [ourvss {ourvss ''ourvss "ourvss -ourvss !ourvss @ourvss #ourvss $ourvss %ourvss ^ourvss &ourvss *ourvss )ourvss _ourvss =ourvss +ourvss ]ourvss }ourvss \\ourvss |ourvss .ourvss ,ourvss ;ourvss :ourvss ?ourvss <ourvss >'
  - 'ourvss (ourvss [ourvss {ourvss ''ourvss "ourvss -ourvss !ourvss @ourvss #ourvss $ourvss %ourvss ^ourvss &ourvss *ourvss )ourvss _ourvss =ourvss +ourvss ]ourvss }ourvss \\ourvss |ourvss .ourvss ,ourvss ;ourvss :ourvss ?ourvss <ourvss >'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-ourselvess xl-([{''"ourselvess l/-ourselvess l$-ourselvess'
  - 'xl-|rvss xl-([{''"|rvss l/-|rvss l$-|rvss'
  - xfail: ...

- - 'xl(ourselvess xl[ourselvess xl{ourselvess xl''ourselvess xl"ourselvess xl-=([{''"ourselvess'
  - 'xl(|rvss xl[|rvss xl{|rvss xl''|rvss xl"|rvss xl-=([{''"|rvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ourselvess) ourselvess] ourselvess} ourselvess'' ourselvess" ourselvess- ourselvess, ourselvess. ourselvess; ourselvess: ourselvess? ourselvess!'
  - '|rvss) |rvss] |rvss} |rvss'' |rvss" |rvss- |rvss, |rvss. |rvss; |rvss: |rvss? |rvss!'
  - xfail: ...

- - 'ourselvess@ ourselvess# ourselvess$ ourselvess% ourselvess^ ourselvess& ourselvess* ourselvess( ourselvess_ ourselvess= ourselvess+ ourselvess[ ourselvess{ ourselvess\\ ourselvess| ourselvess< ourselvess> ourselvess` ourselvess~ ourselvess/'
  - '|rvss@ |rvss# |rvss$ |rvss% |rvss^ |rvss& |rvss* |rvss( |rvss_ |rvss= |rvss+ |rvss[ |rvss{ |rvss\\ |rvss| |rvss< |rvss> |rvss` |rvss~ |rvss/'
  - xfail: contraction followed by special characters is ignored

- - 'ourvss) ourvss] ourvss} ourvss'' ourvss" ourvss- ourvss, ourvss. ourvss; ourvss: ourvss? ourvss! ourvss@ ourvss# ourvss$ ourvss% ourvss^ ourvss& ourvss* ourvss( ourvss_ ourvss= ourvss+ ourvss[ ourvss{ ourvss\\ ourvss| ourvss< ourvss>'
  - 'ourvss) ourvss] ourvss} ourvss'' ourvss" ourvss- ourvss, ourvss. ourvss; ourvss: ourvss? ourvss! ourvss@ ourvss# ourvss$ ourvss% ourvss^ ourvss& ourvss* ourvss( ourvss_ ourvss= ourvss+ ourvss[ ourvss{ ourvss\\ ourvss| ourvss< ourvss>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'ourselvess-xl ourselvess-([{''"xl ourselvess-/xl ourselvess-$xl'
  - '|rvss-xl |rvss-([{''"xl |rvss-/xl |rvss-$xl'
  - xfail: ...

- - 'ourselvess(xl ourselvess[xl ourselvess{xl ourselvess''xl ourselvess"xl ourselvess=([{''"-xl ourselvess([{''"-xl ourselvess/-xl ourselvess$-xl'
  - '|rvss(xl |rvss[xl |rvss{xl |rvss''xl |rvss"xl |rvss=([{''"-xl |rvss([{''"-xl |rvss/-xl |rvss$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(out [out {out ''out "out -out'
  - '(| [| {| ''| "| -|'
  - xfail: ...

- - '!out @out #out $out %out ^out &out *out )out _out =out +out ]out }out \\out |out .out ,out ;out :out ?out <out >out `out ~out /out'
  - '!| @| #| $| %| ^| &| *| )| _| =| +| ]| }| \\| || .| ,| ou :| ?| <| >| `| ~| /|'
  - xfail: contraction following special characters is ignored

- - 'ou (ou [ou {ou ''ou "ou -ou !ou @ou #ou $ou |ou ^ou &ou *ou )ou _ou =ou +ou ]ou }ou \\ou |ou .ou ,ou ;ou :ou ?ou <ou >ou `ou ~ou |ou'
  - 'ou (ou [ou {ou ''ou "ou -ou !ou @ou #ou $ou |ou ^ou &ou *ou )ou _ou =ou +ou ]ou }ou \\ou |ou .ou ,ou ;ou :ou ?ou <ou >ou `ou ~ou |ou'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-out xl-([{''"out l|-out l$-out'
  - 'xl-| xl-([{''"| l|-| l$-|'
  - xfail: ...

- - 'xl(out xl[out xl{out xl''out xl"out xl-=([{''"out'
  - 'xl(| xl[| xl{| xl''| xl"| xl-=([{''"|'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'out) out] out} out'' out" out- out, out. out; out: out? out!'
  - '|) |] |} |'' |" |- |, |. |; |: |? |!'
  - xfail: ...

- - 'out@ out# out$ out% out^ out& out* out( out_ out= out+ out[ out{ out\\ out| out< out> out` out~ out/'
  - '|@ |# |$ |% |^ |& |* |( |_ |= |+ |[ |{ |\\ || |< |> |` |~ |/'
  - xfail: contraction followed by special characters is ignored

- - 'ou) ou] ou} ou'' ou" ou- ou, ou. ou; ou: ou? ou! ou@ ou# ou$ ou| ou^ ou& ou* ou( ou_ ou= ou+ ou[ ou{ ou\\ ou| ou< ou> ou` ou~ ou|'
  - 'ou) ou] ou} ou'' ou" ou- ou, ou. ou; ou: ou? ou! ou@ ou# ou$ ou| ou^ ou& ou* ou( ou_ ou= ou+ ou[ ou{ ou\\ ou| ou< ou> ou` ou~ ou|'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'out-xl out-([{''"xl out-|l out-$xl'
  - '|-xl |-([{''"xl |-|l |-$xl'
  - xfail: ...

- - 'out(xl out[xl out{xl out''xl out"xl out=([{''"-xl out([{''"-xl out|-xl out$-xl'
  - '|(xl |[xl |{xl |''xl |"xl |=([{''"-xl |([{''"-xl ||-xl |$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(paid [paid {paid ''paid "paid -paid'
  - '(pd [pd {pd ''pd "pd -pd'
  - xfail: ...

- - '!paid @paid #paid $paid %paid ^paid &paid *paid )paid _paid =paid +paid ]paid }paid \\paid |paid .paid ,paid ;paid :paid ?paid <paid >paid `paid ~paid /paid'
  - '!pd @pd #pd $pd %pd ^pd &pd *pd )pd _pd =pd +pd ]pd }pd \\pd |pd .pd ,pd ;pd :pd ?pd <pd >pd ?pd `pd ~pd /pd'
  - xfail: contraction following special characters is ignored

- - '(pd [pd {pd ''pd "pd -pd'
  - '(;pd [;pd {;pd '';pd ";pd -;pd'
  - xfail: ...

- - '!pd @pd #pd $pd %pd ^pd &pd *pd )pd _pd =pd +pd ]pd }pd \\pd |pd .pd ,pd ;pd :pd ?pd <pd >pd ?pd `pd ~pd /pd'
  - '!;pd @;pd #;pd $;pd %;pd ^;pd &;pd *;pd );pd _;pd =;pd +;pd ];pd };pd \\;pd |;pd .;pd ,;pd ;;pd :;pd ?;pd <;pd >;pd `;pd ~;pd /;pd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-paid xl-([{''"paid l/-paid l$-paid'
  - 'xl-pd xl-([{''"pd l/-pd l$-pd'
  - xfail: ...

- - 'xl(paid xl[paid xl{paid xl''paid xl"paid xl-=([{''"paid'
  - 'xl(pd xl[pd xl{pd xl''pd xl"pd xl-=([{''"pd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'paid) paid] paid} paid'' paid" paid- paid, paid. paid; paid: paid? paid!'
  - 'pd) pd] pd} pd'' pd" pd- pd, pd. pd; pd: pd? pd!'
  - xfail: ...

- - 'paid@ paid# paid$ paid% paid^ paid& paid* paid( paid_ paid= paid+ paid[ paid{ paid\\ paid| paid< paid> paid` paid~ paid/'
  - 'pd@ pd# pd$ pd% pd^ pd& pd* pd( pd_ pd= pd+ pd[ pd{ pd\\ pd| pd< pd> pd` pd~ pd/'
  - xfail: contraction followed by special characters is ignored

- - 'pd) pd] pd} pd'' pd" pd- pd, pd. pd; pd: pd? pd!'
  - ';pd) ;pd] ;pd} ;pd'' ;pd" ;pd- ;pd, ;pd. ;pd; ;pd: ;pd? ;pd!'
  - xfail: ...

- - 'pd@ pd# pd$ pd% pd^ pd& pd* pd( pd_ pd= pd+ pd[ pd{ pd\\ pd| pd< pd> pd` pd~ pd/'
  - ';pd@ ;pd# ;pd$ ;pd% ;pd^ ;pd& ;pd* ;pd( ;pd_ ;pd= ;pd+ ;pd[ ;pd{ ;pd\\ ;pd| ;pd< ;pd> ;pd` ;pd~ ;pd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'paid-xl paid-([{''"xl paid-/xl paid-$xl'
  - 'pd-xl pd-([{''"xl pd-/xl pd-$xl'
  - xfail: ...

- - 'paid(xl paid[xl paid{xl paid''xl paid"xl paid=([{''"-xl paid([{''"-xl paid/-xl paid$-xl'
  - 'pd(xl pd[xl pd{xl pd''xl pd"xl pd=([{''"-xl pd([{''"-xl pd/-xl pd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(paids [paids {paids ''paids "paids -paids'
  - '(pds [pds {pds ''pds "pds -pds'
  - xfail: ...

- - '!paids @paids #paids $paids %paids ^paids &paids *paids )paids _paids =paids +paids ]paids }paids \\paids |paids .paids ,paids ;paids :paids ?paids <paids >paids `paids ~paids /paids'
  - '!pds @pds #pds $pds %pds ^pds &pds *pds )pds _pds =pds +pds ]pds }pds \\pds |pds .pds ,pds ;pds :pds ?pds <pds >pds ?pds `pds ~pds /pds'
  - xfail: contraction following special characters is ignored

- - 'pds  (pds [pds {pds ''pds "pds -pds !pds @pds #pds $pds %pds ^pds &pds *pds )pds _pds =pds +pds ]pds }pds \\pds |pds .pds ,pds ;pds :pds ?pds <pds >pds ?pds `pds ~pds /pds'
  - ';pds  (;pds [;pds {;pds '';pds ";pds -;pds !;pds @;pds #;pds $;pds %;pds ^;pds &;pds *;pds );pds _;pds =;pds +;pds ];pds };pds \\;pds |;pds .;pds ,;pds ;;pds :;pds ?;pds <;pds >;pds `;pds ~;pds /;pds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-paids xl-([{''"paids l/-paids l$-paids'
  - 'xl-pds xl-([{''"pds l/-pds l$-pds'
  - xfail: ...

- - 'xl(paids xl[paids xl{paids xl''paids xl"paids xl-=([{''"paids'
  - 'xl(pds xl[pds xl{pds xl''pds xl"pds xl-=([{''"pds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'paids) paids] paids} paids'' paids" paids- paids, paids. paids; paids: paids? paids!'
  - 'pds) pds] pds} pds'' pds" pds- pds, pds. pds; pds: pds? pds!'
  - xfail: ...

- - 'paids@ paids# paids$ paids% paids^ paids& paids* paids( paids_ paids= paids+ paids[ paids{ paids\\ paids| paids< paids> paids` paids~ paids/'
  - 'pds@ pds# pds$ pds% pds^ pds& pds* pds( pds_ pds= pds+ pds[ pds{ pds\\ pds| pds< pds> pds` pds~ pds/'
  - xfail: contraction followed by special characters is ignored

- - 'pds) pds] pds} pds'' pds" pds- pds, pds. pds; pds: pds? pds! pds@ pds# pds$ pds% pds^ pds& pds* pds( pds_ pds= pds+ pds[ pds{ pds\\ pds| pds< pds> pds` pds~ pds/'
  - ';pds) ;pds] ;pds} ;pds'' ;pds" ;pds- ;pds, ;pds. ;pds; ;pds: ;pds? ;pds! ;pds@ ;pds# ;pds$ ;pds% ;pds^ ;pds& ;pds* ;pds( ;pds_ ;pds= ;pds+ ;pds[ ;pds{ ;pds\\ ;pds| ;pds< ;pds> ;pds` ;pds~ ;pds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'paids-xl paids-([{''"xl paids-/xl paids-$xl'
  - 'pds-xl pds-([{''"xl pds-/xl pds-$xl'
  - xfail: ...

- - 'paids(xl paids[xl paids{xl paids''xl paids"xl paids=([{''"-xl paids([{''"-xl paids/-xl paids$-xl'
  - 'pds(xl pds[xl pds{xl pds''xl pds"xl pds=([{''"-xl pds([{''"-xl pds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(prepaid [prepaid {prepaid ''prepaid "prepaid -prepaid'
  - '(prepd [prepd {prepd ''prepd "prepd -prepd'
  - xfail: ...

- - '!prepaid @prepaid #prepaid $prepaid %prepaid ^prepaid &prepaid *prepaid )prepaid _prepaid =prepaid +prepaid ]prepaid }prepaid \\prepaid |prepaid .prepaid ,prepaid ;prepaid :prepaid ?prepaid <prepaid >prepaid `prepaid ~prepaid /prepaid'
  - '!prepd @prepd #prepd $prepd %prepd ^prepd &prepd *prepd )prepd _prepd =prepd +prepd ]prepd }prepd \\prepd |prepd .prepd ,prepd ;prepd :prepd ?prepd <prepd >prepd ?prepd `prepd ~prepd /prepd'
  - xfail: contraction following special characters is ignored

- - '(prepd [prepd {prepd ''prepd "prepd -prepd'
  - '(;prepd [;prepd {;prepd '';prepd ";prepd -;prepd'
  - xfail: ...

- - '!prepd @prepd #prepd $prepd %prepd ^prepd &prepd *prepd )prepd _prepd =prepd +prepd ]prepd }prepd \\prepd |prepd .prepd ,prepd ;prepd :prepd ?prepd <prepd >prepd ?prepd `prepd ~prepd /prepd'
  - '!;prepd @;prepd #;prepd $;prepd %;prepd ^;prepd &;prepd *;prepd );prepd _;prepd =;prepd +;prepd ];prepd };prepd \\;prepd |;prepd .;prepd ,;prepd ;;prepd :;prepd ?;prepd <;prepd >;prepd `;prepd ~;prepd /;prepd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-prepaid xl-([{''"prepaid l/-prepaid l$-prepaid'
  - 'xl-prepd xl-([{''"prepd l/-prepd l$-prepd'
  - xfail: ...

- - 'xl(prepaid xl[prepaid xl{prepaid xl''prepaid xl"prepaid xl-=([{''"prepaid'
  - 'xl(prepd xl[prepd xl{prepd xl''prepd xl"prepd xl-=([{''"prepd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'prepaid) prepaid] prepaid} prepaid'' prepaid" prepaid- prepaid, prepaid. prepaid; prepaid: prepaid? prepaid!'
  - 'prepd) prepd] prepd} prepd'' prepd" prepd- prepd, prepd. prepd; prepd: prepd? prepd!'
  - xfail: ...

- - 'prepaid@ prepaid# prepaid$ prepaid% prepaid^ prepaid& prepaid* prepaid( prepaid_ prepaid= prepaid+ prepaid[ prepaid{ prepaid\\ prepaid| prepaid< prepaid> prepaid` prepaid~ prepaid/'
  - 'prepd@ prepd# prepd$ prepd% prepd^ prepd& prepd* prepd( prepd_ prepd= prepd+ prepd[ prepd{ prepd\\ prepd| prepd< prepd> prepd` prepd~ prepd/'
  - xfail: contraction followed by special characters is ignored

- - 'prepd) prepd] prepd} prepd'' prepd" prepd- prepd, prepd. prepd; prepd: prepd? prepd!'
  - ';prepd) ;prepd] ;prepd} ;prepd'' ;prepd" ;prepd- ;prepd, ;prepd. ;prepd; ;prepd: ;prepd? ;prepd!'
  - xfail: ...

- - 'prepd@ prepd# prepd$ prepd% prepd^ prepd& prepd* prepd( prepd_ prepd= prepd+ prepd[ prepd{ prepd\\ prepd| prepd< prepd> prepd` prepd~ prepd/'
  - ';prepd@ ;prepd# ;prepd$ ;prepd% ;prepd^ ;prepd& ;prepd* ;prepd( ;prepd_ ;prepd= ;prepd+ ;prepd[ ;prepd{ ;prepd\\ ;prepd| ;prepd< ;prepd> ;prepd` ;prepd~ ;prepd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepaid-xl prepaid-([{''"xl prepaid-/xl prepaid-$xl'
  - 'prepd-xl prepd-([{''"xl prepd-/xl prepd-$xl'
  - xfail: ...

- - 'prepaid(xl prepaid[xl prepaid{xl prepaid''xl prepaid"xl prepaid=([{''"-xl prepaid([{''"-xl prepaid/-xl prepaid$-xl'
  - 'prepd(xl prepd[xl prepd{xl prepd''xl prepd"xl prepd=([{''"-xl prepd([{''"-xl prepd/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(prepaids [prepaids {prepaids ''prepaids "prepaids -prepaids'
  - '(prepds [prepds {prepds ''prepds "prepds -prepds'
  - xfail: ...

- - '!prepaids @prepaids #prepaids $prepaids %prepaids ^prepaids &prepaids *prepaids )prepaids _prepaids =prepaids +prepaids ]prepaids }prepaids \\prepaids |prepaids .prepaids ,prepaids ;prepaids :prepaids ?prepaids <prepaids >prepaids `prepaids ~prepaids /prepaids'
  - '!prepds @prepds #prepds $prepds %prepds ^prepds &prepds *prepds )prepds _prepds =prepds +prepds ]prepds }prepds \\prepds |prepds .prepds ,prepds ;prepds :prepds ?prepds <prepds >prepds ?prepds `prepds ~prepds /prepds'
  - xfail: contraction following special characters is ignored

- - 'prepds (prepds [prepds {prepds ''prepds "prepds -prepds !prepds @prepds #prepds $prepds %prepds ^prepds &prepds *prepds )prepds _prepds =prepds +prepds ]prepds }prepds \\prepds |prepds .prepds ,prepds ;prepds :prepds ?prepds <prepds'
  - ';prepds (;prepds [;prepds {;prepds '';prepds ";prepds -;prepds !;prepds @;prepds #;prepds $;prepds %;prepds ^;prepds &;prepds *;prepds );prepds _;prepds =;prepds +;prepds ];prepds };prepds \\;prepds |;prepds .;prepds ,;prepds ;;prepds :;prepds ?;prepds <;prepds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - '>prepds ?prepds `prepds ~prepds /prepds'
  - '>;prepds ?;prepds `;prepds ~;prepds /;prepds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-prepaids xl-([{''"prepaids l/-prepaids l$-prepaids'
  - 'xl-prepds xl-([{''"prepds l/-prepds l$-prepds'
  - xfail: ...

- - 'xl(prepaids xl[prepaids xl{prepaids xl''prepaids xl"prepaids xl-=([{''"prepaids'
  - 'xl(prepds xl[prepds xl{prepds xl''prepds xl"prepds xl-=([{''"prepds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'prepaids) prepaids] prepaids} prepaids'' prepaids" prepaids- prepaids, prepaids. prepaids; prepaids: prepaids? prepaids!'
  - 'prepds) prepds] prepds} prepds'' prepds" prepds- prepds, prepds. prepds; prepds: prepds? prepds!'
  - xfail: ...

- - 'prepaids@ prepaids# prepaids$ prepaids% prepaids^ prepaids& prepaids* prepaids( prepaids_ prepaids= prepaids+ prepaids[ prepaids{ prepaids\\ prepaids| prepaids< prepaids> prepaids` prepaids~ prepaids/'
  - 'prepds@ prepds# prepds$ prepds% prepds^ prepds& prepds* prepds( prepds_ prepds= prepds+ prepds[ prepds{ prepds\\ prepds| prepds< prepds> prepds` prepds~ prepds/'
  - xfail: contraction followed by special characters is ignored

- - 'prepds) prepds] prepds} prepds'' prepds" prepds- prepds, prepds. prepds; prepds: prepds? prepds! prepds@ prepds# prepds$ prepds% prepds^ prepds& prepds* prepds( prepds_ prepds= prepds+ prepds[ prepds{ prepds\\ prepds| prepds< prepds>'
  - ';prepds) ;prepds] ;prepds} ;prepds'' ;prepds" ;prepds- ;prepds, ;prepds. ;prepds; ;prepds: ;prepds? ;prepds! ;prepds@ ;prepds# ;prepds$ ;prepds% ;prepds^ ;prepds& ;prepds* ;prepds( ;prepds_ ;prepds= ;prepds+ ;prepds[ ;prepds{ ;prepds\\ ;prepds| ;prepds< ;prepds>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepds` prepds~ prepds/'
  - ';prepds` ;prepds~ ;prepds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepaids-xl prepaids-([{''"xl prepaids-/xl prepaids-$xl'
  - 'prepds-xl prepds-([{''"xl prepds-/xl prepds-$xl'
  - xfail: ...

- - 'prepaids(xl prepaids[xl prepaids{xl prepaids''xl prepaids"xl prepaids=([{''"-xl prepaids([{''"-xl prepaids/-xl prepaids$-xl'
  - 'prepds(xl prepds[xl prepds{xl prepds''xl prepds"xl prepds=([{''"-xl prepds([{''"-xl prepds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(repaid [repaid {repaid ''repaid "repaid -repaid'
  - '(repd [repd {repd ''repd "repd -repd'
  - xfail: ...

- - '!repaid @repaid #repaid $repaid %repaid ^repaid &repaid *repaid )repaid _repaid =repaid +repaid ]repaid }repaid \\repaid |repaid .repaid ,repaid ;repaid :repaid ?repaid <repaid >repaid `repaid ~repaid /repaid'
  - '!repd @repd #repd $repd %repd ^repd &repd *repd )repd _repd =repd +repd ]repd }repd \\repd |repd .repd ,repd ;repd :repd ?repd <repd >repd ?repd `repd ~repd /repd'
  - xfail: contraction following special characters is ignored

- - '(repd [repd {repd ''repd "repd -repd'
  - '(;repd [;repd {;repd '';repd ";repd -;repd'
  - xfail: ...

- - '!repd @repd #repd $repd %repd ^repd &repd *repd )repd _repd =repd +repd ]repd }repd \\repd |repd .repd ,repd ;repd :repd ?repd <repd >repd ?repd `repd ~repd /repd'
  - '!;repd @;repd #;repd $;repd %;repd ^;repd &;repd *;repd );repd _;repd =;repd +;repd ];repd };repd \\;repd |;repd .;repd ,;repd ;;repd :;repd ?;repd <;repd >;repd `;repd ~;repd /;repd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-repaid xl-([{''"repaid l/-repaid l$-repaid'
  - 'xl-repd xl-([{''"repd l/-repd l$-repd'
  - xfail: ...

- - 'xl(repaid xl[repaid xl{repaid xl''repaid xl"repaid xl-=([{''"repaid'
  - 'xl(repd xl[repd xl{repd xl''repd xl"repd xl-=([{''"repd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'repaid) repaid] repaid} repaid'' repaid" repaid- repaid, repaid. repaid; repaid: repaid? repaid!'
  - 'repd) repd] repd} repd'' repd" repd- repd, repd. repd; repd: repd? repd!'
  - xfail: ...

- - 'repaid@ repaid# repaid$ repaid% repaid^ repaid& repaid* repaid( repaid_ repaid= repaid+ repaid[ repaid{ repaid\\ repaid| repaid< repaid> repaid` repaid~ repaid/'
  - 'repd@ repd# repd$ repd% repd^ repd& repd* repd( repd_ repd= repd+ repd[ repd{ repd\\ repd| repd< repd> repd` repd~ repd/'
  - xfail: contraction followed by special characters is ignored

- - 'repd) repd] repd} repd'' repd" repd- repd, repd. repd; repd: repd? repd!'
  - ';repd) ;repd] ;repd} ;repd'' ;repd" ;repd- ;repd, ;repd. ;repd; ;repd: ;repd? ;repd!'
  - xfail: ...

- - 'repd@ repd# repd$ repd% repd^ repd& repd* repd( repd_ repd= repd+ repd[ repd{ repd\\ repd| repd< repd> repd` repd~ repd/'
  - ';repd@ ;repd# ;repd$ ;repd% ;repd^ ;repd& ;repd* ;repd( ;repd_ ;repd= ;repd+ ;repd[ ;repd{ ;repd\\ ;repd| ;repd< ;repd> ;repd` ;repd~ ;repd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'repaid-xl repaid-([{''"xl repaid-/xl repaid-$xl'
  - 'repd-xl repd-([{''"xl repd-/xl repd-$xl'
  - xfail: ...

- - 'repaid(xl repaid[xl repaid{xl repaid''xl repaid"xl repaid=([{''"-xl repaid([{''"-xl repaid/-xl repaid$-xl'
  - 'repd(xl repd[xl repd{xl repd''xl repd"xl repd=([{''"-xl repd([{''"-xl repd/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(repaids [repaids {repaids ''repaids "repaids -repaids'
  - '(repds [repds {repds ''repds "repds -repds'
  - xfail: ...

- - '!repaids @repaids #repaids $repaids %repaids ^repaids &repaids *repaids )repaids _repaids =repaids +repaids ]repaids }repaids \\repaids |repaids .repaids ,repaids ;repaids :repaids ?repaids <repaids >repaids `repaids ~repaids /repaids'
  - '!repds @repds #repds $repds %repds ^repds &repds *repds )repds _repds =repds +repds ]repds }repds \\repds |repds .repds ,repds ;repds :repds ?repds <repds >repds ?repds `repds ~repds /repds'
  - xfail: contraction following special characters is ignored

- - 'repds (repds [repds {repds ''repds "repds -repds !repds @repds #repds $repds %repds ^repds &repds *repds )repds _repds =repds +repds ]repds }repds \\repds |repds .repds ,repds ;repds :repds ?repds <repds >repds ?repds `repds ~repds /repds'
  - ';repds (;repds [;repds {;repds '';repds ";repds -;repds !;repds @;repds #;repds $;repds %;repds ^;repds &;repds *;repds );repds _;repds =;repds +;repds ];repds };repds \\;repds |;repds .;repds ,;repds ;;repds :;repds ?;repds <;repds >;repds `;repds ~;repds /;repds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-repaids xl-([{''"repaids l/-repaids l$-repaids'
  - 'xl-repds xl-([{''"repds l/-repds l$-repds'
  - xfail: ...

- - 'xl(repaids xl[repaids xl{repaids xl''repaids xl"repaids xl-=([{''"repaids'
  - 'xl(repds xl[repds xl{repds xl''repds xl"repds xl-=([{''"repds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'repaids) repaids] repaids} repaids'' repaids" repaids- repaids, repaids. repaids; repaids: repaids? repaids!'
  - 'repds) repds] repds} repds'' repds" repds- repds, repds. repds; repds: repds? repds!'
  - xfail: ...

- - 'repaids@ repaids# repaids$ repaids% repaids^ repaids& repaids* repaids( repaids_ repaids= repaids+ repaids[ repaids{ repaids\\ repaids| repaids< repaids> repaids` repaids~ repaids/'
  - 'repds@ repds# repds$ repds% repds^ repds& repds* repds( repds_ repds= repds+ repds[ repds{ repds\\ repds| repds< repds> repds` repds~ repds/'
  - xfail: contraction followed by special characters is ignored

- - 'repds) repds] repds} repds'' repds" repds- repds, repds. repds; repds: repds? repds! repds@ repds# repds$ repds% repds^ repds& repds* repds( repds_ repds= repds+ repds[ repds{ repds\\ repds| repds< repds> repds` repds~ repds/'
  - ';repds) ;repds] ;repds} ;repds'' ;repds" ;repds- ;repds, ;repds. ;repds; ;repds: ;repds? ;repds! ;repds@ ;repds# ;repds$ ;repds% ;repds^ ;repds& ;repds* ;repds( ;repds_ ;repds= ;repds+ ;repds[ ;repds{ ;repds\\ ;repds| ;repds< ;repds> ;repds` ;repds~ ;repds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'repaids-xl repaids-([{''"xl repaids-/xl repaids-$xl'
  - 'repds-xl repds-([{''"xl repds-/xl repds-$xl'
  - xfail: ...

- - 'repaids(xl repaids[xl repaids{xl repaids''xl repaids"xl repaids=([{''"-xl repaids([{''"-xl repaids/-xl repaids$-xl'
  - 'repds(xl repds[xl repds{xl repds''xl repds"xl repds=([{''"-xl repds([{''"-xl repds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unpaid [unpaid {unpaid ''unpaid "unpaid -unpaid'
  - '(unpd [unpd {unpd ''unpd "unpd -unpd'
  - xfail: ...

- - '!unpaid @unpaid #unpaid $unpaid %unpaid ^unpaid &unpaid *unpaid )unpaid _unpaid =unpaid +unpaid ]unpaid }unpaid \\unpaid |unpaid .unpaid ,unpaid ;unpaid :unpaid ?unpaid <unpaid >unpaid `unpaid ~unpaid /unpaid'
  - '!unpd @unpd #unpd $unpd %unpd ^unpd &unpd *unpd )unpd _unpd =unpd +unpd ]unpd }unpd \\unpd |unpd .unpd ,unpd ;unpd :unpd ?unpd <unpd >unpd ?unpd `unpd ~unpd /unpd'
  - xfail: contraction following special characters is ignored

- - '(unpd [unpd {unpd ''unpd "unpd -unpd'
  - '(;unpd [;unpd {;unpd '';unpd ";unpd -;unpd'
  - xfail: ...

- - '!unpd @unpd #unpd $unpd %unpd ^unpd &unpd *unpd )unpd _unpd =unpd +unpd ]unpd }unpd \\unpd |unpd .unpd ,unpd ;unpd :unpd ?unpd <unpd >unpd ?unpd `unpd ~unpd /unpd'
  - '!;unpd @;unpd #;unpd $;unpd %;unpd ^;unpd &;unpd *;unpd );unpd _;unpd =;unpd +;unpd ];unpd };unpd \\;unpd |;unpd .;unpd ,;unpd ;;unpd :;unpd ?;unpd <;unpd >;unpd `;unpd ~;unpd /;unpd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unpaid xl-([{''"unpaid l/-unpaid l$-unpaid'
  - 'xl-unpd xl-([{''"unpd l/-unpd l$-unpd'
  - xfail: ...

- - 'xl(unpaid xl[unpaid xl{unpaid xl''unpaid xl"unpaid xl-=([{''"unpaid'
  - 'xl(unpd xl[unpd xl{unpd xl''unpd xl"unpd xl-=([{''"unpd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unpaid) unpaid] unpaid} unpaid'' unpaid" unpaid- unpaid, unpaid. unpaid; unpaid: unpaid? unpaid!'
  - 'unpd) unpd] unpd} unpd'' unpd" unpd- unpd, unpd. unpd; unpd: unpd? unpd!'
  - xfail: ...

- - 'unpaid@ unpaid# unpaid$ unpaid% unpaid^ unpaid& unpaid* unpaid( unpaid_ unpaid= unpaid+ unpaid[ unpaid{ unpaid\\ unpaid| unpaid< unpaid> unpaid` unpaid~ unpaid/'
  - 'unpd@ unpd# unpd$ unpd% unpd^ unpd& unpd* unpd( unpd_ unpd= unpd+ unpd[ unpd{ unpd\\ unpd| unpd< unpd> unpd` unpd~ unpd/'
  - xfail: contraction followed by special characters is ignored

- - 'unpd) unpd] unpd} unpd'' unpd" unpd- unpd, unpd. unpd; unpd: unpd? unpd!'
  - ';unpd) ;unpd] ;unpd} ;unpd'' ;unpd" ;unpd- ;unpd, ;unpd. ;unpd; ;unpd: ;unpd? ;unpd!'
  - xfail: ...

- - 'unpd@ unpd# unpd$ unpd% unpd^ unpd& unpd* unpd( unpd_ unpd= unpd+ unpd[ unpd{ unpd\\ unpd| unpd< unpd> unpd` unpd~ unpd/'
  - ';unpd@ ;unpd# ;unpd$ ;unpd% ;unpd^ ;unpd& ;unpd* ;unpd( ;unpd_ ;unpd= ;unpd+ ;unpd[ ;unpd{ ;unpd\\ ;unpd| ;unpd< ;unpd> ;unpd` ;unpd~ ;unpd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unpaid-xl unpaid-([{''"xl unpaid-/xl unpaid-$xl'
  - 'unpd-xl unpd-([{''"xl unpd-/xl unpd-$xl'
  - xfail: ...

- - 'unpaid(xl unpaid[xl unpaid{xl unpaid''xl unpaid"xl unpaid=([{''"-xl unpaid([{''"-xl unpaid/-xl unpaid$-xl'
  - 'unpd(xl unpd[xl unpd{xl unpd''xl unpd"xl unpd=([{''"-xl unpd([{''"-xl unpd/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unpaids [unpaids {unpaids ''unpaids "unpaids -unpaids'
  - '(unpds [unpds {unpds ''unpds "unpds -unpds'
  - xfail: ...

- - '!unpaids @unpaids #unpaids $unpaids %unpaids ^unpaids &unpaids *unpaids )unpaids _unpaids =unpaids +unpaids ]unpaids }unpaids \\unpaids |unpaids .unpaids ,unpaids ;unpaids :unpaids ?unpaids <unpaids >unpaids `unpaids ~unpaids /unpaids'
  - '!unpds @unpds #unpds $unpds %unpds ^unpds &unpds *unpds )unpds _unpds =unpds +unpds ]unpds }unpds \\unpds |unpds .unpds ,unpds ;unpds :unpds ?unpds <unpds >unpds ?unpds `unpds ~unpds /unpds'
  - xfail: contraction following special characters is ignored

- - 'unpds (unpds [unpds {unpds ''unpds "unpds -unpds !unpds @unpds #unpds $unpds %unpds ^unpds &unpds *unpds )unpds _unpds =unpds +unpds ]unpds }unpds \\unpds |unpds .unpds ,unpds ;unpds :unpds ?unpds <unpds >unpds ?unpds `unpds ~unpds /unpds'
  - ';unpds (;unpds [;unpds {;unpds '';unpds ";unpds -;unpds !;unpds @;unpds #;unpds $;unpds %;unpds ^;unpds &;unpds *;unpds );unpds _;unpds =;unpds +;unpds ];unpds };unpds \\;unpds |;unpds .;unpds ,;unpds ;;unpds :;unpds ?;unpds <;unpds >;unpds `;unpds ~;unpds /;unpds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unpaids xl-([{''"unpaids l/-unpaids l$-unpaids'
  - 'xl-unpds xl-([{''"unpds l/-unpds l$-unpds'
  - xfail: ...

- - 'xl(unpaids xl[unpaids xl{unpaids xl''unpaids xl"unpaids xl-=([{''"unpaids'
  - 'xl(unpds xl[unpds xl{unpds xl''unpds xl"unpds xl-=([{''"unpds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unpaids) unpaids] unpaids} unpaids'' unpaids" unpaids- unpaids, unpaids. unpaids; unpaids: unpaids? unpaids!'
  - 'unpds) unpds] unpds} unpds'' unpds" unpds- unpds, unpds. unpds; unpds: unpds? unpds!'
  - xfail: ...

- - 'unpaids@ unpaids# unpaids$ unpaids% unpaids^ unpaids& unpaids* unpaids( unpaids_ unpaids= unpaids+ unpaids[ unpaids{ unpaids\\ unpaids| unpaids< unpaids> unpaids` unpaids~ unpaids/'
  - 'unpds@ unpds# unpds$ unpds% unpds^ unpds& unpds* unpds( unpds_ unpds= unpds+ unpds[ unpds{ unpds\\ unpds| unpds< unpds> unpds` unpds~ unpds/'
  - xfail: contraction followed by special characters is ignored

- - 'unpds) unpds] unpds} unpds'' unpds" unpds- unpds, unpds. unpds; unpds: unpds? unpds! unpds@ unpds# unpds$ unpds% unpds^ unpds& unpds* unpds( unpds_ unpds= unpds+ unpds[ unpds{ unpds\\ unpds| unpds< unpds> unpds` unpds~ unpds/'
  - ';unpds) ;unpds] ;unpds} ;unpds'' ;unpds" ;unpds- ;unpds, ;unpds. ;unpds; ;unpds: ;unpds? ;unpds! ;unpds@ ;unpds# ;unpds$ ;unpds% ;unpds^ ;unpds& ;unpds* ;unpds( ;unpds_ ;unpds= ;unpds+ ;unpds[ ;unpds{ ;unpds\\ ;unpds| ;unpds< ;unpds> ;unpds` ;unpds~ ;unpds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unpaids-xl unpaids-([{''"xl unpaids-/xl unpaids-$xl'
  - 'unpds-xl unpds-([{''"xl unpds-/xl unpds-$xl'
  - xfail: ...

- - 'unpaids(xl unpaids[xl unpaids{xl unpaids''xl unpaids"xl unpaids=([{''"-xl unpaids([{''"-xl unpaids/-xl unpaids$-xl'
  - 'unpds(xl unpds[xl unpds{xl unpds''xl unpds"xl unpds=([{''"-xl unpds([{''"-xl unpds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(people [people {people ''people "people -people'
  - '(p [p {p ''p "p -p'
  - xfail: ...

- - '!people @people #people $people %people ^people &people *people )people _people =people +people ]people }people \\people |people .people ,people ;people :people ?people <people >people `people ~people /people'
  - '!p @p #p $p %p ^p &p *p )p _p =p +p ]p }p \\p |p .p ,p ;p :p ?p <p >p `p ~p /p'
  - xfail: contraction following special characters is ignored

- - '(p [p {p ''p "p -p'
  - '(;p [;p {;p '';p ";p -;p'
  - xfail: ...

- - '!p @p #p $p %p ^p &p *p )p _p =p +p ]p }p \\p |p .p ,p ;p :p ?p <p >p `p ~p /p'
  - '!;p @;p #;p $;p %;p ^;p &;p *;p );p _;p =;p +;p ];p };p \\;p |;p .;p ,;p ;;p :;p ?;p <;p >;p `;p ~;p /;p'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-people xl-([{''"people xl/-people xl$-people'
  - 'xl-p xl-([{''"p xl/-p xl$-p'
  - xfail: ...

- - 'xl(people xl[people xl{people xl''people xl"people xl-=([{''"people'
  - 'xl(p xl[p xl{p xl''p xl"p xl-=([{''"p'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'people) people] people} people'' people" people- people, people. people; people: people? people!'
  - 'p) p] p} p'' p" p- p, p. p; p: p? p!'
  - xfail: ...

- - 'people@ people# people$ people% people^ people& people* people( people_ people= people+ people[ people{ people\\ people| people< people> people` people~ people/'
  - 'p@ p# p$ p% p^ p& p* p( p_ p= p+ p[ p{ p\\ p| p< p> p` p~ p/'
  - xfail: contraction followed by special characters is ignored

- - 'p) p] p} p'' p" p- p, p. p; p: p? p!'
  - ';p) ;p] ;p} ;p'' ;p" ;p- ;p, ;p. ;p; ;p: ;p? ;p!'
  - xfail: ...

- - 'p@ p# p$ p% p^ p& p* p( p_ p= p+ p[ p{ p\\ p| p< p> p` p~ p/'
  - ';p@ ;p# ;p$ ;p% ;p^ ;p& ;p* ;p( ;p_ ;p= ;p+ ;p[ ;p{ ;p\\ ;p| ;p< ;p> ;p` ;p~ ;p/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'people-xl people-([{''"xl people-/xl people-$xl'
  - 'p-xl p-([{''"xl p-/xl p-$xl'
  - xfail: ...

- - 'people(xl people[xl people{xl people''xl people"xl people=([{''"-xl people([{''"-xl people/-xl people$-xl'
  - 'p(xl p[xl p{xl p''xl p"xl p=([{''"-xl p([{''"-xl p/-xl p$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceive [perceive {perceive ''perceive "perceive -perceive'
  - '(p}cv [p}cv {p}cv ''p}cv "p}cv -p}cv'
  - xfail: ...

- - '!perceive @perceive #perceive $perceive %perceive ^perceive &perceive *perceive )perceive _perceive =perceive +perceive ]perceive }perceive \\perceive |perceive .perceive ,perceive ;perceive :perceive ?perceive <perceive >perceive `perceive ~perceive'
  - '!p}cv @p}cv #p}cv $p}cv %p}cv ^p}cv &p}cv *p}cv )p}cv _p}cv =p}cv +p}cv ]p}cv }p}cv \\p}cv |p}cv .p}cv ,p}cv ;p}cv :p}cv ?p}cv <p}cv >p}cv `p}cv ~p}cv'
  - xfail: contraction following special characters is ignored

- - '/perceive'
  - '/p}cv'
  - xfail: contraction following special characters is ignored

- - '(percv [percv {percv ''percv "percv -percv !percv'
  - '(percv [percv {percv ''percv "percv -percv !percv'
  - xfail: ...

- - '@percv #percv $percv %percv ^percv &percv *percv )percv _percv =percv +percv ]percv erpercv \\percv |percv .percv ,percv ;percv :percv ?percv <percv >percv `percv ~percv /percv'
  - '@percv #percv $percv %percv ^percv &percv *percv )percv _percv =percv +percv ]percv erpercv \\percv |percv .percv ,percv ;percv :percv ?percv <percv >percv `percv ~percv /percv'
  - xfail: non-contraction of "percv" conflicts witcv contraction of "perceive"

- - 'xl-perceive xl-([{''"perceive l/-perceive l$-perceive'
  - 'xl-p}cv xl-([{''"p}cv l/-p}cv l$-p}cv'
  - xfail: ...

- - 'xl(perceive xl[perceive xl{perceive xl''perceive xl"perceive xl-=([{''"perceive'
  - 'xl(p}cv xl[p}cv xl{p}cv xl''p}cv xl"p}cv xl-=([{''"p}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceive) perceive] perceive} perceive'' perceive" perceive- perceive, perceive. perceive; perceive: perceive? perceive!'
  - 'p}cv) p}cv] p}cv} p}cv'' p}cv" p}cv- p}cv, p}cv. p}cv; p}cv: p}cv? p}cv!'
  - xfail: ...

- - 'perceive@ perceive# perceive$ perceive% perceive^ perceive& perceive* perceive( perceive_ perceive= perceive+ perceive[ perceive{ perceive\\ perceive| perceive< perceive> perceive` perceive~ perceive/'
  - 'p}cv@ p}cv# p}cv$ p}cv% p}cv^ p}cv& p}cv* p}cv( p}cv_ p}cv= p}cv+ p}cv[ p}cv{ p}cv\\ p}cv| p}cv< p}cv> p}cv` p}cv~ p}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'percv) percv] percv} percv'' percv" percv- percv, percv. percv; percv: percv? percv!'
  - 'percv) percv] percv} percv'' percv" percv- percv, percv. percv; percv: percv? percv!'
  - xfail: ...

- - 'percv@ percv# percv$ percv% percv^ percv& percv* percv( percv_ percv= percv+ percv[ percv{ percv\\ percv| percv< percv> percv` percv~ percv/'
  - 'percv@ percv# percv$ percv% percv^ percv& percv* percv( percv_ percv= percv+ percv[ percv{ percv\\ percv| percv< percv> percv` percv~ percv/'
  - xfail: non-contraction of "percv" conflicts with contraction of "perceive"

- - 'perceive-xl perceive-([{''"xl perceive-/xl perceive-$xl'
  - 'p}cv-xl p}cv-([{''"xl p}cv-/xl p}cv-$xl'
  - xfail: ...

- - 'perceive(xl perceive[xl perceive{xl perceive''xl perceive"xl perceive=([{''"-xl perceive([{''"-xl perceive/-xl perceive$-xl'
  - 'p}cv(xl p}cv[xl p}cv{xl p}cv''xl p}cv"xl p}cv=([{''"-xl p}cv([{''"-xl p}cv/-xl p}cv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceived [perceived {perceived ''perceived "perceived -perceived'
  - '(p}cvd [p}cvd {p}cvd ''p}cvd "p}cvd -p}cvd'
  - xfail: ...

- - '!perceived @perceived #perceived $perceived %perceived ^perceived &perceived *perceived )perceived _perceived =perceived +perceived ]perceived }perceived \\perceived |perceived .perceived ,perceived ;perceived :perceived ?perceived <perceived >perceived'
  - '!p}cvd @p}cvd #p}cvd $p}cvd %p}cvd ^p}cvd &p}cvd *p}cvd )p}cvd _p}cvd =p}cvd +p}cvd ]p}cvd }p}cvd \\p}cvd |p}cvd .p}cvd ,p}cvd ;p}cvd :p}cvd ?p}cvd <p}cvd >p}cvd'
  - xfail: contraction following special characters is ignored

- - '`perceived ~perceived /perceived'
  - '`p}cvd ~p}cvd /p}cvd'
  - xfail: contraction following special characters is ignored

- - 'percvd  (percvd [percvd {percvd ''percvd "percvd -percvd !percvd @percvd #percvd $percvd %percvd ^percvd &percvd *percvd )percvd _percvd =percvd +percvd ]percvd erpercvd \\percvd |percvd .percvd ,percvd ;percvd :percvd ?percvd <percvd >percvd `percvd ~percvd'
  - 'percvd  (percvd [percvd {percvd ''percvd "percvd -percvd !percvd @percvd #percvd $percvd %percvd ^percvd &percvd *percvd )percvd _percvd =percvd +percvd ]percvd erpercvd \\percvd |percvd .percvd ,percvd ;percvd :percvd ?percvd <percvd >percvd `percvd ~percvd'
  - xfail: non-contraction of "percvd" conflicts witcv contraction of "perceived"

- - '/percvd'
  - '/percvd'
  - xfail: non-contraction of "percvd" conflicts witcv contraction of "perceived"

- - 'xl-perceived xl-([{''"perceived l/-perceived l$-perceived'
  - 'xl-p}cvd xl-([{''"p}cvd l/-p}cvd l$-p}cvd'
  - xfail: ...

- - 'xl(perceived xl[perceived xl{perceived xl''perceived xl"perceived xl-=([{''"perceived'
  - 'xl(p}cvd xl[p}cvd xl{p}cvd xl''p}cvd xl"p}cvd xl-=([{''"p}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceived) perceived] perceived} perceived'' perceived" perceived- perceived, perceived. perceived; perceived: perceived? perceived!'
  - 'p}cvd) p}cvd] p}cvd} p}cvd'' p}cvd" p}cvd- p}cvd, p}cvd. p}cvd; p}cvd: p}cvd? p}cvd!'
  - xfail: ...

- - 'perceived@ perceived# perceived$ perceived% perceived^ perceived& perceived* perceived( perceived_ perceived= perceived+ perceived[ perceived{ perceived\\ perceived| perceived< perceived> perceived` perceived~ perceived/'
  - 'p}cvd@ p}cvd# p}cvd$ p}cvd% p}cvd^ p}cvd& p}cvd* p}cvd( p}cvd_ p}cvd= p}cvd+ p}cvd[ p}cvd{ p}cvd\\ p}cvd| p}cvd< p}cvd> p}cvd` p}cvd~ p}cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'percvd) percvd] percvd} percvd'' percvd" percvd- percvd, percvd. percvd; percvd: percvd? percvd! percvd@ percvd# percvd$ percvd% percvd^ percvd& percvd* percvd( percvd_ percvd= percvd+ percvd[ percvd{ percvd\\ percvd| percvd< percvd> percvd` percvd~ percvd/'
  - 'percvd) percvd] percvd} percvd'' percvd" percvd- percvd, percvd. percvd; percvd: percvd? percvd! percvd@ percvd# percvd$ percvd% percvd^ percvd& percvd* percvd( percvd_ percvd= percvd+ percvd[ percvd{ percvd\\ percvd| percvd< percvd> percvd` percvd~ percvd/'
  - xfail: non-contraction of "percvd" conflicts with contraction of "perceived"

- - 'perceived-xl perceived-([{''"xl perceived-/xl perceived-$xl'
  - 'p}cvd-xl p}cvd-([{''"xl p}cvd-/xl p}cvd-$xl'
  - xfail: ...

- - 'perceived(xl perceived[xl perceived{xl perceived''xl perceived"xl perceived=([{''"-xl perceived([{''"-xl perceived/-xl perceived$-xl'
  - 'p}cvd(xl p}cvd[xl p}cvd{xl p}cvd''xl p}cvd"xl p}cvd=([{''"-xl p}cvd([{''"-xl p}cvd/-xl p}cvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceiving [perceiving {perceiving ''perceiving "perceiving -perceiving'
  - '(p}cvg [p}cvg {p}cvg ''p}cvg "p}cvg -p}cvg'
  - xfail: ...

- - '!perceiving @perceiving #perceiving $perceiving %perceiving ^perceiving &perceiving *perceiving )perceiving _perceiving =perceiving +perceiving ]perceiving }perceiving \\perceiving |perceiving .perceiving ,perceiving ;perceiving :perceiving ?perceiving'
  - '!p}cvg @p}cvg #p}cvg $p}cvg %p}cvg ^p}cvg &p}cvg *p}cvg )p}cvg _p}cvg =p}cvg +p}cvg ]p}cvg }p}cvg \\p}cvg |p}cvg .p}cvg ,p}cvg ;p}cvg :p}cvg ?p}cvg'
  - xfail: contraction following special characters is ignored

- - '<perceiving >perceiving `perceiving ~perceiving /perceiving'
  - '<p}cvg >p}cvg `p}cvg ~p}cvg /p}cvg'
  - xfail: contraction following special characters is ignored

- - '(percvg [percvg {percvg ''percvg "percvg -percvg !percvg'
  - '(percvg [percvg {percvg ''percvg "percvg -percvg !percvg'
  - xfail: ...

- - '@percvg #percvg $percvg %percvg ^percvg &percvg *percvg )percvg _percvg =percvg +percvg ]percvg erpercvg \\percvg |percvg .percvg ,percvg ;percvg :percvg ?percvg <percvg >percvg `percvg ~percvg /percvg'
  - '@percvg #percvg $percvg %percvg ^percvg &percvg *percvg )percvg _percvg =percvg +percvg ]percvg erpercvg \\percvg |percvg .percvg ,percvg ;percvg :percvg ?percvg <percvg >percvg `percvg ~percvg /percvg'
  - xfail: non-contraction of "percvg" conflicts witcv contraction of "perceiving"

- - 'xl-perceiving xl-([{''"perceiving l/-perceiving l$-perceiving'
  - 'xl-p}cvg xl-([{''"p}cvg l/-p}cvg l$-p}cvg'
  - xfail: ...

- - 'xl(perceiving xl[perceiving xl{perceiving xl''perceiving xl"perceiving xl-=([{''"perceiving'
  - 'xl(p}cvg xl[p}cvg xl{p}cvg xl''p}cvg xl"p}cvg xl-=([{''"p}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceiving) perceiving] perceiving} perceiving'' perceiving" perceiving- perceiving, perceiving. perceiving; perceiving: perceiving? perceiving!'
  - 'p}cvg) p}cvg] p}cvg} p}cvg'' p}cvg" p}cvg- p}cvg, p}cvg. p}cvg; p}cvg: p}cvg? p}cvg!'
  - xfail: ...

- - 'perceiving@ perceiving# perceiving$ perceiving% perceiving^ perceiving& perceiving* perceiving( perceiving_ perceiving= perceiving+ perceiving[ perceiving{ perceiving\\ perceiving| perceiving< perceiving> perceiving` perceiving~ perceiving/'
  - 'p}cvg@ p}cvg# p}cvg$ p}cvg% p}cvg^ p}cvg& p}cvg* p}cvg( p}cvg_ p}cvg= p}cvg+ p}cvg[ p}cvg{ p}cvg\\ p}cvg| p}cvg< p}cvg> p}cvg` p}cvg~ p}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'percvg) percvg] percvg} percvg'' percvg" percvg- percvg, percvg. percvg; percvg: percvg? percvg!'
  - 'percvg) percvg] percvg} percvg'' percvg" percvg- percvg, percvg. percvg; percvg: percvg? percvg!'
  - xfail: ...

- - 'percvg@ percvg# percvg$ percvg% percvg^ percvg& percvg* percvg( percvg_ percvg= percvg+ percvg[ percvg{ percvg\\ percvg| percvg< percvg> percvg` percvg~ percvg/'
  - 'percvg@ percvg# percvg$ percvg% percvg^ percvg& percvg* percvg( percvg_ percvg= percvg+ percvg[ percvg{ percvg\\ percvg| percvg< percvg> percvg` percvg~ percvg/'
  - xfail: non-contraction of "percvg" conflicts with contraction of "perceiving"

- - 'perceiving-xl perceiving-([{''"xl perceiving-/xl perceiving-$xl'
  - 'p}cvg-xl p}cvg-([{''"xl p}cvg-/xl p}cvg-$xl'
  - xfail: ...

- - 'perceiving(xl perceiving[xl perceiving{xl perceiving''xl perceiving"xl perceiving=([{''"-xl perceiving([{''"-xl perceiving/-xl perceiving$-xl'
  - 'p}cvg(xl p}cvg[xl p}cvg{xl p}cvg''xl p}cvg"xl p}cvg=([{''"-xl p}cvg([{''"-xl p}cvg/-xl p}cvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceiver [perceiver {perceiver ''perceiver "perceiver -perceiver'
  - '(p}cvr [p}cvr {p}cvr ''p}cvr "p}cvr -p}cvr'
  - xfail: ...

- - '!perceiver @perceiver #perceiver $perceiver %perceiver ^perceiver &perceiver *perceiver )perceiver _perceiver =perceiver +perceiver ]perceiver }perceiver \\perceiver |perceiver .perceiver ,perceiver ;perceiver :perceiver ?perceiver <perceiver >perceiver'
  - '!p}cvr @p}cvr #p}cvr $p}cvr %p}cvr ^p}cvr &p}cvr *p}cvr )p}cvr _p}cvr =p}cvr +p}cvr ]p}cvr }p}cvr \\p}cvr |p}cvr .p}cvr ,p}cvr ;p}cvr :p}cvr ?p}cvr <p}cvr >p}cvr'
  - xfail: contraction following special characters is ignored

- - '`perceiver ~perceiver /perceiver'
  - '`p}cvr ~p}cvr /p}cvr'
  - xfail: contraction following special characters is ignored

- - 'percvr  (percvr [percvr {percvr ''percvr "percvr -percvr !percvr @percvr #percvr $percvr %percvr ^percvr &percvr *percvr )percvr _percvr =percvr +percvr ]percvr erpercvr \\percvr |percvr .percvr ,percvr ;percvr :percvr ?percvr <percvr >percvr `percvr ~percvr'
  - 'percvr  (percvr [percvr {percvr ''percvr "percvr -percvr !percvr @percvr #percvr $percvr %percvr ^percvr &percvr *percvr )percvr _percvr =percvr +percvr ]percvr erpercvr \\percvr |percvr .percvr ,percvr ;percvr :percvr ?percvr <percvr >percvr `percvr ~percvr'
  - xfail: non-contraction of "percvr" conflicts witcv contraction of "perceiver"

- - '/percvr'
  - '/percvr'
  - xfail: non-contraction of "percvr" conflicts witcv contraction of "perceiver"

- - 'xl-perceiver xl-([{''"perceiver l/-perceiver l$-perceiver'
  - 'xl-p}cvr xl-([{''"p}cvr l/-p}cvr l$-p}cvr'
  - xfail: ...

- - 'xl(perceiver xl[perceiver xl{perceiver xl''perceiver xl"perceiver xl-=([{''"perceiver'
  - 'xl(p}cvr xl[p}cvr xl{p}cvr xl''p}cvr xl"p}cvr xl-=([{''"p}cvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceiver) perceiver] perceiver} perceiver'' perceiver" perceiver- perceiver, perceiver. perceiver; perceiver: perceiver? perceiver!'
  - 'p}cvr) p}cvr] p}cvr} p}cvr'' p}cvr" p}cvr- p}cvr, p}cvr. p}cvr; p}cvr: p}cvr? p}cvr!'
  - xfail: ...

- - 'perceiver@ perceiver# perceiver$ perceiver% perceiver^ perceiver& perceiver* perceiver( perceiver_ perceiver= perceiver+ perceiver[ perceiver{ perceiver\\ perceiver| perceiver< perceiver> perceiver` perceiver~ perceiver/'
  - 'p}cvr@ p}cvr# p}cvr$ p}cvr% p}cvr^ p}cvr& p}cvr* p}cvr( p}cvr_ p}cvr= p}cvr+ p}cvr[ p}cvr{ p}cvr\\ p}cvr| p}cvr< p}cvr> p}cvr` p}cvr~ p}cvr/'
  - xfail: contraction followed by special characters is ignored

- - 'percvr) percvr] percvr} percvr'' percvr" percvr- percvr, percvr. percvr; percvr: percvr? percvr! percvr@ percvr# percvr$ percvr% percvr^ percvr& percvr* percvr( percvr_ percvr= percvr+ percvr[ percvr{ percvr\\ percvr| percvr< percvr> percvr` percvr~ percvr/'
  - 'percvr) percvr] percvr} percvr'' percvr" percvr- percvr, percvr. percvr; percvr: percvr? percvr! percvr@ percvr# percvr$ percvr% percvr^ percvr& percvr* percvr( percvr_ percvr= percvr+ percvr[ percvr{ percvr\\ percvr| percvr< percvr> percvr` percvr~ percvr/'
  - xfail: non-contraction of "percvr" conflicts with contraction of "perceiver"

- - 'perceiver-xl perceiver-([{''"xl perceiver-/xl perceiver-$xl'
  - 'p}cvr-xl p}cvr-([{''"xl p}cvr-/xl p}cvr-$xl'
  - xfail: ...

- - 'perceiver(xl perceiver[xl perceiver{xl perceiver''xl perceiver"xl perceiver=([{''"-xl perceiver([{''"-xl perceiver/-xl perceiver$-xl'
  - 'p}cvr(xl p}cvr[xl p}cvr{xl p}cvr''xl p}cvr"xl p}cvr=([{''"-xl p}cvr([{''"-xl p}cvr/-xl p}cvr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceivers [perceivers {perceivers ''perceivers "perceivers -perceivers'
  - '(p}cvrs [p}cvrs {p}cvrs ''p}cvrs "p}cvrs -p}cvrs'
  - xfail: ...

- - '!perceivers @perceivers #perceivers $perceivers %perceivers ^perceivers &perceivers *perceivers )perceivers _perceivers =perceivers +perceivers ]perceivers }perceivers \\perceivers |perceivers .perceivers ,perceivers ;perceivers :perceivers ?perceivers'
  - '!p}cvrs @p}cvrs #p}cvrs $p}cvrs %p}cvrs ^p}cvrs &p}cvrs *p}cvrs )p}cvrs _p}cvrs =p}cvrs +p}cvrs ]p}cvrs }p}cvrs \\p}cvrs |p}cvrs .p}cvrs ,p}cvrs ;p}cvrs :p}cvrs ?p}cvrs'
  - xfail: contraction following special characters is ignored

- - '<perceivers >perceivers `perceivers ~perceivers /perceivers'
  - '<p}cvrs >p}cvrs `p}cvrs ~p}cvrs /p}cvrs'
  - xfail: contraction following special characters is ignored

- - 'percvrs  (percvrs [percvrs {percvrs ''percvrs "percvrs -percvrs !percvrs @percvrs #percvrs $percvrs %percvrs ^percvrs &percvrs *percvrs )percvrs _percvrs =percvrs +percvrs ]percvrs erpercvrs \\percvrs |percvrs .percvrs ,percvrs ;percvrs :percvrs ?percvrs <percvrs'
  - 'percvrs  (percvrs [percvrs {percvrs ''percvrs "percvrs -percvrs !percvrs @percvrs #percvrs $percvrs %percvrs ^percvrs &percvrs *percvrs )percvrs _percvrs =percvrs +percvrs ]percvrs erpercvrs \\percvrs |percvrs .percvrs ,percvrs ;percvrs :percvrs ?percvrs <percvrs'
  - xfail: non-contraction of "percvrs" conflicts witcv contraction of "perceivers"

- - '>percvrs `percvrs ~percvrs /percvrs'
  - '>percvrs `percvrs ~percvrs /percvrs'
  - xfail: non-contraction of "percvrs" conflicts witcv contraction of "perceivers"

- - 'xl-perceivers xl-([{''"perceivers l/-perceivers l$-perceivers'
  - 'xl-p}cvrs xl-([{''"p}cvrs l/-p}cvrs l$-p}cvrs'
  - xfail: ...

- - 'xl(perceivers xl[perceivers xl{perceivers xl''perceivers xl"perceivers xl-=([{''"perceivers'
  - 'xl(p}cvrs xl[p}cvrs xl{p}cvrs xl''p}cvrs xl"p}cvrs xl-=([{''"p}cvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceivers) perceivers] perceivers} perceivers'' perceivers" perceivers- perceivers, perceivers. perceivers; perceivers: perceivers? perceivers!'
  - 'p}cvrs) p}cvrs] p}cvrs} p}cvrs'' p}cvrs" p}cvrs- p}cvrs, p}cvrs. p}cvrs; p}cvrs: p}cvrs? p}cvrs!'
  - xfail: ...

- - 'perceivers@ perceivers# perceivers$ perceivers% perceivers^ perceivers& perceivers* perceivers( perceivers_ perceivers= perceivers+ perceivers[ perceivers{ perceivers\\ perceivers| perceivers< perceivers> perceivers` perceivers~ perceivers/'
  - 'p}cvrs@ p}cvrs# p}cvrs$ p}cvrs% p}cvrs^ p}cvrs& p}cvrs* p}cvrs( p}cvrs_ p}cvrs= p}cvrs+ p}cvrs[ p}cvrs{ p}cvrs\\ p}cvrs| p}cvrs< p}cvrs> p}cvrs` p}cvrs~ p}cvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'percvrs) percvrs] percvrs} percvrs'' percvrs" percvrs- percvrs, percvrs. percvrs; percvrs: percvrs? percvrs! percvrs@ percvrs# percvrs$ percvrs% percvrs^ percvrs& percvrs* percvrs( percvrs_ percvrs= percvrs+ percvrs[ percvrs{ percvrs\\ percvrs| percvrs< percvrs>'
  - 'percvrs) percvrs] percvrs} percvrs'' percvrs" percvrs- percvrs, percvrs. percvrs; percvrs: percvrs? percvrs! percvrs@ percvrs# percvrs$ percvrs% percvrs^ percvrs& percvrs* percvrs( percvrs_ percvrs= percvrs+ percvrs[ percvrs{ percvrs\\ percvrs| percvrs< percvrs>'
  - xfail: non-contraction of "percvrs" conflicts with contraction of "perceivers"

- - 'percvrs` percvrs~ percvrs/'
  - 'percvrs` percvrs~ percvrs/'
  - xfail: non-contraction of "percvrs" conflicts with contraction of "perceivers"

- - 'perceivers-xl perceivers-([{''"xl perceivers-/xl perceivers-$xl'
  - 'p}cvrs-xl p}cvrs-([{''"xl p}cvrs-/xl p}cvrs-$xl'
  - xfail: ...

- - 'perceivers(xl perceivers[xl perceivers{xl perceivers''xl perceivers"xl perceivers=([{''"-xl perceivers([{''"-xl perceivers/-xl perceivers$-xl'
  - 'p}cvrs(xl p}cvrs[xl p}cvrs{xl p}cvrs''xl p}cvrs"xl p}cvrs=([{''"-xl p}cvrs([{''"-xl p}cvrs/-xl p}cvrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceives [perceives {perceives ''perceives "perceives -perceives'
  - '(p}cvs [p}cvs {p}cvs ''p}cvs "p}cvs -p}cvs'
  - xfail: ...

- - '!perceives @perceives #perceives $perceives %perceives ^perceives &perceives *perceives )perceives _perceives =perceives +perceives ]perceives }perceives \\perceives |perceives .perceives ,perceives ;perceives :perceives ?perceives <perceives >perceives'
  - '!p}cvs @p}cvs #p}cvs $p}cvs %p}cvs ^p}cvs &p}cvs *p}cvs )p}cvs _p}cvs =p}cvs +p}cvs ]p}cvs }p}cvs \\p}cvs |p}cvs .p}cvs ,p}cvs ;p}cvs :p}cvs ?p}cvs <p}cvs >p}cvs'
  - xfail: contraction following special characters is ignored

- - '`perceives ~perceives /perceives'
  - '`p}cvs ~p}cvs /p}cvs'
  - xfail: contraction following special characters is ignored

- - 'percvs  (percvs [percvs {percvs ''percvs "percvs -percvs !percvs @percvs #percvs $percvs %percvs ^percvs &percvs *percvs )percvs _percvs =percvs +percvs ]percvs erpercvs \\percvs |percvs .percvs ,percvs ;percvs :percvs ?percvs <percvs >percvs `percvs ~percvs'
  - 'percvs  (percvs [percvs {percvs ''percvs "percvs -percvs !percvs @percvs #percvs $percvs %percvs ^percvs &percvs *percvs )percvs _percvs =percvs +percvs ]percvs erpercvs \\percvs |percvs .percvs ,percvs ;percvs :percvs ?percvs <percvs >percvs `percvs ~percvs'
  - xfail: non-contraction of "percvs" conflicts witcv contraction of "perceives"

- - '/percvs'
  - '/percvs'
  - xfail: non-contraction of "percvs" conflicts witcv contraction of "perceives"

- - 'xl-perceives xl-([{''"perceives l/-perceives l$-perceives'
  - 'xl-p}cvs xl-([{''"p}cvs l/-p}cvs l$-p}cvs'
  - xfail: ...

- - 'xl(perceives xl[perceives xl{perceives xl''perceives xl"perceives xl-=([{''"perceives'
  - 'xl(p}cvs xl[p}cvs xl{p}cvs xl''p}cvs xl"p}cvs xl-=([{''"p}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceives) perceives] perceives} perceives'' perceives" perceives- perceives, perceives. perceives; perceives: perceives? perceives!'
  - 'p}cvs) p}cvs] p}cvs} p}cvs'' p}cvs" p}cvs- p}cvs, p}cvs. p}cvs; p}cvs: p}cvs? p}cvs!'
  - xfail: ...

- - 'perceives@ perceives# perceives$ perceives% perceives^ perceives& perceives* perceives( perceives_ perceives= perceives+ perceives[ perceives{ perceives\\ perceives| perceives< perceives> perceives` perceives~ perceives/'
  - 'p}cvs@ p}cvs# p}cvs$ p}cvs% p}cvs^ p}cvs& p}cvs* p}cvs( p}cvs_ p}cvs= p}cvs+ p}cvs[ p}cvs{ p}cvs\\ p}cvs| p}cvs< p}cvs> p}cvs` p}cvs~ p}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'percvs) percvs] percvs} percvs'' percvs" percvs- percvs, percvs. percvs; percvs: percvs? percvs! percvs@ percvs# percvs$ percvs% percvs^ percvs& percvs* percvs( percvs_ percvs= percvs+ percvs[ percvs{ percvs\\ percvs| percvs< percvs> percvs` percvs~ percvs/'
  - 'percvs) percvs] percvs} percvs'' percvs" percvs- percvs, percvs. percvs; percvs: percvs? percvs! percvs@ percvs# percvs$ percvs% percvs^ percvs& percvs* percvs( percvs_ percvs= percvs+ percvs[ percvs{ percvs\\ percvs| percvs< percvs> percvs` percvs~ percvs/'
  - xfail: non-contraction of "percvs" conflicts with contraction of "perceives"

- - 'perceives-xl perceives-([{''"xl perceives-/xl perceives-$xl'
  - 'p}cvs-xl p}cvs-([{''"xl p}cvs-/xl p}cvs-$xl'
  - xfail: ...

- - 'perceives(xl perceives[xl perceives{xl perceives''xl perceives"xl perceives=([{''"-xl perceives([{''"-xl perceives/-xl perceives$-xl'
  - 'p}cvs(xl p}cvs[xl p}cvs{xl p}cvs''xl p}cvs"xl p}cvs=([{''"-xl p}cvs([{''"-xl p}cvs/-xl p}cvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'reperceive (reperceive [reperceive {reperceive ''reperceive "reperceive -reperceive !reperceive @reperceive #reperceive $reperceive %reperceive ^reperceive &reperceive *reperceive )reperceive _reperceive =reperceive +reperceive ]reperceive }reperceive'
  - '(rep}cv [rep}cv {rep}cv ''rep}cv "rep}cv -rep}cv !rep}cv @rep}cv #rep}cv $rep}cv %rep}cv ^rep}cv &rep}cv *rep}cv )rep}cv _rep}cv =rep}cv +rep}cv ]rep}cv }rep}cv'
  - xfail: contraction following special characters is ignored

- - '\\reperceive |reperceive .reperceive ,reperceive ;reperceive :reperceive ?reperceive <reperceive >reperceive `reperceive ~reperceive /reperceive'
  - '\\rep}cv |rep}cv .rep}cv ,rep}cv ;rep}cv :rep}cv ?rep}cv <rep}cv >rep}cv `rep}cv ~rep}cv /rep}cv'
  - xfail: contraction following special characters is ignored

- - 'repercv (repercv [repercv {repercv ''repercv "repercv -repercv !repercv @repercv #repercv $repercv %repercv ^repercv &repercv *repercv )repercv _repercv =repercv +repercv ]repercv errepercv \\repercv |repercv .repercv ,repercv ;repercv :repercv ?repercv <repercv'
  - 'repercv (repercv [repercv {repercv ''repercv "repercv -repercv !repercv @repercv #repercv $repercv %repercv ^repercv &repercv *repercv )repercv _repercv =repercv +repercv ]repercv errepercv \\repercv |repercv .repercv ,repercv ;repercv :repercv ?repercv <repercv'
  - xfail: non-contraction of "repercv" conflicts witcv contraction of "reperceive"

- - '>repercv `repercv ~repercv /repercv'
  - '>repercv `repercv ~repercv /repercv'
  - xfail: non-contraction of "repercv" conflicts witcv contraction of "reperceive"

- - 'xl-reperceive xl-([{''"reperceive l/-reperceive l$-reperceive xl(reperceive xl[reperceive xl{reperceive xl''reperceive xl"reperceive xl-=([{''"reperceive'
  - 'xl-rep}cv xl-([{''"rep}cv l/-rep}cv l$-rep}cv xl(rep}cv xl[rep}cv xl{rep}cv xl''rep}cv xl"rep}cv xl-=([{''"rep}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceive) reperceive] reperceive} reperceive'' reperceive" reperceive- reperceive, reperceive. reperceive; reperceive: reperceive? reperceive! reperceive@ reperceive# reperceive$ reperceive% reperceive^ reperceive& reperceive* reperceive( reperceive_'
  - 'rep}cv) rep}cv] rep}cv} rep}cv'' rep}cv" rep}cv- rep}cv, rep}cv. rep}cv; rep}cv: rep}cv? rep}cv! rep}cv@ rep}cv# rep}cv$ rep}cv% rep}cv^ rep}cv& rep}cv* rep}cv( rep}cv_'
  - xfail: contraction followed by special characters is ignored

- - 'reperceive= reperceive+ reperceive[ reperceive{ reperceive\\ reperceive| reperceive< reperceive> reperceive` reperceive~ reperceive/'
  - 'rep}cv= rep}cv+ rep}cv[ rep}cv{ rep}cv\\ rep}cv| rep}cv< rep}cv> rep}cv` rep}cv~ rep}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'repercv) repercv] repercv} repercv'' repercv" repercv- repercv, repercv. repercv; repercv: repercv? repercv! repercv@ repercv# repercv$ repercv% repercv^ repercv& repercv* repercv( repercv_ repercv= repercv+ repercv[ repercv{ repercv\\ repercv| repercv< repercv>'
  - 'repercv) repercv] repercv} repercv'' repercv" repercv- repercv, repercv. repercv; repercv: repercv? repercv! repercv@ repercv# repercv$ repercv% repercv^ repercv& repercv* repercv( repercv_ repercv= repercv+ repercv[ repercv{ repercv\\ repercv| repercv< repercv>'
  - xfail: non-contraction of "repercv" conflicts with contraction of "reperceive"

- - 'repercv` repercv~ repercv/'
  - 'repercv` repercv~ repercv/'
  - xfail: non-contraction of "repercv" conflicts with contraction of "reperceive"

- - 'reperceive-xl reperceive-([{''"xl reperceive-/xl reperceive-$xl reperceive(xl reperceive[xl reperceive{xl reperceive''xl reperceive"xl reperceive=([{''"-xl reperceive([{''"-xl reperceive/-xl reperceive$-xl'
  - 'rep}cv-xl rep}cv-([{''"xl rep}cv-/xl rep}cv-$xl rep}cv(xl rep}cv[xl rep}cv{xl rep}cv''xl rep}cv"xl rep}cv=([{''"-xl rep}cv([{''"-xl rep}cv/-xl rep}cv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceived [reperceived {reperceived ''reperceived "reperceived -reperceived !reperceived @reperceived #reperceived $reperceived %reperceived ^reperceived &reperceived *reperceived )reperceived _reperceived =reperceived +reperceived ]reperceived }reperceived'
  - '(rep}cvd [rep}cvd {rep}cvd ''rep}cvd "rep}cvd -rep}cvd !rep}cvd @rep}cvd #rep}cvd $rep}cvd %rep}cvd ^rep}cvd &rep}cvd *rep}cvd )rep}cvd _rep}cvd =rep}cvd +rep}cvd ]rep}cvd }rep}cvd'
  - xfail: contraction following special characters is ignored

- - '\\reperceived |reperceived .reperceived ,reperceived ;reperceived :reperceived ?reperceived <reperceived >reperceived `reperceived ~reperceived /reperceived'
  - '\\rep}cvd |rep}cvd .rep}cvd ,rep}cvd ;rep}cvd :rep}cvd ?rep}cvd <rep}cvd >rep}cvd `rep}cvd ~rep}cvd /rep}cvd'
  - xfail: contraction following special characters is ignored

- - 'repercvd  (repercvd [repercvd {repercvd ''repercvd "repercvd -repercvd !repercvd @repercvd #repercvd $repercvd %repercvd ^repercvd &repercvd *repercvd )repercvd _repercvd =repercvd +repercvd ]repercvd errepercvd \\repercvd |repercvd .repercvd ,repercvd ;repercvd'
  - 'repercvd  (repercvd [repercvd {repercvd ''repercvd "repercvd -repercvd !repercvd @repercvd #repercvd $repercvd %repercvd ^repercvd &repercvd *repercvd )repercvd _repercvd =repercvd +repercvd ]repercvd errepercvd \\repercvd |repercvd .repercvd ,repercvd ;repercvd'
  - xfail: non-contraction of "repercvd" conflicts witcv contraction of "reperceived"

- - ':repercvd ?repercvd <repercvd >repercvd `repercvd ~repercvd /repercvd'
  - ':repercvd ?repercvd <repercvd >repercvd `repercvd ~repercvd /repercvd'
  - xfail: non-contraction of "repercvd" conflicts witcv contraction of "reperceived"

- - 'xl-reperceived xl-([{''"reperceived l/-reperceived l$-reperceived xl(reperceived xl[reperceived xl{reperceived xl''reperceived xl"reperceived xl-=([{''"reperceived'
  - 'xl-rep}cvd xl-([{''"rep}cvd l/-rep}cvd l$-rep}cvd xl(rep}cvd xl[rep}cvd xl{rep}cvd xl''rep}cvd xl"rep}cvd xl-=([{''"rep}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceived) reperceived] reperceived} reperceived'' reperceived" reperceived- reperceived, reperceived. reperceived; reperceived: reperceived? reperceived! reperceived@ reperceived# reperceived$ reperceived% reperceived^ reperceived& reperceived* reperceived('
  - 'rep}cvd) rep}cvd] rep}cvd} rep}cvd'' rep}cvd" rep}cvd- rep}cvd, rep}cvd. rep}cvd; rep}cvd: rep}cvd? rep}cvd! rep}cvd@ rep}cvd# rep}cvd$ rep}cvd% rep}cvd^ rep}cvd& rep}cvd* rep}cvd( rep}cvd_ rep}cvd= rep}cvd+ rep}cvd[ rep}cvd{ rep}cvd\\ rep}cvd| rep}cvd<'
  - xfail: contraction followed by special characters is ignored

- - 'reperceived_ reperceived= reperceived+ reperceived[ reperceived{ reperceived\\ reperceived| reperceived< reperceived> reperceived` reperceived~ reperceived/'
  - 'rep}cvd> rep}cvd` rep}cvd~ rep}cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'repercvd) repercvd] repercvd} repercvd'' repercvd" repercvd- repercvd, repercvd. repercvd; repercvd: repercvd? repercvd! repercvd@ repercvd# repercvd$ repercvd% repercvd^ repercvd& repercvd* repercvd( repercvd_ repercvd= repercvd+ repercvd[ repercvd{ repercvd\\'
  - 'repercvd) repercvd] repercvd} repercvd'' repercvd" repercvd- repercvd, repercvd. repercvd; repercvd: repercvd? repercvd! repercvd@ repercvd# repercvd$ repercvd% repercvd^ repercvd& repercvd* repercvd( repercvd_ repercvd= repercvd+ repercvd[ repercvd{ repercvd\\'
  - xfail: non-contraction of "repercvd" conflicts with contraction of "reperceived"

- - 'repercvd| repercvd< repercvd> repercvd` repercvd~ repercvd/'
  - 'repercvd| repercvd< repercvd> repercvd` repercvd~ repercvd/'
  - xfail: non-contraction of "repercvd" conflicts with contraction of "reperceived"

- - 'reperceived-xl reperceived-([{''"xl reperceived-/xl reperceived-$xl reperceived(xl reperceived[xl reperceived{xl reperceived''xl reperceived"xl reperceived=([{''"-xl reperceived([{''"-xl reperceived/-xl reperceived$-xl'
  - 'rep}cvd-xl rep}cvd-([{''"xl rep}cvd-/xl rep}cvd-$xl rep}cvd(xl rep}cvd[xl rep}cvd{xl rep}cvd''xl rep}cvd"xl rep}cvd=([{''"-xl rep}cvd([{''"-xl rep}cvd/-xl rep}cvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceiving [reperceiving {reperceiving ''reperceiving "reperceiving -reperceiving !reperceiving @reperceiving #reperceiving $reperceiving %reperceiving ^reperceiving &reperceiving *reperceiving )reperceiving _reperceiving =reperceiving +reperceiving'
  - '(rep}cvg [rep}cvg {rep}cvg ''rep}cvg "rep}cvg -rep}cvg !rep}cvg @rep}cvg #rep}cvg $rep}cvg %rep}cvg ^rep}cvg &rep}cvg *rep}cvg )rep}cvg _rep}cvg =rep}cvg +rep}cvg'
  - xfail: contraction following special characters is ignored

- - ']reperceiving }reperceiving \\reperceiving |reperceiving .reperceiving ,reperceiving ;reperceiving :reperceiving ?reperceiving <reperceiving >reperceiving `reperceiving ~reperceiving /reperceiving'
  - ']rep}cvg }rep}cvg \\rep}cvg |rep}cvg .rep}cvg ,rep}cvg ;rep}cvg :rep}cvg ?rep}cvg <rep}cvg >rep}cvg `rep}cvg ~rep}cvg /rep}cvg'
  - xfail: contraction following special characters is ignored

- - 'repercvg (repercvg [repercvg {repercvg ''repercvg "repercvg -repercvg !repercvg @repercvg #repercvg $repercvg %repercvg ^repercvg &repercvg *repercvg )repercvg _repercvg =repercvg +repercvg ]repercvg errepercvg \\repercvg |repercvg .repercvg ,repercvg ;repercvg'
  - 'repercvg (repercvg [repercvg {repercvg ''repercvg "repercvg -repercvg !repercvg @repercvg #repercvg $repercvg %repercvg ^repercvg &repercvg *repercvg )repercvg _repercvg =repercvg +repercvg ]repercvg errepercvg \\repercvg |repercvg .repercvg ,repercvg ;repercvg'
  - xfail: non-contraction of "repercvg" conflicts witcv contraction of "reperceiving"

- - ':repercvg ?repercvg <repercvg >repercvg `repercvg ~repercvg /repercvg'
  - ':repercvg ?repercvg <repercvg >repercvg `repercvg ~repercvg /repercvg'
  - xfail: non-contraction of "repercvg" conflicts witcv contraction of "reperceiving"

- - 'xl-reperceiving xl-([{''"reperceiving l/-reperceiving l$-reperceiving xl(reperceiving xl[reperceiving xl{reperceiving xl''reperceiving xl"reperceiving xl-=([{''"reperceiving'
  - 'xl-rep}cvg xl-([{''"rep}cvg l/-rep}cvg l$-rep}cvg xl(rep}cvg xl[rep}cvg xl{rep}cvg xl''rep}cvg xl"rep}cvg xl-=([{''"rep}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceiving) reperceiving] reperceiving} reperceiving'' reperceiving" reperceiving- reperceiving, reperceiving. reperceiving; reperceiving: reperceiving? reperceiving! reperceiving@ reperceiving# reperceiving$ reperceiving% reperceiving^ reperceiving&'
  - 'rep}cvg) rep}cvg] rep}cvg} rep}cvg'' rep}cvg" rep}cvg- rep}cvg, rep}cvg. rep}cvg; rep}cvg: rep}cvg? rep}cvg! rep}cvg@ rep}cvg# rep}cvg$ rep}cvg% rep}cvg^ rep}cvg&'
  - xfail: contraction followed by special characters is ignored

- - 'reperceiving* reperceiving( reperceiving_ reperceiving= reperceiving+ reperceiving[ reperceiving{ reperceiving\\ reperceiving| reperceiving< reperceiving> reperceiving` reperceiving~ reperceiving/'
  - 'rep}cvg* rep}cvg( rep}cvg_ rep}cvg= rep}cvg+ rep}cvg[ rep}cvg{ rep}cvg\\ rep}cvg| rep}cvg< rep}cvg> rep}cvg` rep}cvg~ rep}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'repercvg) repercvg] repercvg} repercvg'' repercvg" repercvg- repercvg, repercvg. repercvg; repercvg: repercvg? repercvg! repercvg@ repercvg# repercvg$ repercvg% repercvg^ repercvg& repercvg* repercvg( repercvg_ repercvg= repercvg+ repercvg[ repercvg{ repercvg\\'
  - 'repercvg) repercvg] repercvg} repercvg'' repercvg" repercvg- repercvg, repercvg. repercvg; repercvg: repercvg? repercvg! repercvg@ repercvg# repercvg$ repercvg% repercvg^ repercvg& repercvg* repercvg( repercvg_ repercvg= repercvg+ repercvg[ repercvg{ repercvg\\'
  - xfail: non-contraction of "repercvg" conflicts with contraction of "reperceiving"

- - 'repercvg| repercvg< repercvg> repercvg` repercvg~ repercvg/'
  - 'repercvg| repercvg< repercvg> repercvg` repercvg~ repercvg/'
  - xfail: non-contraction of "repercvg" conflicts with contraction of "reperceiving"

- - 'reperceiving-xl reperceiving-([{''"xl reperceiving-/xl reperceiving-$xl reperceiving(xl reperceiving[xl reperceiving{xl reperceiving''xl reperceiving"xl reperceiving=([{''"-xl reperceiving([{''"-xl reperceiving/-xl reperceiving$-xl'
  - 'rep}cvg-xl rep}cvg-([{''"xl rep}cvg-/xl rep}cvg-$xl rep}cvg(xl rep}cvg[xl rep}cvg{xl rep}cvg''xl rep}cvg"xl rep}cvg=([{''"-xl rep}cvg([{''"-xl rep}cvg/-xl rep}cvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceives [reperceives {reperceives ''reperceives "reperceives -reperceives !reperceives @reperceives #reperceives $reperceives %reperceives ^reperceives &reperceives *reperceives )reperceives _reperceives =reperceives +reperceives ]reperceives }reperceives'
  - '(rep}cvs [rep}cvs {rep}cvs ''rep}cvs "rep}cvs -rep}cvs !rep}cvs @rep}cvs #rep}cvs $rep}cvs %rep}cvs ^rep}cvs &rep}cvs *rep}cvs )rep}cvs _rep}cvs =rep}cvs +rep}cvs ]rep}cvs }rep}cvs'
  - xfail: contraction following special characters is ignored

- - '\\reperceives |reperceives .reperceives ,reperceives ;reperceives :reperceives ?reperceives <reperceives >reperceives `reperceives ~reperceives /reperceives'
  - '\\rep}cvs |rep}cvs .rep}cvs ,rep}cvs ;rep}cvs :rep}cvs ?rep}cvs <rep}cvs >rep}cvs `rep}cvs ~rep}cvs /rep}cvs'
  - xfail: contraction following special characters is ignored

- - 'repercvs  (repercvs [repercvs {repercvs ''repercvs "repercvs -repercvs !repercvs @repercvs #repercvs $repercvs %repercvs ^repercvs &repercvs *repercvs )repercvs _repercvs =repercvs +repercvs ]repercvs errepercvs \\repercvs |repercvs .repercvs ,repercvs ;repercvs'
  - 'repercvs  (repercvs [repercvs {repercvs ''repercvs "repercvs -repercvs !repercvs @repercvs #repercvs $repercvs %repercvs ^repercvs &repercvs *repercvs )repercvs _repercvs =repercvs +repercvs ]repercvs errepercvs \\repercvs |repercvs .repercvs ,repercvs ;repercvs'
  - xfail: non-contraction of "repercvs" conflicts witcv contraction of "reperceives"

- - ':repercvs ?repercvs <repercvs >repercvs `repercvs ~repercvs /repercvs'
  - ':repercvs ?repercvs <repercvs >repercvs `repercvs ~repercvs /repercvs'
  - xfail: non-contraction of "repercvs" conflicts witcv contraction of "reperceives"

- - 'xl-reperceives xl-([{''"reperceives l/-reperceives l$-reperceives xl(reperceives xl[reperceives xl{reperceives xl''reperceives xl"reperceives xl-=([{''"reperceives'
  - 'xl-rep}cvs xl-([{''"rep}cvs l/-rep}cvs l$-rep}cvs xl(rep}cvs xl[rep}cvs xl{rep}cvs xl''rep}cvs xl"rep}cvs xl-=([{''"rep}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceives) reperceives] reperceives} reperceives'' reperceives" reperceives- reperceives, reperceives. reperceives; reperceives: reperceives? reperceives! reperceives@ reperceives# reperceives$ reperceives% reperceives^ reperceives& reperceives* reperceives('
  - 'rep}cvs) rep}cvs] rep}cvs} rep}cvs'' rep}cvs" rep}cvs- rep}cvs, rep}cvs. rep}cvs; rep}cvs: rep}cvs? rep}cvs! rep}cvs@ rep}cvs# rep}cvs$ rep}cvs% rep}cvs^ rep}cvs& rep}cvs* rep}cvs( rep}cvs_ rep}cvs= rep}cvs+ rep}cvs[ rep}cvs{ rep}cvs\\ rep}cvs| rep}cvs<'
  - xfail: contraction followed by special characters is ignored

- - 'reperceives_ reperceives= reperceives+ reperceives[ reperceives{ reperceives\\ reperceives| reperceives< reperceives> reperceives` reperceives~ reperceives/'
  - 'rep}cvs> rep}cvs` rep}cvs~ rep}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'repercvs) repercvs] repercvs} repercvs'' repercvs" repercvs- repercvs, repercvs. repercvs; repercvs: repercvs? repercvs! repercvs@ repercvs# repercvs$ repercvs% repercvs^ repercvs& repercvs* repercvs( repercvs_ repercvs= repercvs+ repercvs[ repercvs{ repercvs\\'
  - 'repercvs) repercvs] repercvs} repercvs'' repercvs" repercvs- repercvs, repercvs. repercvs; repercvs: repercvs? repercvs! repercvs@ repercvs# repercvs$ repercvs% repercvs^ repercvs& repercvs* repercvs( repercvs_ repercvs= repercvs+ repercvs[ repercvs{ repercvs\\'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - 'repercvs| repercvs< repercvs> repercvs` repercvs~ repercvs/'
  - 'repercvs| repercvs< repercvs> repercvs` repercvs~ repercvs/'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - 'reperceives-xl reperceives-([{''"xl reperceives-/xl reperceives-$xl reperceives(xl reperceives[xl reperceives{xl reperceives''xl reperceives"xl reperceives=([{''"-xl reperceives([{''"-xl reperceives/-xl reperceives$-xl'
  - 'rep}cvs-xl rep}cvs-([{''"xl rep}cvs-/xl rep}cvs-$xl rep}cvs(xl rep}cvs[xl rep}cvs{xl rep}cvs''xl rep}cvs"xl rep}cvs=([{''"-xl rep}cvs([{''"-xl rep}cvs/-xl rep}cvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceive [unperceive {unperceive ''unperceive "unperceive -unperceive'
  - '(unp}cv [unp}cv {unp}cv ''unp}cv "unp}cv -unp}cv'
  - xfail: ...

- - '!unperceive @unperceive #unperceive $unperceive %unperceive ^unperceive &unperceive *unperceive )unperceive _unperceive =unperceive +unperceive ]unperceive }unperceive \\unperceive |unperceive .unperceive ,unperceive ;unperceive :unperceive ?unperceive'
  - '!unp}cv @unp}cv #unp}cv $unp}cv %unp}cv ^unp}cv &unp}cv *unp}cv )unp}cv _unp}cv =unp}cv +unp}cv ]unp}cv }unp}cv \\unp}cv |unp}cv .unp}cv ,unp}cv ;unp}cv :unp}cv ?unp}cv'
  - xfail: contraction following special characters is ignored

- - '<unperceive >unperceive `unperceive ~unperceive /unperceive'
  - '<unp}cv >unp}cv `unp}cv ~unp}cv /unp}cv'
  - xfail: contraction following special characters is ignored

- - 'unpercv (unpercv [unpercv {unpercv ''unpercv "unpercv -unpercv !unpercv @unpercv #unpercv $unpercv %unpercv ^unpercv &unpercv *unpercv )unpercv _unpercv =unpercv +unpercv ]unpercv erunpercv \\unpercv |unpercv .unpercv ,unpercv ;unpercv :unpercv ?unpercv <unpercv'
  - 'unpercv (unpercv [unpercv {unpercv ''unpercv "unpercv -unpercv !unpercv @unpercv #unpercv $unpercv %unpercv ^unpercv &unpercv *unpercv )unpercv _unpercv =unpercv +unpercv ]unpercv erunpercv \\unpercv |unpercv .unpercv ,unpercv ;unpercv :unpercv ?unpercv <unpercv'
  - xfail: non-contraction of "unpercv" conflicts witcv contraction of "unperceive"

- - '>unpercv `unpercv ~unpercv /unpercv'
  - '>unpercv `unpercv ~unpercv /unpercv'
  - xfail: non-contraction of "unpercv" conflicts witcv contraction of "unperceive"

- - 'xl-unperceive xl-([{''"unperceive l/-unperceive l$-unperceive'
  - 'xl-unp}cv xl-([{''"unp}cv l/-unp}cv l$-unp}cv'
  - xfail: ...

- - 'xl(unperceive xl[unperceive xl{unperceive xl''unperceive xl"unperceive xl-=([{''"unperceive'
  - 'xl(unp}cv xl[unp}cv xl{unp}cv xl''unp}cv xl"unp}cv xl-=([{''"unp}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceive) unperceive] unperceive} unperceive'' unperceive" unperceive- unperceive, unperceive. unperceive; unperceive: unperceive? unperceive!'
  - 'unp}cv) unp}cv] unp}cv} unp}cv'' unp}cv" unp}cv- unp}cv, unp}cv. unp}cv; unp}cv: unp}cv? unp}cv!'
  - xfail: ...

- - 'unperceive@ unperceive# unperceive$ unperceive% unperceive^ unperceive& unperceive* unperceive( unperceive_ unperceive= unperceive+ unperceive[ unperceive{ unperceive\\ unperceive| unperceive< unperceive> unperceive` unperceive~ unperceive/'
  - 'unp}cv@ unp}cv# unp}cv$ unp}cv% unp}cv^ unp}cv& unp}cv* unp}cv( unp}cv_ unp}cv= unp}cv+ unp}cv[ unp}cv{ unp}cv\\ unp}cv| unp}cv< unp}cv> unp}cv` unp}cv~ unp}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercv) unpercv] unpercv} unpercv'' unpercv" unpercv- unpercv, unpercv. unpercv; unpercv: unpercv? unpercv! unpercv@ unpercv# unpercv$ unpercv% unpercv^ unpercv& unpercv* unpercv( unpercv_ unpercv= unpercv+ unpercv[ unpercv{ unpercv\\ unpercv| unpercv< unpercv>'
  - 'unpercv) unpercv] unpercv} unpercv'' unpercv" unpercv- unpercv, unpercv. unpercv; unpercv: unpercv? unpercv! unpercv@ unpercv# unpercv$ unpercv% unpercv^ unpercv& unpercv* unpercv( unpercv_ unpercv= unpercv+ unpercv[ unpercv{ unpercv\\ unpercv| unpercv< unpercv>'
  - xfail: non-contraction of "unpercv" conflicts with contraction of "unperceive"

- - 'unpercv` unpercv~ unpercv/'
  - 'unpercv` unpercv~ unpercv/'
  - xfail: non-contraction of "unpercv" conflicts with contraction of "unperceive"

- - 'unperceive-xl unperceive-([{''"xl unperceive-/xl unperceive-$xl'
  - 'unp}cv-xl unp}cv-([{''"xl unp}cv-/xl unp}cv-$xl'
  - xfail: ...

- - 'unperceive(xl unperceive[xl unperceive{xl unperceive''xl unperceive"xl unperceive=([{''"-xl unperceive([{''"-xl unperceive/-xl unperceive$-xl'
  - 'unp}cv(xl unp}cv[xl unp}cv{xl unp}cv''xl unp}cv"xl unp}cv=([{''"-xl unp}cv([{''"-xl unp}cv/-xl unp}cv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceived [unperceived {unperceived ''unperceived "unperceived -unperceived'
  - '(unp}cvd [unp}cvd {unp}cvd ''unp}cvd "unp}cvd -unp}cvd'
  - xfail: ...

- - '!unperceived @unperceived #unperceived $unperceived %unperceived ^unperceived &unperceived *unperceived )unperceived _unperceived =unperceived +unperceived ]unperceived }unperceived \\unperceived |unperceived .unperceived ,unperceived ;unperceived :unperceived'
  - '!unp}cvd @unp}cvd #unp}cvd $unp}cvd %unp}cvd ^unp}cvd &unp}cvd *unp}cvd )unp}cvd _unp}cvd =unp}cvd +unp}cvd ]unp}cvd }unp}cvd \\unp}cvd |unp}cvd .unp}cvd ,unp}cvd ;unp}cvd :unp}cvd'
  - xfail: contraction following special characters is ignored

- - '?unperceived <unperceived >unperceived `unperceived ~unperceived /unperceived'
  - '?unp}cvd <unp}cvd >unp}cvd `unp}cvd ~unp}cvd /unp}cvd'
  - xfail: contraction following special characters is ignored

- - 'unpercvd  (unpercvd [unpercvd {unpercvd ''unpercvd "unpercvd -unpercvd !unpercvd @unpercvd #unpercvd $unpercvd %unpercvd ^unpercvd &unpercvd *unpercvd )unpercvd _unpercvd =unpercvd +unpercvd ]unpercvd erunpercvd \\unpercvd |unpercvd .unpercvd ,unpercvd ;unpercvd'
  - 'unpercvd  (unpercvd [unpercvd {unpercvd ''unpercvd "unpercvd -unpercvd !unpercvd @unpercvd #unpercvd $unpercvd %unpercvd ^unpercvd &unpercvd *unpercvd )unpercvd _unpercvd =unpercvd +unpercvd ]unpercvd erunpercvd \\unpercvd |unpercvd .unpercvd ,unpercvd ;unpercvd'
  - xfail: non-contraction of "unpercvd" conflicts witcv contraction of "unperceived"

- - ':unpercvd ?unpercvd <unpercvd >unpercvd `unpercvd ~unpercvd /unpercvd'
  - ':unpercvd ?unpercvd <unpercvd >unpercvd `unpercvd ~unpercvd /unpercvd'
  - xfail: non-contraction of "unpercvd" conflicts witcv contraction of "unperceived"

- - 'xl-unperceived xl-([{''"unperceived l/-unperceived l$-unperceived'
  - 'xl-unp}cvd xl-([{''"unp}cvd l/-unp}cvd l$-unp}cvd'
  - xfail: ...

- - 'xl(unperceived xl[unperceived xl{unperceived xl''unperceived xl"unperceived xl-=([{''"unperceived'
  - 'xl(unp}cvd xl[unp}cvd xl{unp}cvd xl''unp}cvd xl"unp}cvd xl-=([{''"unp}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceived) unperceived] unperceived} unperceived'' unperceived" unperceived- unperceived, unperceived. unperceived; unperceived: unperceived? unperceived!'
  - 'unp}cvd) unp}cvd] unp}cvd} unp}cvd'' unp}cvd" unp}cvd- unp}cvd, unp}cvd. unp}cvd; unp}cvd: unp}cvd? unp}cvd!'
  - xfail: ...

- - 'unperceived@ unperceived# unperceived$ unperceived% unperceived^ unperceived& unperceived* unperceived( unperceived_ unperceived= unperceived+ unperceived[ unperceived{ unperceived\\ unperceived| unperceived< unperceived> unperceived` unperceived~ unperceived/'
  - 'unp}cvd@ unp}cvd# unp}cvd$ unp}cvd% unp}cvd^ unp}cvd& unp}cvd* unp}cvd( unp}cvd_ unp}cvd= unp}cvd+ unp}cvd[ unp}cvd{ unp}cvd\\ unp}cvd| unp}cvd< unp}cvd> unp}cvd` unp}cvd~ unp}cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvd) unpercvd] unpercvd} unpercvd'' unpercvd" unpercvd- unpercvd, unpercvd. unpercvd; unpercvd: unpercvd? unpercvd! unpercvd@ unpercvd# unpercvd$ unpercvd% unpercvd^ unpercvd& unpercvd* unpercvd( unpercvd_ unpercvd= unpercvd+ unpercvd[ unpercvd{ unpercvd\\'
  - 'unpercvd) unpercvd] unpercvd} unpercvd'' unpercvd" unpercvd- unpercvd, unpercvd. unpercvd; unpercvd: unpercvd? unpercvd! unpercvd@ unpercvd# unpercvd$ unpercvd% unpercvd^ unpercvd& unpercvd* unpercvd( unpercvd_ unpercvd= unpercvd+ unpercvd[ unpercvd{ unpercvd\\'
  - xfail: non-contraction of "unpercvd" conflicts with contraction of "unperceived"

- - 'unpercvd| unpercvd< unpercvd> unpercvd` unpercvd~ unpercvd/'
  - 'unpercvd| unpercvd< unpercvd> unpercvd` unpercvd~ unpercvd/'
  - xfail: non-contraction of "unpercvd" conflicts with contraction of "unperceived"

- - 'unperceived-xl unperceived-([{''"xl unperceived-/xl unperceived-$xl'
  - 'unp}cvd-xl unp}cvd-([{''"xl unp}cvd-/xl unp}cvd-$xl'
  - xfail: ...

- - 'unperceived(xl unperceived[xl unperceived{xl unperceived''xl unperceived"xl unperceived=([{''"-xl unperceived([{''"-xl unperceived/-xl unperceived$-xl'
  - 'unp}cvd(xl unp}cvd[xl unp}cvd{xl unp}cvd''xl unp}cvd"xl unp}cvd=([{''"-xl unp}cvd([{''"-xl unp}cvd/-xl unp}cvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceiving [unperceiving {unperceiving ''unperceiving "unperceiving -unperceiving'
  - '(unp}cvg [unp}cvg {unp}cvg ''unp}cvg "unp}cvg -unp}cvg'
  - xfail: ...

- - '!unperceiving @unperceiving #unperceiving $unperceiving %unperceiving ^unperceiving &unperceiving *unperceiving )unperceiving _unperceiving =unperceiving +unperceiving ]unperceiving }unperceiving \\unperceiving |unperceiving .unperceiving ,unperceiving'
  - '!unp}cvg @unp}cvg #unp}cvg $unp}cvg %unp}cvg ^unp}cvg &unp}cvg *unp}cvg )unp}cvg _unp}cvg =unp}cvg +unp}cvg ]unp}cvg }unp}cvg \\unp}cvg |unp}cvg .unp}cvg ,unp}cvg'
  - xfail: contraction following special characters is ignored

- - ';unperceiving :unperceiving ?unperceiving <unperceiving >unperceiving `unperceiving ~unperceiving /unperceiving'
  - ';unp}cvg :unp}cvg ?unp}cvg <unp}cvg >unp}cvg `unp}cvg ~unp}cvg /unp}cvg'
  - xfail: contraction following special characters is ignored

- - 'unpercvg (unpercvg [unpercvg {unpercvg ''unpercvg "unpercvg -unpercvg !unpercvg @unpercvg #unpercvg $unpercvg %unpercvg ^unpercvg &unpercvg *unpercvg )unpercvg _unpercvg =unpercvg +unpercvg ]unpercvg erunpercvg \\unpercvg |unpercvg .unpercvg ,unpercvg ;unpercvg'
  - 'unpercvg (unpercvg [unpercvg {unpercvg ''unpercvg "unpercvg -unpercvg !unpercvg @unpercvg #unpercvg $unpercvg %unpercvg ^unpercvg &unpercvg *unpercvg )unpercvg _unpercvg =unpercvg +unpercvg ]unpercvg erunpercvg \\unpercvg |unpercvg .unpercvg ,unpercvg ;unpercvg'
  - xfail: non-contraction of "unpercvg" conflicts witcv contraction of "unperceiving"

- - ':unpercvg ?unpercvg <unpercvg >unpercvg `unpercvg ~unpercvg /unpercvg'
  - ':unpercvg ?unpercvg <unpercvg >unpercvg `unpercvg ~unpercvg /unpercvg'
  - xfail: non-contraction of "unpercvg" conflicts witcv contraction of "unperceiving"

- - 'xl-unperceiving xl-([{''"unperceiving l/-unperceiving l$-unperceiving'
  - 'xl-unp}cvg xl-([{''"unp}cvg l/-unp}cvg l$-unp}cvg'
  - xfail: ...

- - 'xl(unperceiving xl[unperceiving xl{unperceiving xl''unperceiving xl"unperceiving xl-=([{''"unperceiving'
  - 'xl(unp}cvg xl[unp}cvg xl{unp}cvg xl''unp}cvg xl"unp}cvg xl-=([{''"unp}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceiving) unperceiving] unperceiving} unperceiving'' unperceiving" unperceiving- unperceiving, unperceiving. unperceiving; unperceiving: unperceiving? unperceiving!'
  - 'unp}cvg) unp}cvg] unp}cvg} unp}cvg'' unp}cvg" unp}cvg- unp}cvg, unp}cvg. unp}cvg; unp}cvg: unp}cvg? unp}cvg!'
  - xfail: ...

- - 'unperceiving@ unperceiving# unperceiving$ unperceiving% unperceiving^ unperceiving& unperceiving* unperceiving( unperceiving_ unperceiving= unperceiving+ unperceiving[ unperceiving{ unperceiving\\ unperceiving| unperceiving< unperceiving> unperceiving`'
  - 'unp}cvg@ unp}cvg# unp}cvg$ unp}cvg% unp}cvg^ unp}cvg& unp}cvg* unp}cvg( unp}cvg_ unp}cvg= unp}cvg+ unp}cvg[ unp}cvg{ unp}cvg\\ unp}cvg| unp}cvg< unp}cvg> unp}cvg`'
  - xfail: contraction followed by special characters is ignored

- - 'unperceiving~ unperceiving/'
  - 'unp}cvg~ unp}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvg) unpercvg] unpercvg} unpercvg'' unpercvg" unpercvg- unpercvg, unpercvg. unpercvg; unpercvg: unpercvg? unpercvg! unpercvg@ unpercvg# unpercvg$ unpercvg% unpercvg^ unpercvg& unpercvg* unpercvg( unpercvg_ unpercvg= unpercvg+ unpercvg[ unpercvg{ unpercvg\\'
  - 'unpercvg) unpercvg] unpercvg} unpercvg'' unpercvg" unpercvg- unpercvg, unpercvg. unpercvg; unpercvg: unpercvg? unpercvg! unpercvg@ unpercvg# unpercvg$ unpercvg% unpercvg^ unpercvg& unpercvg* unpercvg( unpercvg_ unpercvg= unpercvg+ unpercvg[ unpercvg{ unpercvg\\'
  - xfail: non-contraction of "unpercvg" conflicts with contraction of "unperceiving"

- - 'unpercvg| unpercvg< unpercvg> unpercvg` unpercvg~ unpercvg/'
  - 'unpercvg| unpercvg< unpercvg> unpercvg` unpercvg~ unpercvg/'
  - xfail: non-contraction of "unpercvg" conflicts with contraction of "unperceiving"

- - 'unperceiving-xl unperceiving-([{''"xl unperceiving-/xl unperceiving-$xl'
  - 'unp}cvg-xl unp}cvg-([{''"xl unp}cvg-/xl unp}cvg-$xl'
  - xfail: ...

- - 'unperceiving(xl unperceiving[xl unperceiving{xl unperceiving''xl unperceiving"xl unperceiving=([{''"-xl unperceiving([{''"-xl unperceiving/-xl unperceiving$-xl'
  - 'unp}cvg(xl unp}cvg[xl unp}cvg{xl unp}cvg''xl unp}cvg"xl unp}cvg=([{''"-xl unp}cvg([{''"-xl unp}cvg/-xl unp}cvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceives [unperceives {unperceives ''unperceives "unperceives -unperceives'
  - '(unp}cvs [unp}cvs {unp}cvs ''unp}cvs "unp}cvs -unp}cvs'
  - xfail: ...

- - '!unperceives @unperceives #unperceives $unperceives %unperceives ^unperceives &unperceives *unperceives )unperceives _unperceives =unperceives +unperceives ]unperceives }unperceives \\unperceives |unperceives .unperceives ,unperceives ;unperceives :unperceives'
  - '!unp}cvs @unp}cvs #unp}cvs $unp}cvs %unp}cvs ^unp}cvs &unp}cvs *unp}cvs )unp}cvs _unp}cvs =unp}cvs +unp}cvs ]unp}cvs }unp}cvs \\unp}cvs |unp}cvs .unp}cvs ,unp}cvs ;unp}cvs :unp}cvs'
  - xfail: contraction following special characters is ignored

- - '?unperceives <unperceives >unperceives `unperceives ~unperceives /unperceives'
  - '?unp}cvs <unp}cvs >unp}cvs `unp}cvs ~unp}cvs /unp}cvs'
  - xfail: contraction following special characters is ignored

- - 'unpercvs  (unpercvs [unpercvs {unpercvs ''unpercvs "unpercvs -unpercvs !unpercvs @unpercvs #unpercvs $unpercvs %unpercvs ^unpercvs &unpercvs *unpercvs )unpercvs _unpercvs =unpercvs +unpercvs ]unpercvs erunpercvs \\unpercvs |unpercvs .unpercvs ,unpercvs ;unpercvs'
  - 'unpercvs  (unpercvs [unpercvs {unpercvs ''unpercvs "unpercvs -unpercvs !unpercvs @unpercvs #unpercvs $unpercvs %unpercvs ^unpercvs &unpercvs *unpercvs )unpercvs _unpercvs =unpercvs +unpercvs ]unpercvs erunpercvs \\unpercvs |unpercvs .unpercvs ,unpercvs ;unpercvs'
  - xfail: non-contraction of "unpercvs" conflicts witcv contraction of "unperceives"

- - ':unpercvs ?unpercvs <unpercvs >unpercvs `unpercvs ~unpercvs /unpercvs'
  - ':unpercvs ?unpercvs <unpercvs >unpercvs `unpercvs ~unpercvs /unpercvs'
  - xfail: non-contraction of "unpercvs" conflicts witcv contraction of "unperceives"

- - 'xl-unperceives xl-([{''"unperceives l/-unperceives l$-unperceives'
  - 'xl-unp}cvs xl-([{''"unp}cvs l/-unp}cvs l$-unp}cvs'
  - xfail: ...

- - 'xl(unperceives xl[unperceives xl{unperceives xl''unperceives xl"unperceives xl-=([{''"unperceives'
  - 'xl(unp}cvs xl[unp}cvs xl{unp}cvs xl''unp}cvs xl"unp}cvs xl-=([{''"unp}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceives) unperceives] unperceives} unperceives'' unperceives" unperceives- unperceives, unperceives. unperceives; unperceives: unperceives? unperceives!'
  - 'unp}cvs) unp}cvs] unp}cvs} unp}cvs'' unp}cvs" unp}cvs- unp}cvs, unp}cvs. unp}cvs; unp}cvs: unp}cvs? unp}cvs!'
  - xfail: ...

- - 'unperceives@ unperceives# unperceives$ unperceives% unperceives^ unperceives& unperceives* unperceives( unperceives_ unperceives= unperceives+ unperceives[ unperceives{ unperceives\\ unperceives| unperceives< unperceives> unperceives` unperceives~ unperceives/'
  - 'unp}cvs@ unp}cvs# unp}cvs$ unp}cvs% unp}cvs^ unp}cvs& unp}cvs* unp}cvs( unp}cvs_ unp}cvs= unp}cvs+ unp}cvs[ unp}cvs{ unp}cvs\\ unp}cvs| unp}cvs< unp}cvs> unp}cvs` unp}cvs~ unp}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvs) unpercvs] unpercvs} unpercvs'' unpercvs" unpercvs- unpercvs, unpercvs. unpercvs; unpercvs: unpercvs? unpercvs! unpercvs@ unpercvs# unpercvs$ unpercvs% unpercvs^ unpercvs& unpercvs* unpercvs( unpercvs_ unpercvs= unpercvs+ unpercvs[ unpercvs{ unpercvs\\'
  - 'unpercvs) unpercvs] unpercvs} unpercvs'' unpercvs" unpercvs- unpercvs, unpercvs. unpercvs; unpercvs: unpercvs? unpercvs! unpercvs@ unpercvs# unpercvs$ unpercvs% unpercvs^ unpercvs& unpercvs* unpercvs( unpercvs_ unpercvs= unpercvs+ unpercvs[ unpercvs{ unpercvs\\'
  - xfail: non-contraction of "unpercvs" conflicts with contraction of "unperceives"

- - 'unpercvs| unpercvs< unpercvs> unpercvs` unpercvs~ unpercvs/'
  - 'unpercvs| unpercvs< unpercvs> unpercvs` unpercvs~ unpercvs/'
  - xfail: non-contraction of "unpercvs" conflicts with contraction of "unperceives"

- - 'unperceives-xl unperceives-([{''"xl unperceives-/xl unperceives-$xl'
  - 'unp}cvs-xl unp}cvs-([{''"xl unp}cvs-/xl unp}cvs-$xl'
  - xfail: ...

- - 'unperceives(xl unperceives[xl unperceives{xl unperceives''xl unperceives"xl unperceives=([{''"-xl unperceives([{''"-xl unperceives/-xl unperceives$-xl'
  - 'unp}cvs(xl unp}cvs[xl unp}cvs{xl unp}cvs''xl unp}cvs"xl unp}cvs=([{''"-xl unp}cvs([{''"-xl unp}cvs/-xl unp}cvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perhaps [perhaps {perhaps ''perhaps "perhaps -perhaps'
  - '(p}h [p}h {p}h ''p}h "p}h -p}h'
  - xfail: ...

- - '!perhaps @perhaps #perhaps $perhaps %perhaps ^perhaps &perhaps *perhaps )perhaps _perhaps =perhaps +perhaps ]perhaps }perhaps \\perhaps |perhaps .perhaps ,perhaps ;perhaps :perhaps ?perhaps <perhaps >perhaps `perhaps ~perhaps /perhaps'
  - '!p}h @p}h #p}h $p}h %p}h ^p}h &p}h *p}h )p}h _p}h =p}h +p}h ]p}h }p}h \\p}h |p}h .p}h ,p}h ;p}h :p}h ?p}h <p}h >p}h `p}h ~p}h /p}h'
  - xfail: contraction following special characters is ignored

- - '(perh [perh {perh ''perh "perh -perh'
  - '(perh [perh {perh ''perh "perh -perh'
  - xfail: ...

- - '!perh @perh #perh $perh %perh ^perh &perh *perh )perh _perh =perh +perh ]perh erperh \\perh |perh .perh ,perh ;perh :perh ?perh <perh >perh `perh ~perh /perh'
  - '!perh @perh #perh $perh %perh ^perh &perh *perh )perh _perh =perh +perh ]perh erperh \\perh |perh .perh ,perh ;perh :perh ?perh <perh >perh `perh ~perh /perh'
  - xfail: non-contraction of "perh" conflicts with contraction of "perhaps"

- - 'xl-perhaps xl-([{''"perhaps l/-perhaps l$-perhaps'
  - 'xl-p}h xl-([{''"p}h l/-p}h l$-p}h'
  - xfail: ...

- - 'xl(perhaps xl[perhaps xl{perhaps xl''perhaps xl"perhaps xl-=([{''"perhaps'
  - 'xl(p}h xl[p}h xl{p}h xl''p}h xl"p}h xl-=([{''"p}h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perhaps) perhaps] perhaps} perhaps'' perhaps" perhaps- perhaps, perhaps. perhaps; perhaps: perhaps? perhaps!'
  - 'p}h) p}h] p}h} p}h'' p}h" p}h- p}h, p}h. p}h; p}h: p}h? p}h!'
  - xfail: ...

- - 'perhaps@ perhaps# perhaps$ perhaps% perhaps^ perhaps& perhaps* perhaps( perhaps_ perhaps= perhaps+ perhaps[ perhaps{ perhaps\\ perhaps| perhaps< perhaps> perhaps` perhaps~ perhaps/'
  - 'p}h@ p}h# p}h$ p}h% p}h^ p}h& p}h* p}h( p}h_ p}h= p}h+ p}h[ p}h{ p}h\\ p}h| p}h< p}h> p}h` p}h~ p}h/'
  - xfail: contraction followed by special characters is ignored

- - 'perh) perh] perh} perh'' perh" perh- perh, perh. perh; perh: perh? perh!'
  - 'perh) perh] perh} perh'' perh" perh- perh, perh. perh; perh: perh? perh!'
  - xfail: ...

- - 'perh@ perh# perh$ perh% perh^ perh& perh* perh( perh_ perh= perh+ perh[ perh{ perh\\ perh| perh< perh> perh` perh~ perh/'
  - 'perh@ perh# perh$ perh% perh^ perh& perh* perh( perh_ perh= perh+ perh[ perh{ perh\\ perh| perh< perh> perh` perh~ perh/'
  - xfail: non-contraction of "perh" conflicts with contraction of "perhaps"

- - 'perhaps-xl perhaps-([{''"xl perhaps-/xl perhaps-$xl'
  - 'p}h-xl p}h-([{''"xl p}h-/xl p}h-$xl'
  - xfail: ...

- - 'perhaps(xl perhaps[xl perhaps{xl perhaps''xl perhaps"xl perhaps=([{''"-xl perhaps([{''"-xl perhaps/-xl perhaps$-xl'
  - 'p}h(xl p}h[xl p}h{xl p}h''xl p}h"xl p}h=([{''"-xl p}h([{''"-xl p}h/-xl p}h$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perhapss [perhapss {perhapss ''perhapss "perhapss -perhapss'
  - '(p}hs [p}hs {p}hs ''p}hs "p}hs -p}hs'
  - xfail: ...

- - '!perhapss @perhapss #perhapss $perhapss %perhapss ^perhapss &perhapss *perhapss )perhapss _perhapss =perhapss +perhapss ]perhapss }perhapss \\perhapss |perhapss .perhapss ,perhapss ;perhapss :perhapss ?perhapss <perhapss >perhapss `perhapss ~perhapss /perhapss'
  - '!p}hs @p}hs #p}hs $p}hs %p}hs ^p}hs &p}hs *p}hs )p}hs _p}hs =p}hs +p}hs ]p}hs }p}hs \\p}hs |p}hs .p}hs ,p}hs ;p}hs :p}hs ?p}hs <p}hs >p}hs `p}hs ~p}hs /p}hs'
  - xfail: contraction following special characters is ignored

- - 'perhs  (perhs [perhs {perhs ''perhs "perhs -perhs !perhs @perhs #perhs $perhs %perhs ^perhs &perhs *perhs )perhs _perhs =perhs +perhs ]perhs erperhs \\perhs |perhs .perhs ,perhs ;perhs :perhs ?perhs <perhs >perhs `perhs ~perhs /perhs'
  - 'perhs  (perhs [perhs {perhs ''perhs "perhs -perhs !perhs @perhs #perhs $perhs %perhs ^perhs &perhs *perhs )perhs _perhs =perhs +perhs ]perhs erperhs \\perhs |perhs .perhs ,perhs ;perhs :perhs ?perhs <perhs >perhs `perhs ~perhs /perhs'
  - xfail: non-contraction of "perhs" conflicts with contraction of "perhapss"

- - 'xl-perhapss xl-([{''"perhapss l/-perhapss l$-perhapss'
  - 'xl-p}hs xl-([{''"p}hs l/-p}hs l$-p}hs'
  - xfail: ...

- - 'xl(perhapss xl[perhapss xl{perhapss xl''perhapss xl"perhapss xl-=([{''"perhapss'
  - 'xl(p}hs xl[p}hs xl{p}hs xl''p}hs xl"p}hs xl-=([{''"p}hs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perhapss) perhapss] perhapss} perhapss'' perhapss" perhapss- perhapss, perhapss. perhapss; perhapss: perhapss? perhapss!'
  - 'p}hs) p}hs] p}hs} p}hs'' p}hs" p}hs- p}hs, p}hs. p}hs; p}hs: p}hs? p}hs!'
  - xfail: ...

- - 'perhapss@ perhapss# perhapss$ perhapss% perhapss^ perhapss& perhapss* perhapss( perhapss_ perhapss= perhapss+ perhapss[ perhapss{ perhapss\\ perhapss| perhapss< perhapss> perhapss` perhapss~ perhapss/'
  - 'p}hs@ p}hs# p}hs$ p}hs% p}hs^ p}hs& p}hs* p}hs( p}hs_ p}hs= p}hs+ p}hs[ p}hs{ p}hs\\ p}hs| p}hs< p}hs> p}hs` p}hs~ p}hs/'
  - xfail: contraction followed by special characters is ignored

- - 'perhs) perhs] perhs} perhs'' perhs" perhs- perhs, perhs. perhs; perhs: perhs? perhs! perhs@ perhs# perhs$ perhs% perhs^ perhs& perhs* perhs( perhs_ perhs= perhs+ perhs[ perhs{ perhs\\ perhs| perhs< perhs> perhs` perhs~ perhs/'
  - 'perhs) perhs] perhs} perhs'' perhs" perhs- perhs, perhs. perhs; perhs: perhs? perhs! perhs@ perhs# perhs$ perhs% perhs^ perhs& perhs* perhs( perhs_ perhs= perhs+ perhs[ perhs{ perhs\\ perhs| perhs< perhs> perhs` perhs~ perhs/'
  - xfail: non-contraction of "perhs" conflicts with contraction of "perhapss"

- - 'perhapss-xl perhapss-([{''"xl perhapss-/xl perhapss-$xl'
  - 'p}hs-xl p}hs-([{''"xl p}hs-/xl p}hs-$xl'
  - xfail: ...

- - 'perhapss(xl perhapss[xl perhapss{xl perhapss''xl perhapss"xl perhapss=([{''"-xl perhapss([{''"-xl perhapss/-xl perhapss$-xl'
  - 'p}hs(xl p}hs[xl p}hs{xl p}hs''xl p}hs"xl p}hs=([{''"-xl p}hs([{''"-xl p}hs/-xl p}hs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quick [quick {quick ''quick "quick -quick'
  - '(qk [qk {qk ''qk "qk -qk'
  - xfail: ...

- - '!quick @quick #quick $quick %quick ^quick &quick *quick )quick _quick =quick +quick ]quick }quick \\quick |quick .quick ,quick ;quick :quick ?quick <quick >quick `quick ~quick /quick'
  - '!qk @qk #qk $qk %qk ^qk &qk *qk )qk _qk =qk +qk ]qk }qk \\qk |qk .qk ,qk ;qk :qk ?qk <qk >qk `qk ~qk /qk'
  - xfail: contraction following special characters is ignored

- - '(qk [qk {qk ''qk "qk -qk'
  - '(;qk [;qk {;qk '';qk ";qk -;qk'
  - xfail: ...

- - '!qk @qk #qk $qk %qk ^qk &qk *qk )qk _qk =qk +qk ]qk }qk \\qk |qk .qk ,qk ;qk :qk ?qk <qk >qk `qk ~qk /qk'
  - '!;qk @;qk #;qk $;qk %;qk ^;qk &;qk *;qk );qk _;qk =;qk +;qk ];qk };qk \\;qk |;qk .;qk ,;qk ;;qk :;qk ?;qk <;qk >;qk `;qk ~;qk /;qk'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quick xl-([{''"quick l/-quick l$-quick'
  - 'xl-qk xl-([{''"qk l/-qk l$-qk'
  - xfail: ...

- - 'xl(quick xl[quick xl{quick xl''quick xl"quick xl-=([{''"quick'
  - 'xl(qk xl[qk xl{qk xl''qk xl"qk xl-=([{''"qk'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quick) quick] quick} quick'' quick" quick- quick, quick. quick; quick: quick? quick!'
  - 'qk) qk] qk} qk'' qk" qk- qk, qk. qk; qk: qk? qk!'
  - xfail: ...

- - 'quick@ quick# quick$ quick% quick^ quick& quick* quick( quick_ quick= quick+ quick[ quick{ quick\\ quick| quick< quick> quick` quick~ quick/'
  - 'qk@ qk# qk$ qk% qk^ qk& qk* qk( qk_ qk= qk+ qk[ qk{ qk\\ qk| qk< qk> qk` qk~ qk/'
  - xfail: contraction followed by special characters is ignored

- - 'qk) qk] qk} qk'' qk" qk- qk, qk. qk; qk: qk? qk!'
  - ';qk) ;qk] ;qk} ;qk'' ;qk" ;qk- ;qk, ;qk. ;qk; ;qk: ;qk? ;qk!'
  - xfail: ...

- - 'qk@ qk# qk$ qk% qk^ qk& qk* qk( qk_ qk= qk+ qk[ qk{ qk\\ qk| qk< qk> qk` qk~ qk/'
  - ';qk@ ;qk# ;qk$ ;qk% ;qk^ ;qk& ;qk* ;qk( ;qk_ ;qk= ;qk+ ;qk[ ;qk{ ;qk\\ ;qk| ;qk< ;qk> ;qk` ;qk~ ;qk/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quick-xl quick-([{''"xl quick-/xl quick-$xl'
  - 'qk-xl qk-([{''"xl qk-/xl qk-$xl'
  - xfail: ...

- - 'quick(xl quick[xl quick{xl quick''xl quick"xl quick=([{''"-xl quick([{''"-xl quick/-xl quick$-xl'
  - 'qk(xl qk[xl qk{xl qk''xl qk"xl qk=([{''"-xl qk([{''"-xl qk/-xl qk$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'quickb quickc quickd quickf quickg quickh quickj quickk quickl quickm quickn quickp quickq quickr quicks quickt quickv quickw quickx quicky quickz'
  - 'qkb qkc qkd qkf qkg qkh qkj qkk qkl qkm qkn qkp qkq qkr qks qkt qkv qkw qkx qky qkz'

- - 'qky'
  - ';qky'

- - 'qkb qkc qkd qkf qkg qkh qkj qkk qkl qkm qkn qkp qkq qkr qks qkt qkv qkw qkx qkz qkful qkment qkness qksion qktion qkless qkance qkence qkity qkong'
  - ';qkb ;qkc ;qkd ;qkf ;qkg ;qkh ;qkj ;qkk ;qkl ;qkm ;qkn ;qkp ;qkq ;qkr ;qks ;qkt ;qkv ;qkw ;qkx ; ;qkz ;qk;l ;qk;t ;qk;s ;qk.n ;qk;n ;qk.s ;qk.e ;qk;e ;qk;y ;qk;g'
  - xfail: non-contraction of "qk" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "qk"

- - '(quicken [quicken {quicken ''quicken "quicken -quicken'
  - '(qk5 [qk5 {qk5 ''qk5 "qk5 -qk5'
  - xfail: ...

- - '!quicken @quicken #quicken $quicken %quicken ^quicken &quicken *quicken )quicken _quicken =quicken +quicken ]quicken }quicken \\quicken |quicken .quicken ,quicken ;quicken :quicken ?quicken <quicken >quicken `quicken ~quicken /quicken'
  - '!qk5 @qk5 #qk5 $qk5 %qk5 ^qk5 &qk5 *qk5 )qk5 _qk5 =qk5 +qk5 ]qk5 }qk5 \\qk5 |qk5 .qk5 ,qk5 ;qk5 :qk5 ?qk5 <qk5 >qk5 `qk5 ~qk5 /qk5'
  - xfail: contraction following special characters is ignored

- - 'qken (qken [qken {qken ''qken "qken -qken !qken @qken #qken $qken %qken ^qken &qken *qken )qken _qken =qken +qken ]qken }qken \\qken |qken .qken ,qken ;qken :qken ?qken <qken >qken `qken ~qken /qken'
  - 'qken (qken [qken {qken ''qken "qken -qken !qken @qken #qken $qken %qken ^qken &qken *qken )qken _qken =qken +qken ]qken }qken \\qken |qken .qken ,qken ;qken :qken ?qken <qken >qken `qken ~qken /qken'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quicken xl-([{''"quicken l/-quicken l$-quicken'
  - 'xl-qk5 xl-([{''"qk5 l/-qk5 l$-qk5'
  - xfail: ...

- - 'xl(quicken xl[quicken xl{quicken xl''quicken xl"quicken xl-=([{''"quicken'
  - 'xl(qk5 xl[qk5 xl{qk5 xl''qk5 xl"qk5 xl-=([{''"qk5'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quicken) quicken] quicken} quicken'' quicken" quicken- quicken, quicken. quicken; quicken: quicken? quicken!'
  - 'qk5) qk5] qk5} qk5'' qk5" qk5- qk5, qk5. qk5; qk5: qk5? qk5!'
  - xfail: ...

- - 'quicken@ quicken# quicken$ quicken% quicken^ quicken& quicken* quicken( quicken_ quicken= quicken+ quicken[ quicken{ quicken\\ quicken| quicken< quicken> quicken` quicken~ quicken/'
  - 'qk5@ qk5# qk5$ qk5% qk5^ qk5& qk5* qk5( qk5_ qk5= qk5+ qk5[ qk5{ qk5\\ qk5| qk5< qk5> qk5` qk5~ qk5/'
  - xfail: contraction followed by special characters is ignored

- - 'qken) qken] qken} qken'' qken" qken- qken, qken. qken; qken: qken? qken! qken@ qken# qken$ qken% qken^ qken& qken* qken( qken_ qken= qken+ qken[ qken{ qken\\ qken| qken< qken> qken` qken~ qken/'
  - 'qken) qken] qken} qken'' qken" qken- qken, qken. qken; qken: qken? qken! qken@ qken# qken$ qken% qken^ qken& qken* qken( qken_ qken= qken+ qken[ qken{ qken\\ qken| qken< qken> qken` qken~ qken/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quicken-xl quicken-([{''"xl quicken-/xl quicken-$xl'
  - 'qk5-xl qk5-([{''"xl qk5-/xl qk5-$xl'
  - xfail: ...

- - 'quicken(xl quicken[xl quicken{xl quicken''xl quicken"xl quicken=([{''"-xl quicken([{''"-xl quicken/-xl quicken$-xl'
  - 'qk5(xl qk5[xl qk5{xl qk5''xl qk5"xl qk5=([{''"-xl qk5([{''"-xl qk5/-xl qk5$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickens [quickens {quickens ''quickens "quickens -quickens'
  - '(qk5s [qk5s {qk5s ''qk5s "qk5s -qk5s'
  - xfail: ...

- - '!quickens @quickens #quickens $quickens %quickens ^quickens &quickens *quickens )quickens _quickens =quickens +quickens ]quickens }quickens \\quickens |quickens .quickens ,quickens ;quickens :quickens ?quickens <quickens >quickens `quickens ~quickens /quickens'
  - '!qk5s @qk5s #qk5s $qk5s %qk5s ^qk5s &qk5s *qk5s )qk5s _qk5s =qk5s +qk5s ]qk5s }qk5s \\qk5s |qk5s .qk5s ,qk5s ;qk5s :qk5s ?qk5s <qk5s >qk5s `qk5s ~qk5s /qk5s'
  - xfail: contraction following special characters is ignored

- - 'qkens (qkens [qkens {qkens ''qkens "qkens -qkens !qkens @qkens #qkens $qkens %qkens ^qkens &qkens *qkens )qkens _qkens =qkens +qkens ]qkens }qkens \\qkens |qkens .qkens ,qkens ;qkens :qkens ?qkens <qkens >qkens `qkens ~qkens /qkens'
  - 'qkens (qkens [qkens {qkens ''qkens "qkens -qkens !qkens @qkens #qkens $qkens %qkens ^qkens &qkens *qkens )qkens _qkens =qkens +qkens ]qkens }qkens \\qkens |qkens .qkens ,qkens ;qkens :qkens ?qkens <qkens >qkens `qkens ~qkens /qkens'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickens xl-([{''"quickens l/-quickens l$-quickens'
  - 'xl-qk5s xl-([{''"qk5s l/-qk5s l$-qk5s'
  - xfail: ...

- - 'xl(quickens xl[quickens xl{quickens xl''quickens xl"quickens xl-=([{''"quickens'
  - 'xl(qk5s xl[qk5s xl{qk5s xl''qk5s xl"qk5s xl-=([{''"qk5s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickens) quickens] quickens} quickens'' quickens" quickens- quickens, quickens. quickens; quickens: quickens? quickens!'
  - 'qk5s) qk5s] qk5s} qk5s'' qk5s" qk5s- qk5s, qk5s. qk5s; qk5s: qk5s? qk5s!'
  - xfail: ...

- - 'quickens@ quickens# quickens$ quickens% quickens^ quickens& quickens* quickens( quickens_ quickens= quickens+ quickens[ quickens{ quickens\\ quickens| quickens< quickens> quickens` quickens~ quickens/'
  - 'qk5s@ qk5s# qk5s$ qk5s% qk5s^ qk5s& qk5s* qk5s( qk5s_ qk5s= qk5s+ qk5s[ qk5s{ qk5s\\ qk5s| qk5s< qk5s> qk5s` qk5s~ qk5s/'
  - xfail: contraction followed by special characters is ignored

- - 'qkens) qkens] qkens} qkens'' qkens" qkens- qkens, qkens. qkens; qkens: qkens? qkens! qkens@ qkens# qkens$ qkens% qkens^ qkens& qkens* qkens( qkens_ qkens= qkens+ qkens[ qkens{ qkens\\ qkens| qkens< qkens> qkens` qkens~ qkens/'
  - 'qkens) qkens] qkens} qkens'' qkens" qkens- qkens, qkens. qkens; qkens: qkens? qkens! qkens@ qkens# qkens$ qkens% qkens^ qkens& qkens* qkens( qkens_ qkens= qkens+ qkens[ qkens{ qkens\\ qkens| qkens< qkens> qkens` qkens~ qkens/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickens-xl quickens-([{''"xl quickens-/xl quickens-$xl'
  - 'qk5s-xl qk5s-([{''"xl qk5s-/xl qk5s-$xl'
  - xfail: ...

- - 'quickens(xl quickens[xl quickens{xl quickens''xl quickens"xl quickens=([{''"-xl quickens([{''"-xl quickens/-xl quickens$-xl'
  - 'qk5s(xl qk5s[xl qk5s{xl qk5s''xl qk5s"xl qk5s=([{''"-xl qk5s([{''"-xl qk5s/-xl qk5s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quicker [quicker {quicker ''quicker "quicker -quicker'
  - '(qk} [qk} {qk} ''qk} "qk} -qk}'
  - xfail: ...

- - '!quicker @quicker #quicker $quicker %quicker ^quicker &quicker *quicker )quicker _quicker =quicker +quicker ]quicker }quicker \\quicker |quicker .quicker ,quicker ;quicker :quicker ?quicker <quicker >quicker `quicker ~quicker /quicker'
  - '!qk} @qk} #qk} $qk} %qk} ^qk} &qk} *qk} )qk} _qk} =qk} +qk} ]qk} }qk} \\qk} |qk} .qk} ,qk} ;qk} :qk} ?qk} <qk} >qk} `qk} ~qk} /qk}'
  - xfail: contraction following special characters is ignored

- - 'qker (qker [qker {qker ''qker "qker -qker !qker @qker #qker $qker %qker ^qker &qker *qker )qker _qker =qker +qker ]qker }qker \\qker |qker .qker ,qker ;qker :qker ?qker <qker >qker `qker ~qker /qker'
  - 'qker (qker [qker {qker ''qker "qker -qker !qker @qker #qker $qker %qker ^qker &qker *qker )qker _qker =qker +qker ]qker }qker \\qker |qker .qker ,qker ;qker :qker ?qker <qker >qker `qker ~qker /qker'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quicker xl-([{''"quicker l/-quicker l$-quicker'
  - 'xl-qk} xl-([{''"qk} l/-qk} l$-qk}'
  - xfail: ...

- - 'xl(quicker xl[quicker xl{quicker xl''quicker xl"quicker xl-=([{''"quicker'
  - 'xl(qk} xl[qk} xl{qk} xl''qk} xl"qk} xl-=([{''"qk}'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quicker) quicker] quicker} quicker'' quicker" quicker- quicker, quicker. quicker; quicker: quicker? quicker!'
  - 'qk}) qk}] qk}} qk}'' qk}" qk}- qk}, qk}. qk}; qk}: qk}? qk}!'
  - xfail: ...

- - 'quicker@ quicker# quicker$ quicker% quicker^ quicker& quicker* quicker( quicker_ quicker= quicker+ quicker[ quicker{ quicker\\ quicker| quicker< quicker> quicker` quicker~ quicker/'
  - 'qk}@ qk}# qk}$ qk}% qk}^ qk}& qk}* qk}( qk}_ qk}= qk}+ qk}[ qk}{ qk}\\ qk}| qk}< qk}> qk}` qk}~ qk}/'
  - xfail: contraction followed by special characters is ignored

- - 'qker) qker] qker} qker'' qker" qker- qker, qker. qker; qker: qker? qker! qker@ qker# qker$ qker% qker^ qker& qker* qker( qker_ qker= qker+ qker[ qker{ qker\\ qker| qker< qker> qker` qker~ qker/'
  - 'qker) qker] qker} qker'' qker" qker- qker, qker. qker; qker: qker? qker! qker@ qker# qker$ qker% qker^ qker& qker* qker( qker_ qker= qker+ qker[ qker{ qker\\ qker| qker< qker> qker` qker~ qker/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quicker-xl quicker-([{''"xl quicker-/xl quicker-$xl'
  - 'qk}-xl qk}-([{''"xl qk}-/xl qk}-$xl'
  - xfail: ...

- - 'quicker(xl quicker[xl quicker{xl quicker''xl quicker"xl quicker=([{''"-xl quicker([{''"-xl quicker/-xl quicker$-xl'
  - 'qk}(xl qk}[xl qk}{xl qk}''xl qk}"xl qk}=([{''"-xl qk}([{''"-xl qk}/-xl qk}$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickers [quickers {quickers ''quickers "quickers -quickers'
  - '(qk}s [qk}s {qk}s ''qk}s "qk}s -qk}s'
  - xfail: ...

- - '!quickers @quickers #quickers $quickers %quickers ^quickers &quickers *quickers )quickers _quickers =quickers +quickers ]quickers }quickers \\quickers |quickers .quickers ,quickers ;quickers :quickers ?quickers <quickers >quickers `quickers ~quickers /quickers'
  - '!qk}s @qk}s #qk}s $qk}s %qk}s ^qk}s &qk}s *qk}s )qk}s _qk}s =qk}s +qk}s ]qk}s }qk}s \\qk}s |qk}s .qk}s ,qk}s ;qk}s :qk}s ?qk}s <qk}s >qk}s `qk}s ~qk}s /qk}s'
  - xfail: contraction following special characters is ignored

- - 'qkers (qkers [qkers {qkers ''qkers "qkers -qkers !qkers @qkers #qkers $qkers %qkers ^qkers &qkers *qkers )qkers _qkers =qkers +qkers ]qkers }qkers \\qkers |qkers .qkers ,qkers ;qkers :qkers ?qkers <qkers >qkers `qkers ~qkers /qkers'
  - 'qkers (qkers [qkers {qkers ''qkers "qkers -qkers !qkers @qkers #qkers $qkers %qkers ^qkers &qkers *qkers )qkers _qkers =qkers +qkers ]qkers }qkers \\qkers |qkers .qkers ,qkers ;qkers :qkers ?qkers <qkers >qkers `qkers ~qkers /qkers'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickers xl-([{''"quickers l/-quickers l$-quickers'
  - 'xl-qk}s xl-([{''"qk}s l/-qk}s l$-qk}s'
  - xfail: ...

- - 'xl(quickers xl[quickers xl{quickers xl''quickers xl"quickers xl-=([{''"quickers'
  - 'xl(qk}s xl[qk}s xl{qk}s xl''qk}s xl"qk}s xl-=([{''"qk}s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickers) quickers] quickers} quickers'' quickers" quickers- quickers, quickers. quickers; quickers: quickers? quickers!'
  - 'qk}s) qk}s] qk}s} qk}s'' qk}s" qk}s- qk}s, qk}s. qk}s; qk}s: qk}s? qk}s!'
  - xfail: ...

- - 'quickers@ quickers# quickers$ quickers% quickers^ quickers& quickers* quickers( quickers_ quickers= quickers+ quickers[ quickers{ quickers\\ quickers| quickers< quickers> quickers` quickers~ quickers/'
  - 'qk}s@ qk}s# qk}s$ qk}s% qk}s^ qk}s& qk}s* qk}s( qk}s_ qk}s= qk}s+ qk}s[ qk}s{ qk}s\\ qk}s| qk}s< qk}s> qk}s` qk}s~ qk}s/'
  - xfail: contraction followed by special characters is ignored

- - 'qkers) qkers] qkers} qkers'' qkers" qkers- qkers, qkers. qkers; qkers: qkers? qkers! qkers@ qkers# qkers$ qkers% qkers^ qkers& qkers* qkers( qkers_ qkers= qkers+ qkers[ qkers{ qkers\\ qkers| qkers< qkers> qkers` qkers~ qkers/'
  - 'qkers) qkers] qkers} qkers'' qkers" qkers- qkers, qkers. qkers; qkers: qkers? qkers! qkers@ qkers# qkers$ qkers% qkers^ qkers& qkers* qkers( qkers_ qkers= qkers+ qkers[ qkers{ qkers\\ qkers| qkers< qkers> qkers` qkers~ qkers/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickers-xl quickers-([{''"xl quickers-/xl quickers-$xl'
  - 'qk}s-xl qk}s-([{''"xl qk}s-/xl qk}s-$xl'
  - xfail: ...

- - 'quickers(xl quickers[xl quickers{xl quickers''xl quickers"xl quickers=([{''"-xl quickers([{''"-xl quickers/-xl quickers$-xl'
  - 'qk}s(xl qk}s[xl qk}s{xl qk}s''xl qk}s"xl qk}s=([{''"-xl qk}s([{''"-xl qk}s/-xl qk}s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickest [quickest {quickest ''quickest "quickest -quickest'
  - '(qke/ [qke/ {qke/ ''qke/ "qke/ -qke/'
  - xfail: ...

- - '!quickest @quickest #quickest $quickest %quickest ^quickest &quickest *quickest )quickest _quickest =quickest +quickest ]quickest }quickest \\quickest |quickest .quickest ,quickest ;quickest :quickest ?quickest <quickest >quickest `quickest ~quickest /quickest'
  - '!qke/ @qke/ #qke/ $qke/ %qke/ ^qke/ &qke/ *qke/ )qke/ _qke/ =qke/ +qke/ ]qke/ }qke/ \\qke/ |qke/ .qke/ ,qke/ ;qke/ :qke/ ?qke/ <qke/ >qke/ `qke/ ~qke/ /qke/'
  - xfail: contraction following special characters is ignored

- - 'qkest (qkest [qkest {qkest ''qkest "qkest -qkest !qkest @qkest #qkest $qkest %qkest ^qkest &qkest *qkest )qkest _qkest =qkest +qkest ]qkest }qkest \\qkest |qkest .qkest ,qkest ;qkest :qkest ?qkest <qkest >qkest `qkest ~qkest /qkest'
  - 'qkest (qkest [qkest {qkest ''qkest "qkest -qkest !qkest @qkest #qkest $qkest %qkest ^qkest &qkest *qkest )qkest _qkest =qkest +qkest ]qkest }qkest \\qkest |qkest .qkest ,qkest ;qkest :qkest ?qkest <qkest >qkest `qkest ~qkest /qkest'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickest xl-([{''"quickest l/-quickest l$-quickest'
  - 'xl-qke/ xl-([{''"qke/ l/-qke/ l$-qke/'
  - xfail: ...

- - 'xl(quickest xl[quickest xl{quickest xl''quickest xl"quickest xl-=([{''"quickest'
  - 'xl(qke/ xl[qke/ xl{qke/ xl''qke/ xl"qke/ xl-=([{''"qke/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickest) quickest] quickeste/ quickest'' quickest" quickest- quickest, quickest. quickest; quickest: quickest? quickest!'
  - 'qke/) qke/] qke/} qke/'' qke/" qke/- qke/, qke/. qke/; qke/: qke/? qke/!'
  - xfail: ...

- - 'quickest@ quickest# quickest$ quickest% quickest^ quickest& quickest* quickest( quickest_ quickest= quickest+ quickest[ quickest{ quickest\\ quickest| quickest< quickest> quickest` quickest~ quickest/'
  - 'qke/@ qke/# qke/$ qke/% qke/^ qke/& qke/* qke/( qke/_ qke/= qke/+ qke/[ qke/{ qke/\\ qke/| qke/< qke/> qke/` qke/~ qke//'
  - xfail: contraction followed by special characters is ignored

- - 'qkest) qkest] qkeste/ qkest'' qkest" qkest- qkest, qkest. qkest; qkest: qkest? qkest! qkest@ qkest# qkest$ qkest% qkest^ qkest& qkest* qkest( qkest_ qkest= qkest+ qkest[ qkest{ qkest\\ qkest| qkest< qkest> qkest` qkest~ qkest/'
  - 'qkest) qkest] qkeste/ qkest'' qkest" qkest- qkest, qkest. qkest; qkest: qkest? qkest! qkest@ qkest# qkest$ qkest% qkest^ qkest& qkest* qkest( qkest_ qkest= qkest+ qkest[ qkest{ qkest\\ qkest| qkest< qkest> qkest` qkest~ qkest/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickest-xl quickest-([{''"xl quickest-/xl quickest-$xl'
  - 'qke/-xl qke/-([{''"xl qke/-/xl qke/-$xl'
  - xfail: ...

- - 'quickest(xl quickest[xl quickest{xl quickest''xl quickest"xl quickest=([{''"-xl quickest([{''"-xl quickest/-xl quickest$-xl'
  - 'qke/(xl qke/[xl qke/{xl qke/''xl qke/"xl qke/=([{''"-xl qke/([{''"-xl qke//-xl qke/$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickests [quickests {quickests ''quickests "quickests -quickests'
  - '(qke/s [qke/s {qke/s ''qke/s "qke/s -qke/s'
  - xfail: ...

- - '!quickests @quickests #quickests $quickests %quickests ^quickests &quickests *quickests )quickests _quickests =quickests +quickests ]quickests }quickests \\quickests |quickests .quickests ,quickests ;quickests :quickests ?quickests <quickests >quickests'
  - '!qke/s @qke/s #qke/s $qke/s %qke/s ^qke/s &qke/s *qke/s )qke/s _qke/s =qke/s +qke/s ]qke/s }qke/s \\qke/s |qke/s .qke/s ,qke/s ;qke/s :qke/s ?qke/s <qke/s >qke/s'
  - xfail: contraction following special characters is ignored

- - '`quickests ~quickests /quickests'
  - '`qke/s ~qke/s /qke/s'
  - xfail: contraction following special characters is ignored

- - 'qkests (qkests [qkests {qkests ''qkests "qkests -qkests !qkests @qkests #qkests $qkests %qkests ^qkests &qkests *qkests )qkests _qkests =qkests +qkests ]qkests }qkests \\qkests |qkests .qkests ,qkests ;qkests :qkests ?qkests <qkests >qkests `qkests ~qkest'
  - 'qkests (qkests [qkests {qkests ''qkests "qkests -qkests !qkests @qkests #qkests $qkests %qkests ^qkests &qkests *qkests )qkests _qkests =qkests +qkests ]qkests }qkests \\qkests |qkests .qkests ,qkests ;qkests :qkests ?qkests <qkests >qkests `qkests ~qkest'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickests xl-([{''"quickests l/-quickests l$-quickests'
  - 'xl-qke/s xl-([{''"qke/s l/-qke/s l$-qke/s'
  - xfail: ...

- - 'xl(quickests xl[quickests xl{quickests xl''quickests xl"quickests xl-=([{''"quickests'
  - 'xl(qke/s xl[qke/s xl{qke/s xl''qke/s xl"qke/s xl-=([{''"qke/s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickests) quickests] quickestse/ quickests'' quickests" quickests- quickests, quickests. quickests; quickests: quickests? quickests!'
  - 'qke/s) qke/s] qke/s} qke/s'' qke/s" qke/s- qke/s, qke/s. qke/s; qke/s: qke/s? qke/s!'
  - xfail: ...

- - 'quickests@ quickests# quickests$ quickests% quickests^ quickests& quickests* quickests( quickests_ quickests= quickests+ quickests[ quickests{ quickests\\ quickests| quickests< quickests> quickests` quickests~ quickests/'
  - 'qke/s@ qke/s# qke/s$ qke/s% qke/s^ qke/s& qke/s* qke/s( qke/s_ qke/s= qke/s+ qke/s[ qke/s{ qke/s\\ qke/s| qke/s< qke/s> qke/s` qke/s~ qke/s/'
  - xfail: contraction followed by special characters is ignored

- - 'qkests) qkests] qkestse/ qkests'' qkests" qkests- qkests, qkests. qkests; qkests: qkests? qkests! qkests@ qkests# qkests$ qkests% qkests^ qkests& qkests* qkests( qkests_ qkests= qkests+ qkests[ qkests{ qkests\\ qkests| qkests< qkests> qkests` qkests~ qkests/'
  - 'qkests) qkests] qkestse/ qkests'' qkests" qkests- qkests, qkests. qkests; qkests: qkests? qkests! qkests@ qkests# qkests$ qkests% qkests^ qkests& qkests* qkests( qkests_ qkests= qkests+ qkests[ qkests{ qkests\\ qkests| qkests< qkests> qkests` qkests~ qkests/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickests-xl quickests-([{''"xl quickests-/xl quickests-$xl'
  - 'qke/s-xl qke/s-([{''"xl qke/s-/xl qke/s-$xl'
  - xfail: ...

- - 'quickests(xl quickests[xl quickests{xl quickests''xl quickests"xl quickests=([{''"-xl quickests([{''"-xl quickests/-xl quickests$-xl'
  - 'qke/s(xl qke/s[xl qke/s{xl qke/s''xl qke/s"xl qke/s=([{''"-xl qke/s([{''"-xl qke/s/-xl qke/s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickly [quickly {quickly ''quickly "quickly -quickly'
  - '(qkly [qkly {qkly ''qkly "qkly -qkly'
  - xfail: ...

- - '!quickly @quickly #quickly $quickly %quickly ^quickly &quickly *quickly )quickly _quickly =quickly +quickly ]quickly }quickly \\quickly |quickly .quickly ,quickly ;quickly :quickly ?quickly <quickly >quickly `quickly ~quickly /quickly'
  - '!qkly @qkly #qkly $qkly %qkly ^qkly &qkly *qkly )qkly _qkly =qkly +qkly ]qkly }qkly \\qkly |qkly .qkly ,qkly ;qkly :qkly ?qkly <qkly >qkly `qkly ~qkly /qkly'
  - xfail: contraction following special characters is ignored

- - '(qkly [qkly {qkly ''qkly "qkly -qkly'
  - '(;qkly [;qkly {;qkly '';qkly ";qkly -;qkly'
  - xfail: ...

- - '!qkly @qkly #qkly $qkly %qkly ^qkly &qkly *qkly )qkly _qkly =qkly +qkly ]qkly }qkly \\qkly |qkly .qkly ,qkly ;qkly :qkly ?qkly <qkly >qkly `qkly ~qkly /qkly'
  - '!;qkly @;qkly #;qkly $;qkly %;qkly ^;qkly &;qkly *;qkly );qkly _;qkly =;qkly +;qkly ];qkly };qkly \\;qkly |;qkly .;qkly ,;qkly ;;qkly :;qkly ?;qkly <;qkly >;qkly `;qkly ~;qkly /;qkly'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickly xl-([{''"quickly l/-quickly l$-quickly'
  - 'xl-qkly xl-([{''"qkly l/-qkly l$-qkly'
  - xfail: ...

- - 'xl(quickly xl[quickly xl{quickly xl''quickly xl"quickly xl-=([{''"quickly'
  - 'xl(qkly xl[qkly xl{qkly xl''qkly xl"qkly xl-=([{''"qkly'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickly) quickly] quickly} quickly'' quickly" quickly- quickly, quickly. quickly; quickly: quickly? quickly!'
  - 'qkly) qkly] qkly} qkly'' qkly" qkly- qkly, qkly. qkly; qkly: qkly? qkly!'
  - xfail: ...

- - 'quickly@ quickly# quickly$ quickly% quickly^ quickly& quickly* quickly( quickly_ quickly= quickly+ quickly[ quickly{ quickly\\ quickly| quickly< quickly> quickly` quickly~ quickly/'
  - 'qkly@ qkly# qkly$ qkly% qkly^ qkly& qkly* qkly( qkly_ qkly= qkly+ qkly[ qkly{ qkly\\ qkly| qkly< qkly> qkly` qkly~ qkly/'
  - xfail: contraction followed by special characters is ignored

- - 'qkly) qkly] qkly} qkly'' qkly" qkly- qkly, qkly. qkly; qkly: qkly? qkly!'
  - ';qkly) ;qkly] ;qkly} ;qkly'' ;qkly" ;qkly- ;qkly, ;qkly. ;qkly; ;qkly: ;qkly? ;qkly!'
  - xfail: ...

- - 'qkly@ qkly# qkly$ qkly% qkly^ qkly& qkly* qkly( qkly_ qkly= qkly+ qkly[ qkly{ qkly\\ qkly| qkly< qkly> qkly` qkly~ qkly/'
  - ';qkly@ ;qkly# ;qkly$ ;qkly% ;qkly^ ;qkly& ;qkly* ;qkly( ;qkly_ ;qkly= ;qkly+ ;qkly[ ;qkly{ ;qkly\\ ;qkly| ;qkly< ;qkly> ;qkly` ;qkly~ ;qkly/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickly-xl quickly-([{''"xl quickly-/xl quickly-$xl'
  - 'qkly-xl qkly-([{''"xl qkly-/xl qkly-$xl'
  - xfail: ...

- - 'quickly(xl quickly[xl quickly{xl quickly''xl quickly"xl quickly=([{''"-xl quickly([{''"-xl quickly/-xl quickly$-xl'
  - 'qkly(xl qkly[xl qkly{xl qkly''xl qkly"xl qkly=([{''"-xl qkly([{''"-xl qkly/-xl qkly$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unquick [unquick {unquick ''unquick "unquick -unquick'
  - '(unqk [unqk {unqk ''unqk "unqk -unqk'
  - xfail: ...

- - '!unquick @unquick #unquick $unquick %unquick ^unquick &unquick *unquick )unquick _unquick =unquick +unquick ]unquick }unquick \\unquick |unquick .unquick ,unquick ;unquick :unquick ?unquick <unquick >unquick `unquick ~unquick /unquick'
  - '!unqk @unqk #unqk $unqk %unqk ^unqk &unqk *unqk )unqk _unqk =unqk +unqk ]unqk }unqk \\unqk |unqk .unqk ,unqk ;unqk :unqk ?unqk <unqk >unqk `unqk ~unqk /unqk'
  - xfail: contraction following special characters is ignored

- - '(unqk [unqk {unqk ''unqk "unqk -unqk'
  - '(;unqk [;unqk {;unqk '';unqk ";unqk -;unqk'
  - xfail: ...

- - '!unqk @unqk #unqk $unqk %unqk ^unqk &unqk *unqk )unqk _unqk =unqk +unqk ]unqk }unqk \\unqk |unqk .unqk ,unqk ;unqk :unqk ?unqk <unqk >unqk `unqk ~unqk /unqk'
  - '!;unqk @;unqk #;unqk $;unqk %;unqk ^;unqk &;unqk *;unqk );unqk _;unqk =;unqk +;unqk ];unqk };unqk \\;unqk |;unqk .;unqk ,;unqk ;;unqk :;unqk ?;unqk <;unqk >;unqk `;unqk ~;unqk /;unqk'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unquick xl-([{''"unquick l/-unquick l$-unquick'
  - 'xl-unqk xl-([{''"unqk l/-unqk l$-unqk'
  - xfail: ...

- - 'xl(unquick xl[unquick xl{unquick xl''unquick xl"unquick xl-=([{''"unquick'
  - 'xl(unqk xl[unqk xl{unqk xl''unqk xl"unqk xl-=([{''"unqk'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unquick) unquick] unquick} unquick'' unquick" unquick- unquick, unquick. unquick; unquick: unquick? unquick!'
  - 'unqk) unqk] unqk} unqk'' unqk" unqk- unqk, unqk. unqk; unqk: unqk? unqk!'
  - xfail: ...

- - 'unquick@ unquick# unquick$ unquick% unquick^ unquick& unquick* unquick( unquick_ unquick= unquick+ unquick[ unquick{ unquick\\ unquick| unquick< unquick> unqk` unqk~ unqk/'
  - 'unqk@ unqk# unqk$ unqk% unqk^ unqk& unqk* unqk( unqk_ unqk= unqk+ unqk[ unqk{ unqk\\ unqk| unqk< unqk> unquick` unquick~ unquick/'
  - xfail: contraction followed by special characters is ignored

- - 'unqk) unqk] unqk} unqk'' unqk" unqk- unqk, unqk. unqk; unqk: unqk? unqk!'
  - ';unqk) ;unqk] ;unqk} ;unqk'' ;unqk" ;unqk- ;unqk, ;unqk. ;unqk; ;unqk: ;unqk? ;unqk!'
  - xfail: ...

- - 'unqk@ unqk# unqk$ unqk% unqk^ unqk& unqk* unqk( unqk_ unqk= unqk+ unqk[ unqk{ unqk\\ unqk| unqk< unqk> unqk` unqk~ unqk/'
  - ';unqk@ ;unqk# ;unqk$ ;unqk% ;unqk^ ;unqk& ;unqk* ;unqk( ;unqk_ ;unqk= ;unqk+ ;unqk[ ;unqk{ ;unqk\\ ;unqk| ;unqk< ;unqk> ;unqk` ;unqk~ ;unqk/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unquick-xl unquick-([{''"xl unquick-/xl unquick-$xl'
  - 'unqk-xl unqk-([{''"xl unqk-/xl unqk-$xl'
  - xfail: ...

- - 'unquick(xl unquick[xl unquick{xl unquick''xl unquick"xl unquick=([{''"-xl unquick([{''"-xl unquick/-xl unquick$-xl'
  - 'unqk(xl unqk[xl unqk{xl unqk''xl unqk"xl unqk=([{''"-xl unqk([{''"-xl unqk/-xl unqk$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quite [quite {quite ''quite "quite -quite'
  - '(q [q {q ''q "q -q'
  - xfail: ...

- - '!quite @quite #quite $quite %quite ^quite &quite *quite )quite _quite =quite +quite ]quite }quite \\quite |quite .quite ,quite ;quite :quite ?quite <quite >quite `quite ~quite /quite'
  - '!q @q #q $q %q ^q &q *q )q _q =q +q ]q }q \\q |q .q ,q ;q :q ?q <q >q `q ~q /q'
  - xfail: contraction following special characters is ignored

- - '(q [q {q ''q "q -q'
  - '(;q [;q {;q '';q ";q -;q'
  - xfail: ...

- - '!q @q #q $q %q ^q &q *q )q _q =q +q ]q }q \\q |q .q ,q ;q :q ?q <q >q `q ~q /q'
  - '!;q @;q #;q $;q %;q ^;q &;q *;q );q _;q =;q +;q ];q };q \\;q |;q .;q ,;q ;;q :;q ?;q <;q >;q `;q ~;q /;q'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quite xl-([{''"quite xl/-quite xl$-quite'
  - 'xl-q xl-([{''"q xl/-q xl$-q'
  - xfail: ...

- - 'xl(quite xl[quite xl{quite xl''quite xl"quite xl-=([{''"quite'
  - 'xl(q xl[q xl{q xl''q xl"q xl-=([{''"q'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quite) quite] quite} quite'' quite" quite- quite, quite. quite; quite: quite? quite!'
  - 'q) q] q} q'' q" q- q, q. q; q: q? q!'
  - xfail: ...

- - 'quite@ quite# quite$ quite% quite^ quite& quite* quite( quite_ quite= quite+ quite[ quite{ quite\\ quite| quite< quite> quite` quite~ quite/'
  - 'q@ q# q$ q% q^ q& q* q( q_ q= q+ q[ q{ q\\ q| q< q> q` q~ q/'
  - xfail: contraction followed by special characters is ignored

- - 'q) q] q} q'' q" q- q, q. q; q: q? q!'
  - ';q) ;q] ;q} ;q'' ;q" ;q- ;q, ;q. ;q; ;q: ;q? ;q!'
  - xfail: ...

- - 'q@ q# q$ q% q^ q& q* q( q_ q= q+ q[ q{ q\\ q| q< q> q` q~ q/'
  - ';q@ ;q# ;q$ ;q% ;q^ ;q& ;q* ;q( ;q_ ;q= ;q+ ;q[ ;q{ ;q\\ ;q| ;q< ;q> ;q` ;q~ ;q/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quite-xl quite-([{''"xl quite-/xl quite-$xl'
  - 'q-xl q-([{''"xl q-/xl q-$xl'
  - xfail: ...

- - 'quite(xl quite[xl quite{xl quite''xl quite"xl quite=([{''"-xl quite([{''"-xl quite/-xl quite$-xl'
  - 'q(xl q[xl q{xl q''xl q"xl q=([{''"-xl q([{''"-xl q/-xl q$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rather [rather {rather ''rather "rather -rather'
  - '(r [r {r ''r "r -r'
  - xfail: ...

- - '!rather @rather #rather $rather %rather ^rather &rather *rather )rather _rather =rather +rather ]rather }rather \\rather |rather .rather ,rather ;rather :rather ?rather <rather >rather `rather ~rather /rather'
  - '!r @r #r $r %r ^r &r *r )r _r =r +r ]r }r \\r |r .r ,r ;r :r ?r <r >r `r ~r /r'
  - xfail: contraction following special characters is ignored

- - '(r [r {r ''r "r -r'
  - '(;r [;r {;r '';r ";r -;r'
  - xfail: ...

- - '!r @r #r $r %r ^r &r *r )r _r =r +r ]r }r \\r |r .r ,r ;r :r ?r <r >r `r ~r /r'
  - '!;r @;r #;r $;r %;r ^;r &;r *;r );r _;r =;r +;r ];r };r \\;r |;r .;r ,;r ;;r :;r ?;r <;r >;r `;r ~;r /;r'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rather xl-([{''"rather xl/-rather xl$-rather'
  - 'xl-r xl-([{''"r xl/-r xl$-r'
  - xfail: ...

- - 'xl(rather xl[rather xl{rather xl''rather xl"rather xl-=([{''"rather'
  - 'xl(r xl[r xl{r xl''r xl"r xl-=([{''"r'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rather) rather] rather} rather'' rather" rather- rather, rather. rather; rather: rather? rather!'
  - 'r) r] r} r'' r" r- r, r. r; r: r? r!'
  - xfail: ...

- - 'rather@ rather# rather$ rather% rather^ rather& rather* rather( rather_ rather= rather+ rather[ rather{ rather\\ rather| rather< rather> rather` rather~ rather/'
  - 'r@ r# r$ r% r^ r& r* r( r_ r= r+ r[ r{ r\\ r| r< r> r` r~ r/'
  - xfail: contraction followed by special characters is ignored

- - 'r) r] r} r'' r" r- r, r. r; r: r? r!'
  - ';r) ;r] ;r} ;r'' ;r" ;r- ;r, ;r. ;r; ;r: ;r? ;r!'
  - xfail: ...

- - 'r@ r# r$ r% r^ r& r* r( r_ r= r+ r[ r{ r\\ r| r< r> r` r~ r/'
  - ';r@ ;r# ;r$ ;r% ;r^ ;r& ;r* ;r( ;r_ ;r= ;r+ ;r[ ;r{ ;r\\ ;r| ;r< ;r> ;r` ;r~ ;r/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rather-xl rather-([{''"xl rather-/xl rather-$xl'
  - 'r-xl r-([{''"xl r-/xl r-$xl'
  - xfail: ...

- - 'rather(xl rather[xl rather{xl rather''xl rather"xl rather=([{''"-xl rather([{''"-xl rather/-xl rather$-xl'
  - 'r(xl r[xl r{xl r''xl r"xl r=([{''"-xl r([{''"-xl r/-xl r$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receive [receive {receive ''receive "receive -receive'
  - '(rcv [rcv {rcv ''rcv "rcv -rcv'
  - xfail: ...

- - '!receive @receive #receive $receive %receive ^receive &receive *receive )receive _receive =receive +receive ]receive }receive \\receive |receive .receive ,receive ;receive :receive ?receive <receive >receive `receive ~receive /receive'
  - '!rcv @rcv #rcv $rcv %rcv ^rcv &rcv *rcv )rcv _rcv =rcv +rcv ]rcv }rcv \\rcv |rcv .rcv ,rcv ;rcv :rcv ?rcv <rcv >rcv ?rcv `rcv ~rcv /rcv'
  - xfail: contraction following special characters is ignored

- - '(rcv [rcv {rcv ''rcv "rcv -rcv'
  - '(;rcv [;rcv {;rcv '';rcv ";rcv -;rcv'
  - xfail: ...

- - '!rcv @rcv #rcv $rcv %rcv ^rcv &rcv *rcv )rcv _rcv =rcv +rcv ]rcv }rcv \\rcv |rcv .rcv ,rcv ;rcv :rcv ?rcv <rcv >rcv ?rcv `rcv ~rcv /rcv'
  - '!;rcv @;rcv #;rcv $;rcv %;rcv ^;rcv &;rcv *;rcv );rcv _;rcv =;rcv +;rcv ];rcv };rcv \\;rcv |;rcv .;rcv ,;rcv ;;rcv :;rcv ?;rcv <;rcv >;rcv `;rcv ~;rcv /;rcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receive xl-([{''"receive l/-receive l$-receive'
  - 'xl-rcv xl-([{''"rcv l/-rcv l$-rcv'
  - xfail: ...

- - 'xl(receive xl[receive xl{receive xl''receive xl"receive xl-=([{''"receive'
  - 'xl(rcv xl[rcv xl{rcv xl''rcv xl"rcv xl-=([{''"rcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receive) receive] receive} receive'' receive" receive- receive, receive. receive; receive: receive? receive!'
  - 'rcv) rcv] rcv} rcv'' rcv" rcv- rcv, rcv. rcv; rcv: rcv? rcv!'
  - xfail: ...

- - 'receive@ receive# receive$ receive% receive^ receive& receive* receive( receive_ receive= receive+ receive[ receive{ receive\\ receive| receive< receive> receive` receive~ receive/'
  - 'rcv@ rcv# rcv$ rcv% rcv^ rcv& rcv* rcv( rcv_ rcv= rcv+ rcv[ rcv{ rcv\\ rcv| rcv< rcv> rcv` rcv~ rcv/'
  - xfail: contraction followed by special characters is ignored

- - 'rcv) rcv] rcv} rcv'' rcv" rcv- rcv, rcv. rcv; rcv: rcv? rcv!'
  - ';rcv) ;rcv] ;rcv} ;rcv'' ;rcv" ;rcv- ;rcv, ;rcv. ;rcv; ;rcv: ;rcv? ;rcv!'
  - xfail: ...

- - 'rcv@ rcv# rcv$ rcv% rcv^ rcv& rcv* rcv( rcv_ rcv= rcv+ rcv[ rcv{ rcv\\ rcv| rcv< rcv> rcv` rcv~ rcv/'
  - ';rcv@ ;rcv# ;rcv$ ;rcv% ;rcv^ ;rcv& ;rcv* ;rcv( ;rcv_ ;rcv= ;rcv+ ;rcv[ ;rcv{ ;rcv\\ ;rcv| ;rcv< ;rcv> ;rcv` ;rcv~ ;rcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receive-xl receive-([{''"xl receive-/xl receive-$xl'
  - 'rcv-xl rcv-([{''"xl rcv-/xl rcv-$xl'
  - xfail: ...

- - 'receive(xl receive[xl receive{xl receive''xl receive"xl receive=([{''"-xl receive([{''"-xl receive/-xl receive$-xl'
  - 'rcv(xl rcv[xl rcv{xl rcv''xl rcv"xl rcv=([{''"-xl rcv([{''"-xl rcv/-xl rcv$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(received [received {received ''received "received -received'
  - '(rcvd [rcvd {rcvd ''rcvd "rcvd -rcvd'
  - xfail: ...

- - '!received @received #received $received %received ^received &received *received )received _received =received +received ]received }received \\received |received .received ,received ;received :received ?received <received >received `received ~received /received'
  - '!rcvd @rcvd #rcvd $rcvd %rcvd ^rcvd &rcvd *rcvd )rcvd _rcvd =rcvd +rcvd ]rcvd }rcvd \\rcvd |rcvd .rcvd ,rcvd ;rcvd :rcvd ?rcvd <rcvd >rcvd `rcvd ~rcvd /rcvd'
  - xfail: contraction following special characters is ignored

- - '(rcvd [rcvd {rcvd ''rcvd "rcvd -rcvd'
  - '(;rcvd [;rcvd {;rcvd '';rcvd ";rcvd -;rcvd'
  - xfail: ...

- - '!rcvd @rcvd #rcvd $rcvd %rcvd ^rcvd &rcvd *rcvd )rcvd _rcvd =rcvd +rcvd ]rcvd }rcvd \\rcvd |rcvd .rcvd ,rcvd ;rcvd :rcvd ?rcvd <rcvd >rcvd `rcvd ~rcvd /rcvd'
  - '!;rcvd @;rcvd #;rcvd $;rcvd %;rcvd ^;rcvd &;rcvd *;rcvd );rcvd _;rcvd =;rcvd +;rcvd ];rcvd };rcvd \\;rcvd |;rcvd .;rcvd ,;rcvd ;;rcvd :;rcvd ?;rcvd <;rcvd >;rcvd `;rcvd ~;rcvd /;rcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-received xl-([{''"received l/-received l$-received'
  - 'xl-rcvd xl-([{''"rcvd l/-rcvd l$-rcvd'
  - xfail: ...

- - 'xl(received xl[received xl{received xl''received xl"received xl-=([{''"received'
  - 'xl(rcvd xl[rcvd xl{rcvd xl''rcvd xl"rcvd xl-=([{''"rcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'received) received] received} received'' received" received- received, received. received; received: received? received!'
  - 'rcvd) rcvd] rcvd} rcvd'' rcvd" rcvd- rcvd, rcvd. rcvd; rcvd: rcvd? rcvd!'
  - xfail: ...

- - 'received@ received# received$ received% received^ received& received* received( received_ received= received+ received[ received{ received\\ received| received< received> received` received~ received/'
  - 'rcvd@ rcvd# rcvd$ rcvd% rcvd^ rcvd& rcvd* rcvd( rcvd_ rcvd= rcvd+ rcvd[ rcvd{ rcvd\\ rcvd| rcvd< rcvd> rcvd` rcvd~ rcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvd) rcvd] rcvd} rcvd'' rcvd" rcvd- rcvd, rcvd. rcvd; rcvd: rcvd? rcvd!'
  - ';rcvd) ;rcvd] ;rcvd} ;rcvd'' ;rcvd" ;rcvd- ;rcvd, ;rcvd. ;rcvd; ;rcvd: ;rcvd? ;rcvd!'
  - xfail: ...

- - 'rcvd@ rcvd# rcvd$ rcvd% rcvd^ rcvd& rcvd* rcvd( rcvd_ rcvd= rcvd+ rcvd[ rcvd{ rcvd\\ rcvd| rcvd< rcvd> rcvd` rcvd~ rcvd/'
  - ';rcvd@ ;rcvd# ;rcvd$ ;rcvd% ;rcvd^ ;rcvd& ;rcvd* ;rcvd( ;rcvd_ ;rcvd= ;rcvd+ ;rcvd[ ;rcvd{ ;rcvd\\ ;rcvd| ;rcvd< ;rcvd> ;rcvd` ;rcvd~ ;rcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'received-xl received-([{''"xl received-/xl received-$xl'
  - 'rcvd-xl rcvd-([{''"xl rcvd-/xl rcvd-$xl'
  - xfail: ...

- - 'received(xl received[xl received{xl received''xl received"xl received=([{''"-xl received([{''"-xl received/-xl received$-xl'
  - 'rcvd(xl rcvd[xl rcvd{xl rcvd''xl rcvd"xl rcvd=([{''"-xl rcvd([{''"-xl rcvd/-xl rcvd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receiving [receiving {receiving ''receiving "receiving -receiving'
  - '(rcvg [rcvg {rcvg ''rcvg "rcvg -rcvg'
  - xfail: ...

- - '!receiving @receiving #receiving $receiving %receiving ^receiving &receiving *receiving )receiving _receiving =receiving +receiving ]receiving }receiving \\receiving |receiving .receiving ,receiving ;receiving :receiving ?receiving <receiving >receiving'
  - '!rcvg @rcvg #rcvg $rcvg %rcvg ^rcvg &rcvg *rcvg )rcvg _rcvg =rcvg +rcvg ]rcvg }rcvg \\rcvg |rcvg .rcvg ,rcvg ;rcvg :rcvg ?rcvg <rcvg >rcvg'
  - xfail: contraction following special characters is ignored

- - '`receiving ~receiving /receiving'
  - '`rcvg ~rcvg /rcvg'
  - xfail: contraction following special characters is ignored

- - '(rcvg [rcvg {rcvg ''rcvg "rcvg -rcvg'
  - '(;rcvg [;rcvg {;rcvg '';rcvg ";rcvg -;rcvg'
  - xfail: ...

- - '!rcvg @rcvg #rcvg $rcvg %rcvg ^rcvg &rcvg *rcvg )rcvg _rcvg =rcvg +rcvg ]rcvg }rcvg \\rcvg |rcvg .rcvg ,rcvg ;rcvg :rcvg .rcvg <rcvg >rcvg ?rcvg `rcvg ~rcvg /rcvg'
  - '!;rcvg @;rcvg #;rcvg $;rcvg %;rcvg ^;rcvg &;rcvg *;rcvg );rcvg _;rcvg =;rcvg +;rcvg ];rcvg };rcvg \\;rcvg |;rcvg .;rcvg ,;rcvg ;;rcvg :;rcvg ?;rcvg <;rcvg >;rcvg `;rcvg ~;rcvg /;rcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receiving xl-([{''"receiving l/-receiving l$-receiving'
  - 'xl-rcvg xl-([{''"rcvg l/-rcvg l$-rcvg'
  - xfail: ...

- - 'xl(receiving xl[receiving xl{receiving xl''receiving xl"receiving xl-=([{''"receiving'
  - 'xl(rcvg xl[rcvg xl{rcvg xl''rcvg xl"rcvg xl-=([{''"rcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receiving) receiving] receiving} receiving'' receiving" receiving- receiving, receiving. receiving; receiving: receiving? receiving!'
  - 'rcvg) rcvg] rcvg} rcvg'' rcvg" rcvg- rcvg, rcvg. rcvg; rcvg: rcvg? rcvg!'
  - xfail: ...

- - 'receiving@ receiving# receiving$ receiving% receiving^ receiving& receiving* receiving( receiving_ receiving= receiving+ receiving[ receiving{ receiving\\ receiving| receiving< receiving> receiving` receiving~ receiving/'
  - 'rcvg@ rcvg# rcvg$ rcvg% rcvg^ rcvg& rcvg* rcvg( rcvg_ rcvg= rcvg+ rcvg[ rcvg{ rcvg\\ rcvg| rcvg< rcvg> rcvg` rcvg~ rcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvg) rcvg] rcvg} rcvg'' rcvg" rcvg- rcvg, rcvg. rcvg; rcvg: rcvg? rcvg!'
  - ';rcvg) ;rcvg] ;rcvg} ;rcvg'' ;rcvg" ;rcvg- ;rcvg, ;rcvg. ;rcvg; ;rcvg: ;rcvg? ;rcvg!'
  - xfail: ...

- - 'rcvg@ rcvg# rcvg$ rcvg% rcvg^ rcvg& rcvg* rcvg( rcvg_ rcvg= rcvg+ rcvg[ rcvg{ rcvg\\ rcvg| rcvg< rcvg> rcvg` rcvg~ rcvg/'
  - ';rcvg@ ;rcvg# ;rcvg$ ;rcvg% ;rcvg^ ;rcvg& ;rcvg* ;rcvg( ;rcvg_ ;rcvg= ;rcvg+ ;rcvg[ ;rcvg{ ;rcvg\\ ;rcvg| ;rcvg< ;rcvg> ;rcvg` ;rcvg~ ;rcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receiving-xl receiving-([{''"xl receiving-/xl receiving-$xl'
  - 'rcvg-xl rcvg-([{''"xl rcvg-/xl rcvg-$xl'
  - xfail: ...

- - 'receiving(xl receiving[xl receiving{xl receiving''xl receiving"xl receiving=([{''"-xl receiving([{''"-xl receiving/-xl receiving$-xl'
  - 'rcvg(xl rcvg[xl rcvg{xl rcvg''xl rcvg"xl rcvg=([{''"-xl rcvg([{''"-xl rcvg/-xl rcvg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receiver [receiver {receiver ''receiver "receiver -receiver'
  - '(rcvr [rcvr {rcvr ''rcvr "rcvr -rcvr'
  - xfail: ...

- - '!receiver @receiver #receiver $receiver %receiver ^receiver &receiver *receiver )receiver _receiver =receiver +receiver ]receiver }receiver \\receiver |receiver .receiver ,receiver ;receiver :receiver ?receiver <receiver >receiver `receiver ~receiver /receiver'
  - '!rcvr @rcvr #rcvr $rcvr %rcvr ^rcvr &rcvr *rcvr )rcvr _rcvr =rcvr +rcvr ]rcvr }rcvr \\rcvr |rcvr .rcvr ,rcvr ;rcvr :rcvr ?rcvr <rcvr >rcvr `rcvr ~rcvr /rcvr'
  - xfail: contraction following special characters is ignored

- - '(rcvr [rcvr {rcvr ''rcvr "rcvr -rcvr'
  - '(;rcvr [;rcvr {;rcvr '';rcvr ";rcvr -;rcvr'
  - xfail: ...

- - '!rcvr @rcvr #rcvr $rcvr %rcvr ^rcvr &rcvr *rcvr )rcvr _rcvr =rcvr +rcvr ]rcvr }rcvr \\rcvr |rcvr .rcvr ,rcvr ;rcvr :rcvr ?rcvr <rcvr >rcvr `rcvr ~rcvr /rcvr'
  - '!;rcvr @;rcvr #;rcvr $;rcvr %;rcvr ^;rcvr &;rcvr *;rcvr );rcvr _;rcvr =;rcvr +;rcvr ];rcvr };rcvr \\;rcvr |;rcvr .;rcvr ,;rcvr ;;rcvr :;rcvr ?;rcvr <;rcvr >;rcvr `;rcvr ~;rcvr /;rcvr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receiver xl-([{''"receiver l/-receiver l$-receiver'
  - 'xl-rcvr xl-([{''"rcvr l/-rcvr l$-rcvr'
  - xfail: ...

- - 'xl(receiver xl[receiver xl{receiver xl''receiver xl"receiver xl-=([{''"receiver'
  - 'xl(rcvr xl[rcvr xl{rcvr xl''rcvr xl"rcvr xl-=([{''"rcvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receiver) receiver] receiver} receiver'' receiver" receiver- receiver, receiver. receiver; receiver: receiver? receiver!'
  - 'rcvr) rcvr] rcvr} rcvr'' rcvr" rcvr- rcvr, rcvr. rcvr; rcvr: rcvr? rcvr!'
  - xfail: ...

- - 'receiver@ receiver# receiver$ receiver% receiver^ receiver& receiver* receiver( receiver_ receiver= receiver+ receiver[ receiver{ receiver\\ receiver| receiver< receiver> receiver` receiver~ receiver/'
  - 'rcvr@ rcvr# rcvr$ rcvr% rcvr^ rcvr& rcvr* rcvr( rcvr_ rcvr= rcvr+ rcvr[ rcvr{ rcvr\\ rcvr| rcvr< rcvr> rcvr` rcvr~ rcvr/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvr) rcvr] rcvr} rcvr'' rcvr" rcvr- rcvr, rcvr. rcvr; rcvr: rcvr? rcvr!'
  - ';rcvr) ;rcvr] ;rcvr} ;rcvr'' ;rcvr" ;rcvr- ;rcvr, ;rcvr. ;rcvr; ;rcvr: ;rcvr? ;rcvr!'
  - xfail: ...

- - 'rcvr@ rcvr# rcvr$ rcvr% rcvr^ rcvr& rcvr* rcvr( rcvr_ rcvr= rcvr+ rcvr[ rcvr{ rcvr\\ rcvr| rcvr< rcvr> rcvr` rcvr~ rcvr/'
  - ';rcvr@ ;rcvr# ;rcvr$ ;rcvr% ;rcvr^ ;rcvr& ;rcvr* ;rcvr( ;rcvr_ ;rcvr= ;rcvr+ ;rcvr[ ;rcvr{ ;rcvr\\ ;rcvr| ;rcvr< ;rcvr> ;rcvr` ;rcvr~ ;rcvr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receiver-xl receiver-([{''"xl receiver-/xl receiver-$xl'
  - 'rcvr-xl rcvr-([{''"xl rcvr-/xl rcvr-$xl'
  - xfail: ...

- - 'receiver(xl receiver[xl receiver{xl receiver''xl receiver"xl receiver=([{''"-xl receiver([{''"-xl receiver/-xl receiver$-xl'
  - 'rcvr(xl rcvr[xl rcvr{xl rcvr''xl rcvr"xl rcvr=([{''"-xl rcvr([{''"-xl rcvr/-xl rcvr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receivers [receivers {receivers ''receivers "receivers -receivers'
  - '(rcvrs [rcvrs {rcvrs ''rcvrs "rcvrs -rcvrs'
  - xfail: ...

- - '!receivers @receivers #receivers $receivers %receivers ^receivers &receivers *receivers )receivers _receivers =receivers +receivers ]receivers }receivers \\receivers |receivers .receivers ,receivers ;receivers :receivers ?receivers <receivers >receivers'
  - '!rcvrs @rcvrs #rcvrs $rcvrs %rcvrs ^rcvrs &rcvrs *rcvrs )rcvrs _rcvrs =rcvrs +rcvrs ]rcvrs }rcvrs \\rcvrs |rcvrs .rcvrs ,rcvrs ;rcvrs :rcvrs ?rcvrs <rcvrs >rcvrs'
  - xfail: contraction following special characters is ignored

- - '`receivers ~receivers /receivers'
  - '`rcvrs ~rcvrs /rcvrs'
  - xfail: contraction following special characters is ignored

- - 'rcvrs (rcvrs [rcvrs {rcvrs ''rcvrs "rcvrs -rcvrs !rcvrs @rcvrs #rcvrs $rcvrs %rcvrs ^rcvrs &rcvrs *rcvrs )rcvrs _rcvrs =rcvrs +rcvrs ]rcvrs }rcvrs \\rcvrs |rcvrs .rcvrs ,rcvrs ;rcvrs :rcvrs ?rcvrs <rcvrs >rcvrs `rcvrs ~rcvrs /rcvrs'
  - ';rcvrs (;rcvrs [;rcvrs {;rcvrs '';rcvrs ";rcvrs -;rcvrs !;rcvrs @;rcvrs #;rcvrs $;rcvrs %;rcvrs ^;rcvrs &;rcvrs *;rcvrs );rcvrs _;rcvrs =;rcvrs +;rcvrs ];rcvrs };rcvrs \\;rcvrs |;rcvrs .;rcvrs ,;rcvrs ;;rcvrs :;rcvrs ?;rcvrs <;rcvrs >;rcvrs `;rcvrs ~;rcvrs /;rcvrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receivers xl-([{''"receivers l/-receivers l$-receivers'
  - 'xl-rcvrs xl-([{''"rcvrs l/-rcvrs l$-rcvrs'
  - xfail: ...

- - 'xl(receivers xl[receivers xl{receivers xl''receivers xl"receivers xl-=([{''"receivers'
  - 'xl(rcvrs xl[rcvrs xl{rcvrs xl''rcvrs xl"rcvrs xl-=([{''"rcvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receivers) receivers] receivers} receivers'' receivers" receivers- receivers, receivers. receivers; receivers: receivers? receivers!'
  - 'rcvrs) rcvrs] rcvrs} rcvrs'' rcvrs" rcvrs- rcvrs, rcvrs. rcvrs; rcvrs: rcvrs? rcvrs!'
  - xfail: ...

- - 'receivers@ receivers# receivers$ receivers% receivers^ receivers& receivers* receivers( receivers_ receivers= receivers+ receivers[ receivers{ receivers\\ receivers| receivers< receivers> receivers` receivers~ receivers/'
  - 'rcvrs@ rcvrs# rcvrs$ rcvrs% rcvrs^ rcvrs& rcvrs* rcvrs( rcvrs_ rcvrs= rcvrs+ rcvrs[ rcvrs{ rcvrs\\ rcvrs| rcvrs< rcvrs> rcvrs` rcvrs~ rcvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvrs) rcvrs] rcvrs} rcvrs'' rcvrs" rcvrs- rcvrs, rcvrs. rcvrs; rcvrs: rcvrs? rcvrs! rcvrs@ rcvrs# rcvrs$ rcvrs% rcvrs^ rcvrs& rcvrs* rcvrs( rcvrs_ rcvrs= rcvrs+ rcvrs[ rcvrs{ rcvrs\\ rcvrs| rcvrs< rcvrs> rcvrs` rcvrs~ rcvrs/'
  - ';rcvrs) ;rcvrs] ;rcvrs} ;rcvrs'' ;rcvrs" ;rcvrs- ;rcvrs, ;rcvrs. ;rcvrs; ;rcvrs: ;rcvrs? ;rcvrs! ;rcvrs@ ;rcvrs# ;rcvrs$ ;rcvrs% ;rcvrs^ ;rcvrs& ;rcvrs* ;rcvrs( ;rcvrs_ ;rcvrs= ;rcvrs+ ;rcvrs[ ;rcvrs{ ;rcvrs\\ ;rcvrs| ;rcvrs< ;rcvrs> ;rcvrs` ;rcvrs~ ;rcvrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receivers-xl receivers-([{''"xl receivers-/xl receivers-$xl'
  - 'rcvrs-xl rcvrs-([{''"xl rcvrs-/xl rcvrs-$xl'
  - xfail: ...

- - 'receivers(xl receivers[xl receivers{xl receivers''xl receivers"xl receivers=([{''"-xl receivers([{''"-xl receivers/-xl receivers$-xl'
  - 'rcvrs(xl rcvrs[xl rcvrs{xl rcvrs''xl rcvrs"xl rcvrs=([{''"-xl rcvrs([{''"-xl rcvrs/-xl rcvrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receives [receives {receives ''receives "receives -receives'
  - '(rcvs [rcvs {rcvs ''rcvs "rcvs -rcvs'
  - xfail: ...

- - '!receives @receives #receives $receives %receives ^receives &receives *receives )receives _receives =receives +receives ]receives }receives \\receives |receives .receives ,receives ;receives :receives ?receives <receives >receives `receives ~receives /receives'
  - '!rcvs @rcvs #rcvs $rcvs %rcvs ^rcvs &rcvs *rcvs )rcvs _rcvs =rcvs +rcvs ]rcvs }rcvs \\rcvs |rcvs .rcvs ,rcvs ;rcvs :rcvs ?rcvs <rcvs >rcvs `rcvs ~rcvs /rcvs'
  - xfail: contraction following special characters is ignored

- - 'rcvs  (rcvs [rcvs {rcvs ''rcvs "rcvs -rcvs !rcvs @rcvs #rcvs $rcvs %rcvs ^rcvs &rcvs *rcvs )rcvs _rcvs =rcvs +rcvs ]rcvs }rcvs \\rcvs |rcvs .rcvs ,rcvs ;rcvs :rcvs ?rcvs <rcvs >rcvs `rcvs ~rcvs /rcvs'
  - ';rcvs (;rcvs [;rcvs {;rcvs '';rcvs ";rcvs -;rcvs !;rcvs @;rcvs #;rcvs $;rcvs %;rcvs ^;rcvs &;rcvs *;rcvs );rcvs _;rcvs =;rcvs +;rcvs ];rcvs };rcvs \\;rcvs |;rcvs .;rcvs ,;rcvs ;;rcvs :;rcvs ?;rcvs <;rcvs >;rcvs `;rcvs ~;rcvs /;rcvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receives xl-([{''"receives l/-receives l$-receives'
  - 'xl-rcvs xl-([{''"rcvs l/-rcvs l$-rcvs'
  - xfail: ...

- - 'xl(receives xl[receives xl{receives xl''receives xl"receives xl-=([{''"receives'
  - 'xl(rcvs xl[rcvs xl{rcvs xl''rcvs xl"rcvs xl-=([{''"rcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receives) receives] receives} receives'' receives" receives- receives, receives. receives; receives: receives? receives!'
  - 'rcvs) rcvs] rcvs} rcvs'' rcvs" rcvs- rcvs, rcvs. rcvs; rcvs: rcvs? rcvs!'
  - xfail: ...

- - 'receives@ receives# receives$ receives% receives^ receives& receives* receives( receives_ receives= receives+ receives[ receives{ receives\\ receives| receives< receives> receives` receives~ receives/'
  - 'rcvs@ rcvs# rcvs$ rcvs% rcvs^ rcvs& rcvs* rcvs( rcvs_ rcvs= rcvs+ rcvs[ rcvs{ rcvs\\ rcvs| rcvs< rcvs> rcvs` rcvs~ rcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvs) rcvs] rcvs} rcvs'' rcvs" rcvs- rcvs, rcvs. rcvs; rcvs: rcvs? rcvs! rcvs@ rcvs# rcvs$ rcvs% rcvs^ rcvs& rcvs* rcvs( rcvs_ rcvs= rcvs+ rcvs[ rcvs{ rcvs\\ rcvs| rcvs< rcvs> rcvs` rcvs~ rcvs/'
  - ';rcvs) ;rcvs] ;rcvs} ;rcvs'' ;rcvs" ;rcvs- ;rcvs, ;rcvs. ;rcvs; ;rcvs: ;rcvs? ;rcvs! ;rcvs@ ;rcvs# ;rcvs$ ;rcvs% ;rcvs^ ;rcvs& ;rcvs* ;rcvs( ;rcvs_ ;rcvs= ;rcvs+ ;rcvs[ ;rcvs{ ;rcvs\\ ;rcvs| ;rcvs< ;rcvs> ;rcvs` ;rcvs~ ;rcvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receives-xl receives-([{''"xl receives-/xl receives-$xl'
  - 'rcvs-xl rcvs-([{''"xl rcvs-/xl rcvs-$xl'
  - xfail: ...

- - 'receives(xl receives[xl receives{xl receives''xl receives"xl receives=([{''"-xl receives([{''"-xl receives/-xl receives$-xl'
  - 'rcvs(xl rcvs[xl rcvs{xl rcvs''xl rcvs"xl rcvs=([{''"-xl rcvs([{''"-xl rcvs/-xl rcvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoice [rejoice {rejoice ''rejoice "rejoice -rejoice'
  - '(rjc [rjc {rjc ''rjc "rjc -rjc'
  - xfail: ...

- - '!rejoice @rejoice #rejoice $rejoice %rejoice ^rejoice &rejoice *rejoice )rejoice _rejoice =rejoice +rejoice ]rejoice }rejoice \\rejoice |rejoice .rejoice ,rejoice ;rejoice :rejoice ?rejoice <rejoice >rejoice `rejoice ~rejoice /rejoice'
  - '!rjc @rjc #rjc $rjc %rjc ^rjc &rjc *rjc )rjc _rjc =rjc +rjc ]rjc }rjc \\rjc |rjc .rjc ,rjc ;rjc :rjc ?rjc <rjc >rjc ?rjc `rjc ~rjc /rjc'
  - xfail: contraction following special characters is ignored

- - '(rjc [rjc {rjc ''rjc "rjc -rjc'
  - '(;rjc [;rjc {;rjc '';rjc ";rjc -;rjc'
  - xfail: ...

- - '!rjc @rjc #rjc $rjc %rjc ^rjc &rjc *rjc )rjc _rjc =rjc +rjc ]rjc }rjc \\rjc |rjc .rjc ,rjc ;rjc :rjc ?rjc <rjc >rjc ?rjc `rjc ~rjc /rjc'
  - '!;rjc @;rjc #;rjc $;rjc %;rjc ^;rjc &;rjc *;rjc );rjc _;rjc =;rjc +;rjc ];rjc };rjc \\;rjc |;rjc .;rjc ,;rjc ;;rjc :;rjc ?;rjc <;rjc >;rjc `;rjc ~;rjc /;rjc'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoice xl-([{''"rejoice l/-rejoice l$-rejoice'
  - 'xl-rjc xl-([{''"rjc l/-rjc l$-rjc'
  - xfail: ...

- - 'xl(rejoice xl[rejoice xl{rejoice xl''rejoice xl"rejoice xl-=([{''"rejoice'
  - 'xl(rjc xl[rjc xl{rjc xl''rjc xl"rjc xl-=([{''"rjc'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoice) rejoice] rejoice} rejoice'' rejoice" rejoice- rejoice, rejoice. rejoice; rejoice: rejoice? rejoice!'
  - 'rjc) rjc] rjc} rjc'' rjc" rjc- rjc, rjc. rjc; rjc: rjc? rjc!'
  - xfail: ...

- - 'rejoice@ rejoice# rejoice$ rejoice% rejoice^ rejoice& rejoice* rejoice( rejoice_ rejoice= rejoice+ rejoice[ rejoice{ rejoice\\ rejoice| rejoice< rejoice> rejoice` rejoice~ rejoice/'
  - 'rjc@ rjc# rjc$ rjc% rjc^ rjc& rjc* rjc( rjc_ rjc= rjc+ rjc[ rjc{ rjc\\ rjc| rjc< rjc> rjc` rjc~ rjc/'
  - xfail: contraction followed by special characters is ignored

- - 'rjc) rjc] rjc} rjc'' rjc" rjc- rjc, rjc. rjc; rjc: rjc? rjc!'
  - ';rjc) ;rjc] ;rjc} ;rjc'' ;rjc" ;rjc- ;rjc, ;rjc. ;rjc; ;rjc: ;rjc? ;rjc!'
  - xfail: ...

- - 'rjc@ rjc# rjc$ rjc% rjc^ rjc& rjc* rjc( rjc_ rjc= rjc+ rjc[ rjc{ rjc\\ rjc| rjc< rjc> rjc` rjc~ rjc/'
  - ';rjc@ ;rjc# ;rjc$ ;rjc% ;rjc^ ;rjc& ;rjc* ;rjc( ;rjc_ ;rjc= ;rjc+ ;rjc[ ;rjc{ ;rjc\\ ;rjc| ;rjc< ;rjc> ;rjc` ;rjc~ ;rjc/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoice-xl rejoice-([{''"xl rejoice-/xl rejoice-$xl'
  - 'rjc-xl rjc-([{''"xl rjc-/xl rjc-$xl'
  - xfail: ...

- - 'rejoice(xl rejoice[xl rejoice{xl rejoice''xl rejoice"xl rejoice=([{''"-xl rejoice([{''"-xl rejoice/-xl rejoice$-xl'
  - 'rjc(xl rjc[xl rjc{xl rjc''xl rjc"xl rjc=([{''"-xl rjc([{''"-xl rjc/-xl rjc$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoiced [rejoiced {rejoiced ''rejoiced "rejoiced -rejoiced'
  - '(rjcd [rjcd {rjcd ''rjcd "rjcd -rjcd'
  - xfail: ...

- - '!rejoiced @rejoiced #rejoiced $rejoiced %rejoiced ^rejoiced &rejoiced *rejoiced )rejoiced _rejoiced =rejoiced +rejoiced ]rejoiced }rejoiced \\rejoiced |rejoiced .rejoiced ,rejoiced ;rejoiced :rejoiced ?rejoiced <rejoiced >rejoiced `rejoiced ~rejoiced /rejoiced'
  - '!rjcd @rjcd #rjcd $rjcd %rjcd ^rjcd &rjcd *rjcd )rjcd _rjcd =rjcd +rjcd ]rjcd }rjcd \\rjcd |rjcd .rjcd ,rjcd ;rjcd :rjcd ?rjcd <rjcd >rjcd `rjcd ~rjcd /rjcd'
  - xfail: contraction following special characters is ignored

- - '(rjcd [rjcd {rjcd ''rjcd "rjcd -rjcd'
  - '(;rjcd [;rjcd {;rjcd '';rjcd ";rjcd -;rjcd'
  - xfail: ...

- - '!rjcd @rjcd #rjcd $rjcd %rjcd ^rjcd &rjcd *rjcd )rjcd _rjcd =rjcd +rjcd ]rjcd }rjcd \\rjcd |rjcd .rjcd ,rjcd ;rjcd :rjcd ?rjcd <rjcd >rjcd `rjcd ~rjcd /rjcd'
  - '!;rjcd @;rjcd #;rjcd $;rjcd %;rjcd ^;rjcd &;rjcd *;rjcd );rjcd _;rjcd =;rjcd +;rjcd ];rjcd };rjcd \\;rjcd |;rjcd .;rjcd ,;rjcd ;;rjcd :;rjcd ?;rjcd <;rjcd >;rjcd `;rjcd ~;rjcd /;rjcd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoiced xl-([{''"rejoiced l/-rejoiced l$-rejoiced'
  - 'xl-rjcd xl-([{''"rjcd l/-rjcd l$-rjcd'
  - xfail: ...

- - 'xl(rejoiced xl[rejoiced xl{rejoiced xl''rejoiced xl"rejoiced xl-=([{''"rejoiced'
  - 'xl(rjcd xl[rjcd xl{rjcd xl''rjcd xl"rjcd xl-=([{''"rjcd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoiced) rejoiced] rejoiced} rejoiced'' rejoiced" rejoiced- rejoiced, rejoiced. rejoiced; rejoiced: rejoiced? rejoiced!'
  - 'rjcd) rjcd] rjcd} rjcd'' rjcd" rjcd- rjcd, rjcd. rjcd; rjcd: rjcd? rjcd!'
  - xfail: ...

- - 'rejoiced@ rejoiced# rejoiced$ rejoiced% rejoiced^ rejoiced& rejoiced* rejoiced( rejoiced_ rejoiced= rejoiced+ rejoiced[ rejoiced{ rejoiced\\ rejoiced| rejoiced< rejoiced> rejoiced` rejoiced~ rejoiced/'
  - 'rjcd@ rjcd# rjcd$ rjcd% rjcd^ rjcd& rjcd* rjcd( rjcd_ rjcd= rjcd+ rjcd[ rjcd{ rjcd\\ rjcd| rjcd< rjcd> rjcd` rjcd~ rjcd/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcd) rjcd] rjcd} rjcd'' rjcd" rjcd- rjcd, rjcd. rjcd; rjcd: rjcd? rjcd!'
  - ';rjcd) ;rjcd] ;rjcd} ;rjcd'' ;rjcd" ;rjcd- ;rjcd, ;rjcd. ;rjcd; ;rjcd: ;rjcd? ;rjcd!'
  - xfail: ...

- - 'rjcd@ rjcd# rjcd$ rjcd% rjcd^ rjcd& rjcd* rjcd( rjcd_ rjcd= rjcd+ rjcd[ rjcd{ rjcd\\ rjcd| rjcd< rjcd> rjcd` rjcd~ rjcd/'
  - ';rjcd@ ;rjcd# ;rjcd$ ;rjcd% ;rjcd^ ;rjcd& ;rjcd* ;rjcd( ;rjcd_ ;rjcd= ;rjcd+ ;rjcd[ ;rjcd{ ;rjcd\\ ;rjcd| ;rjcd< ;rjcd> ;rjcd` ;rjcd~ ;rjcd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoiced-xl rejoiced-([{''"xl rejoiced-/xl rejoiced-$xl'
  - 'rjcd-xl rjcd-([{''"xl rjcd-/xl rjcd-$xl'
  - xfail: ...

- - 'rejoiced(xl rejoiced[xl rejoiced{xl rejoiced''xl rejoiced"xl rejoiced=([{''"-xl rejoiced([{''"-xl rejoiced/-xl rejoiced$-xl'
  - 'rjcd(xl rjcd[xl rjcd{xl rjcd''xl rjcd"xl rjcd=([{''"-xl rjcd([{''"-xl rjcd/-xl rjcd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicing [rejoicing {rejoicing ''rejoicing "rejoicing -rejoicing'
  - '(rjcg [rjcg {rjcg ''rjcg "rjcg -rjcg'
  - xfail: ...

- - '!rejoicing @rejoicing #rejoicing $rejoicing %rejoicing ^rejoicing &rejoicing *rejoicing )rejoicing _rejoicing =rejoicing +rejoicing ]rejoicing }rejoicing \\rejoicing |rejoicing .rejoicing ,rejoicing ;rejoicing :rejoicing ?rejoicing <rejoicing >rejoicing'
  - '!rjcg @rjcg #rjcg $rjcg %rjcg ^rjcg &rjcg *rjcg )rjcg _rjcg =rjcg +rjcg ]rjcg }rjcg \\rjcg |rjcg .rjcg ,rjcg ;rjcg :rjcg ?rjcg <rjcg >rjcg'
  - xfail: contraction following special characters is ignored

- - '`rejoicing ~rejoicing /rejoicing'
  - '`rjcg ~rjcg /rjcg'
  - xfail: contraction following special characters is ignored

- - '(rjcg [rjcg {rjcg ''rjcg "rjcg -rjcg'
  - '(;rjcg [;rjcg {;rjcg '';rjcg ";rjcg -;rjcg'
  - xfail: ...

- - '!rjcg @rjcg #rjcg $rjcg %rjcg ^rjcg &rjcg *rjcg )rjcg _rjcg =rjcg +rjcg ]rjcg }rjcg \\rjcg |rjcg .rjcg ,rjcg ;rjcg :rjcg ?rjcg <rjcg >rjcg `rjcg ~rjcg /rjcg'
  - '!;rjcg @;rjcg #;rjcg $;rjcg %;rjcg ^;rjcg &;rjcg *;rjcg );rjcg _;rjcg =;rjcg +;rjcg ];rjcg };rjcg \\;rjcg |;rjcg .;rjcg ,;rjcg ;;rjcg :;rjcg ?;rjcg <;rjcg >;rjcg `;rjcg ~;rjcg /;rjcg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicing xl-([{''"rejoicing l/-rejoicing l$-rejoicing'
  - 'xl-rjcg xl-([{''"rjcg l/-rjcg l$-rjcg'
  - xfail: ...

- - 'xl(rejoicing xl[rejoicing xl{rejoicing xl''rejoicing xl"rejoicing xl-=([{''"rejoicing'
  - 'xl(rjcg xl[rjcg xl{rjcg xl''rjcg xl"rjcg xl-=([{''"rjcg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicing) rejoicing] rejoicing} rejoicing'' rejoicing" rejoicing- rejoicing, rejoicing. rejoicing; rejoicing: rejoicing? rejoicing!'
  - 'rjcg) rjcg] rjcg} rjcg'' rjcg" rjcg- rjcg, rjcg. rjcg; rjcg: rjcg? rjcg!'
  - xfail: ...

- - 'rejoicing@ rejoicing# rejoicing$ rejoicing% rejoicing^ rejoicing& rejoicing* rejoicing( rejoicing_ rejoicing= rejoicing+ rejoicing[ rejoicing{ rejoicing\\ rejoicing| rejoicing< rejoicing> rejoicing` rejoicing~ rejoicing/'
  - 'rjcg@ rjcg# rjcg$ rjcg% rjcg^ rjcg& rjcg* rjcg( rjcg_ rjcg= rjcg+ rjcg[ rjcg{ rjcg\\ rjcg| rjcg< rjcg> rjcg` rjcg~ rjcg/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcg) rjcg] rjcg} rjcg'' rjcg" rjcg- rjcg, rjcg. rjcg; rjcg: rjcg? rjcg!'
  - ';rjcg) ;rjcg] ;rjcg} ;rjcg'' ;rjcg" ;rjcg- ;rjcg, ;rjcg. ;rjcg; ;rjcg: ;rjcg? ;rjcg!'
  - xfail: ...

- - 'rjcg@ rjcg# rjcg$ rjcg% rjcg^ rjcg& rjcg* rjcg( rjcg_ rjcg= rjcg+ rjcg[ rjcg{ rjcg\\ rjcg| rjcg< rjcg> rjcg` rjcg~ rjcg/'
  - ';rjcg@ ;rjcg# ;rjcg$ ;rjcg% ;rjcg^ ;rjcg& ;rjcg* ;rjcg( ;rjcg_ ;rjcg= ;rjcg+ ;rjcg[ ;rjcg{ ;rjcg\\ ;rjcg| ;rjcg< ;rjcg> ;rjcg` ;rjcg~ ;rjcg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicing-xl rejoicing-([{''"xl rejoicing-/xl rejoicing-$xl'
  - 'rjcg-xl rjcg-([{''"xl rjcg-/xl rjcg-$xl'
  - xfail: ...

- - 'rejoicing(xl rejoicing[xl rejoicing{xl rejoicing''xl rejoicing"xl rejoicing=([{''"-xl rejoicing([{''"-xl rejoicing/-xl rejoicing$-xl'
  - 'rjcg(xl rjcg[xl rjcg{xl rjcg''xl rjcg"xl rjcg=([{''"-xl rjcg([{''"-xl rjcg/-xl rjcg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicingly [rejoicingly {rejoicingly ''rejoicingly "rejoicingly -rejoicingly'
  - '(rjcgly [rjcgly {rjcgly ''rjcgly "rjcgly -rjcgly'
  - xfail: ...

- - '!rejoicingly @rejoicingly #rejoicingly $rejoicingly %rejoicingly ^rejoicingly &rejoicingly *rejoicingly )rejoicingly _rejoicingly =rejoicingly +rejoicingly ]rejoicingly }rejoicingly \\rejoicingly |rejoicingly .rejoicingly ,rejoicingly ;rejoicingly :rejoicingly'
  - '!rjcgly @rjcgly #rjcgly $rjcgly %rjcgly ^rjcgly &rjcgly *rjcgly )rjcgly _rjcgly =rjcgly +rjcgly ]rjcgly }rjcgly \\rjcgly |rjcgly .rjcgly ,rjcgly ;rjcgly :rjcgly'
  - xfail: contraction following special characters is ignored

- - '?rejoicingly <rejoicingly >rejoicingly `rejoicingly ~rejoicingly /rejoicingly'
  - '?rjcgly <rjcgly >rjcgly `rjcgly ~rjcgly /rjcgly'
  - xfail: contraction following special characters is ignored

- - '(rjcgly [rjcgly {rjcgly ''rjcgly "rjcgly -rjcgly'
  - '(;rjcgly [;rjcgly {;rjcgly '';rjcgly ";rjcgly -;rjcgly'
  - xfail: ...

- - '!rjcgly @rjcgly #rjcgly $rjcgly %rjcgly ^rjcgly &rjcgly *rjcgly )rjcgly _rjcgly =rjcgly +rjcgly ]rjcgly }rjcgly \\rjcgly |rjcgly .rjcgly ,rjcgly ;rjcgly :rjcgly ?rjcgly <rjcgly >rjcgly `rjcgly ~rjcgly /rjcgly'
  - '!;rjcgly @;rjcgly #;rjcgly $;rjcgly %;rjcgly ^;rjcgly &;rjcgly *;rjcgly );rjcgly _;rjcgly =;rjcgly +;rjcgly ];rjcgly };rjcgly \\;rjcgly |;rjcgly .;rjcgly ,;rjcgly ;;rjcgly :;rjcgly ?;rjcgly <;rjcgly >;rjcgly `;rjcgly ~;rjcgly /;rjcgly'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicingly xl-([{''"rejoicingly l/-rejoicingly l$-rejoicingly'
  - 'xl-rjcgly xl-([{''"rjcgly l/-rjcgly l$-rjcgly'
  - xfail: ...

- - 'xl(rejoicingly xl[rejoicingly xl{rejoicingly xl''rejoicingly xl"rejoicingly xl-=([{''"rejoicingly'
  - 'xl(rjcgly xl[rjcgly xl{rjcgly xl''rjcgly xl"rjcgly xl-=([{''"rjcgly'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicingly) rejoicingly] rejoicingly} rejoicingly'' rejoicingly" rejoicingly- rejoicingly, rejoicingly. rejoicingly; rejoicingly: rejoicingly? rejoicingly!'
  - 'rjcgly) rjcgly] rjcgly} rjcgly'' rjcgly" rjcgly- rjcgly, rjcgly. rjcgly; rjcgly: rjcgly? rjcgly!'
  - xfail: ...

- - 'rejoicingly@ rejoicingly# rejoicingly$ rejoicingly% rejoicingly^ rejoicingly& rejoicingly* rejoicingly( rejoicingly_ rejoicingly= rejoicingly+ rejoicingly[ rejoicingly{ rejoicingly\\ rejoicingly| rejoicingly< rejoicingly> rejoicingly` rejoicingly~ rejoicingly/'
  - 'rjcgly@ rjcgly# rjcgly$ rjcgly% rjcgly^ rjcgly& rjcgly* rjcgly( rjcgly_ rjcgly= rjcgly+ rjcgly[ rjcgly{ rjcgly\\ rjcgly| rjcgly< rjcgly> rjcgly` rjcgly~ rjcgly/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcgly) rjcgly] rjcgly} rjcgly'' rjcgly" rjcgly- rjcgly, rjcgly. rjcgly; rjcgly: rjcgly? rjcgly!'
  - ';rjcgly) ;rjcgly] ;rjcgly} ;rjcgly'' ;rjcgly" ;rjcgly- ;rjcgly, ;rjcgly. ;rjcgly; ;rjcgly: ;rjcgly? ;rjcgly!'
  - xfail: ...

- - 'rjcgly@ rjcgly# rjcgly$ rjcgly% rjcgly^ rjcgly& rjcgly* rjcgly( rjcgly_ rjcgly= rjcgly+ rjcgly[ rjcgly{ rjcgly\\ rjcgly| rjcgly< rjcgly> rjcgly` rjcgly~ rjcgly/'
  - ';rjcgly@ ;rjcgly# ;rjcgly$ ;rjcgly% ;rjcgly^ ;rjcgly& ;rjcgly* ;rjcgly( ;rjcgly_ ;rjcgly= ;rjcgly+ ;rjcgly[ ;rjcgly{ ;rjcgly\\ ;rjcgly| ;rjcgly< ;rjcgly> ;rjcgly` ;rjcgly~ ;rjcgly/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicingly-xl rejoicingly-([{''"xl rejoicingly-/xl rejoicingly-$xl'
  - 'rjcgly-xl rjcgly-([{''"xl rjcgly-/xl rjcgly-$xl'
  - xfail: ...

- - 'rejoicingly(xl rejoicingly[xl rejoicingly{xl rejoicingly''xl rejoicingly"xl rejoicingly=([{''"-xl rejoicingly([{''"-xl rejoicingly/-xl rejoicingly$-xl'
  - 'rjcgly(xl rjcgly[xl rjcgly{xl rjcgly''xl rjcgly"xl rjcgly=([{''"-xl rjcgly([{''"-xl rjcgly/-xl rjcgly$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicinglys [rejoicinglys {rejoicinglys ''rejoicinglys "rejoicinglys -rejoicinglys'
  - '(rjcglys [rjcglys {rjcglys ''rjcglys "rjcglys -rjcglys'
  - xfail: ...

- - '!rejoicinglys @rejoicinglys #rejoicinglys $rejoicinglys %rejoicinglys ^rejoicinglys &rejoicinglys *rejoicinglys )rejoicinglys _rejoicinglys =rejoicinglys +rejoicinglys ]rejoicinglys }rejoicinglys \\rejoicinglys |rejoicinglys .rejoicinglys ,rejoicinglys'
  - '!rjcglys @rjcglys #rjcglys $rjcglys %rjcglys ^rjcglys &rjcglys *rjcglys )rjcglys _rjcglys =rjcglys +rjcglys ]rjcglys }rjcglys \\rjcglys |rjcglys .rjcglys ,rjcglys'
  - xfail: contraction following special characters is ignored

- - ';rejoicinglys :rejoicinglys ?rejoicinglys <rejoicinglys >rejoicinglys `rejoicinglys ~rejoicinglys /rejoicinglys'
  - ';rjcglys :rjcglys ?rjcglys <rjcglys >rjcglys `rjcglys ~rjcglys /rjcglys'
  - xfail: contraction following special characters is ignored

- - 'rjcgly (rjcglys [rjcglys {rjcglys ''rjcglys "rjcglys -rjcglys !rjcglys @rjcglys #rjcglys $rjcglys %rjcglys ^rjcglys &rjcglys *rjcglys )rjcglys _rjcglys =rjcglys +rjcglys ]rjcglys }rjcglys \\rjcglys |rjcglys .rjcglys ,rjcglys ;rjcglys'
  - ';rjcgly (;rjcglys [;rjcglys {;rjcglys '';rjcglys ";rjcglys -;rjcglys !;rjcglys @;rjcglys #;rjcglys $;rjcglys %;rjcglys ^;rjcglys &;rjcglys *;rjcglys );rjcglys _;rjcglys =;rjcglys +;rjcglys ];rjcglys };rjcglys \\;rjcglys |;rjcglys .;rjcglys ,;rjcglys ;;rjcglys'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - ':rjcglys ?rjcglys <rjcglys >rjcglys `rjcglys ~rjcglys /rjcglys'
  - ':;rjcglys ?;rjcglys <;rjcglys >;rjcglys `;rjcglys ~;rjcglys /;rjcglys'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicinglys xl-([{''"rejoicinglys l/-rejoicinglys l$-rejoicinglys'
  - 'xl-rjcglys xl-([{''"rjcglys l/-rjcglys l$-rjcglys'
  - xfail: ...

- - 'xl(rejoicinglys xl[rejoicinglys xl{rejoicinglys xl''rejoicinglys xl"rejoicinglys xl-=([{''"rejoicinglys'
  - 'xl(rjcglys xl[rjcglys xl{rjcglys xl''rjcglys xl"rjcglys xl-=([{''"rjcglys'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicinglys) rejoicinglys] rejoicinglys} rejoicinglys'' rejoicinglys" rejoicinglys- rejoicinglys, rejoicinglys. rejoicinglys; rejoicinglys: rejoicinglys? rejoicinglys!'
  - 'rjcglys) rjcglys] rjcglys} rjcglys'' rjcglys" rjcglys- rjcglys, rjcglys. rjcglys; rjcglys: rjcglys? rjcglys!'
  - xfail: ...

- - 'rejoicinglys@ rejoicinglys# rejoicinglys$ rejoicinglys% rejoicinglys^ rejoicinglys& rejoicinglys* rejoicinglys( rejoicinglys_ rejoicinglys= rejoicinglys+ rejoicinglys[ rejoicinglys{ rejoicinglys\\ rejoicinglys| rejoicinglys< rejoicinglys> rejoicinglys`'
  - 'rjcglys@ rjcglys# rjcglys$ rjcglys% rjcglys^ rjcglys& rjcglys* rjcglys( rjcglys_ rjcglys= rjcglys+ rjcglys[ rjcglys{ rjcglys\\ rjcglys| rjcglys< rjcglys> rjcglys`'
  - xfail: contraction followed by special characters is ignored

- - 'rejoicinglys~ rejoicinglys/'
  - 'rjcglys~ rjcglys/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcglys) rjcglys] rjcglys} rjcglys'' rjcglys" rjcglys- rjcglys, rjcglys. rjcglys; rjcglys: rjcglys? rjcglys! rjcglys@ rjcglys# rjcglys$ rjcglys% rjcglys^ rjcglys& rjcglys* rjcglys( rjcglys_ rjcglys= rjcglys+ rjcglys[ rjcglys{ rjcglys\\'
  - ';rjcglys) ;rjcglys] ;rjcglys} ;rjcglys'' ;rjcglys" ;rjcglys- ;rjcglys, ;rjcglys. ;rjcglys; ;rjcglys: ;rjcglys? ;rjcglys! ;rjcglys@ ;rjcglys# ;rjcglys$ ;rjcglys% ;rjcglys^ ;rjcglys& ;rjcglys* ;rjcglys( ;rjcglys_ ;rjcglys= ;rjcglys+ ;rjcglys[ ;rjcglys{ ;rjcglys\\'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rjcglys| rjcglys< rjcglys> rjcglys` rjcglys~ rjcglys/'
  - ';rjcglys| ;rjcglys< ;rjcglys> ;rjcglys` ;rjcglys~ ;rjcglys/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicinglys-xl rejoicinglys-([{''"xl rejoicinglys-/xl rejoicinglys-$xl'
  - 'rjcglys-xl rjcglys-([{''"xl rjcglys-/xl rjcglys-$xl'
  - xfail: ...

- - 'rejoicinglys(xl rejoicinglys[xl rejoicinglys{xl rejoicinglys''xl rejoicinglys"xl rejoicinglys=([{''"-xl rejoicinglys([{''"-xl rejoicinglys/-xl rejoicinglys$-xl'
  - 'rjcglys(xl rjcglys[xl rjcglys{xl rjcglys''xl rjcglys"xl rjcglys=([{''"-xl rjcglys([{''"-xl rjcglys/-xl rjcglys$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicer [rejoicer {rejoicer ''rejoicer "rejoicer -rejoicer'
  - '(rjcr [rjcr {rjcr ''rjcr "rjcr -rjcr'
  - xfail: ...

- - '!rejoicer @rejoicer #rejoicer $rejoicer %rejoicer ^rejoicer &rejoicer *rejoicer )rejoicer _rejoicer =rejoicer +rejoicer ]rejoicer }rejoicer \\rejoicer |rejoicer .rejoicer ,rejoicer ;rejoicer :rejoicer ?rejoicer <rejoicer >rejoicer `rejoicer ~rejoicer /rejoicer'
  - '!rjcr @rjcr #rjcr $rjcr %rjcr ^rjcr &rjcr *rjcr )rjcr _rjcr =rjcr +rjcr ]rjcr }rjcr \\rjcr |rjcr .rjcr ,rjcr ;rjcr :rjcr ?rjcr <rjcr >rjcr `rjcr ~rjcr /rjcr'
  - xfail: contraction following special characters is ignored

- - '(rjcr [rjcr {rjcr ''rjcr "rjcr -rjcr'
  - '(;rjcr [;rjcr {;rjcr '';rjcr ";rjcr -;rjcr'
  - xfail: ...

- - '!rjcr @rjcr #rjcr $rjcr %rjcr ^rjcr &rjcr *rjcr )rjcr _rjcr =rjcr +rjcr ]rjcr }rjcr \\rjcr |rjcr .rjcr ,rjcr ;rjcr :rjcr ?rjcr <rjcr >rjcr `rjcr ~rjcr /rjcr'
  - '!;rjcr @;rjcr #;rjcr $;rjcr %;rjcr ^;rjcr &;rjcr *;rjcr );rjcr _;rjcr =;rjcr +;rjcr ];rjcr };rjcr \\;rjcr |;rjcr .;rjcr ,;rjcr ;;rjcr :;rjcr ?;rjcr <;rjcr >;rjcr `;rjcr ~;rjcr /;rjcr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicer xl-([{''"rejoicer l/-rejoicer l$-rejoicer'
  - 'xl-rjcr xl-([{''"rjcr l/-rjcr l$-rjcr'
  - xfail: ...

- - 'xl(rejoicer xl[rejoicer xl{rejoicer xl''rejoicer xl"rejoicer xl-=([{''"rejoicer'
  - 'xl(rjcr xl[rjcr xl{rjcr xl''rjcr xl"rjcr xl-=([{''"rjcr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicer) rejoicer] rejoicer} rejoicer'' rejoicer" rejoicer- rejoicer, rejoicer. rejoicer; rejoicer: rejoicer? rejoicer!'
  - 'rjcr) rjcr] rjcr} rjcr'' rjcr" rjcr- rjcr, rjcr. rjcr; rjcr: rjcr? rjcr!'
  - xfail: ...

- - 'rejoicer@ rejoicer# rejoicer$ rejoicer% rejoicer^ rejoicer& rejoicer* rejoicer( rejoicer_ rejoicer= rejoicer+ rejoicer[ rejoicer{ rejoicer\\ rejoicer| rejoicer< rejoicer> rejoicer` rejoicer~ rejoicer/'
  - 'rjcr@ rjcr# rjcr$ rjcr% rjcr^ rjcr& rjcr* rjcr( rjcr_ rjcr= rjcr+ rjcr[ rjcr{ rjcr\\ rjcr| rjcr< rjcr> rjcr` rjcr~ rjcr/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcr) rjcr] rjcr} rjcr'' rjcr" rjcr- rjcr, rjcr. rjcr; rjcr: rjcr? rjcr!'
  - ';rjcr) ;rjcr] ;rjcr} ;rjcr'' ;rjcr" ;rjcr- ;rjcr, ;rjcr. ;rjcr; ;rjcr: ;rjcr? ;rjcr!'
  - xfail: ...

- - 'rjcr@ rjcr# rjcr$ rjcr% rjcr^ rjcr& rjcr* rjcr( rjcr_ rjcr= rjcr+ rjcr[ rjcr{ rjcr\\ rjcr| rjcr< rjcr> rjcr` rjcr~ rjcr/'
  - ';rjcr@ ;rjcr# ;rjcr$ ;rjcr% ;rjcr^ ;rjcr& ;rjcr* ;rjcr( ;rjcr_ ;rjcr= ;rjcr+ ;rjcr[ ;rjcr{ ;rjcr\\ ;rjcr| ;rjcr< ;rjcr> ;rjcr` ;rjcr~ ;rjcr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicer-xl rejoicer-([{''"xl rejoicer-/xl rejoicer-$xl'
  - 'rjcr-xl rjcr-([{''"xl rjcr-/xl rjcr-$xl'
  - xfail: ...

- - 'rejoicer(xl rejoicer[xl rejoicer{xl rejoicer''xl rejoicer"xl rejoicer=([{''"-xl rejoicer([{''"-xl rejoicer/-xl rejoicer$-xl'
  - 'rjcr(xl rjcr[xl rjcr{xl rjcr''xl rjcr"xl rjcr=([{''"-xl rjcr([{''"-xl rjcr/-xl rjcr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicers [rejoicers {rejoicers ''rejoicers "rejoicers -rejoicers'
  - '(rjcrs [rjcrs {rjcrs ''rjcrs "rjcrs -rjcrs'
  - xfail: ...

- - '!rejoicers @rejoicers #rejoicers $rejoicers %rejoicers ^rejoicers &rejoicers *rejoicers )rejoicers _rejoicers =rejoicers +rejoicers ]rejoicers }rejoicers \\rejoicers |rejoicers .rejoicers ,rejoicers ;rejoicers :rejoicers ?rejoicers <rejoicers >rejoicers'
  - '!rjcrs @rjcrs #rjcrs $rjcrs %rjcrs ^rjcrs &rjcrs *rjcrs )rjcrs _rjcrs =rjcrs +rjcrs ]rjcrs }rjcrs \\rjcrs |rjcrs .rjcrs ,rjcrs ;rjcrs :rjcrs ?rjcrs <rjcrs >rjcrs'
  - xfail: contraction following special characters is ignored

- - '`rejoicers ~rejoicers /rejoicers'
  - '`rjcrs ~rjcrs /rjcrs'
  - xfail: contraction following special characters is ignored

- - 'rjcrs (rjcrs [rjcrs {rjcrs ''rjcrs "rjcrs -rjcrs !rjcrs @rjcrs #rjcrs $rjcrs %rjcrs ^rjcrs &rjcrs *rjcrs )rjcrs _rjcrs =rjcrs +rjcrs ]rjcrs }rjcrs \\rjcrs |rjcrs .rjcrs ,rjcrs ;rjcrs :rjcrs ?rjcrs <rjcrs >rjcrs `rjcrs ~rjcrs /rjcrs'
  - ';rjcrs (;rjcrs [;rjcrs {;rjcrs '';rjcrs ";rjcrs -;rjcrs !;rjcrs @;rjcrs #;rjcrs $;rjcrs %;rjcrs ^;rjcrs &;rjcrs *;rjcrs );rjcrs _;rjcrs =;rjcrs +;rjcrs ];rjcrs };rjcrs \\;rjcrs |;rjcrs .;rjcrs ,;rjcrs ;;rjcrs :;rjcrs ?;rjcrs <;rjcrs >;rjcrs `;rjcrs ~;rjcrs /;rjcrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicers xl-([{''"rejoicers l/-rejoicers l$-rejoicers'
  - 'xl-rjcrs xl-([{''"rjcrs l/-rjcrs l$-rjcrs'
  - xfail: ...

- - 'xl(rejoicers xl[rejoicers xl{rejoicers xl''rejoicers xl"rejoicers xl-=([{''"rejoicers'
  - 'xl(rjcrs xl[rjcrs xl{rjcrs xl''rjcrs xl"rjcrs xl-=([{''"rjcrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicers) rejoicers] rejoicers} rejoicers'' rejoicers" rejoicers- rejoicers, rejoicers. rejoicers; rejoicers: rejoicers? rejoicers!'
  - 'rjcrs) rjcrs] rjcrs} rjcrs'' rjcrs" rjcrs- rjcrs, rjcrs. rjcrs; rjcrs: rjcrs? rjcrs!'
  - xfail: ...

- - 'rejoicers@ rejoicers# rejoicers$ rejoicers% rejoicers^ rejoicers& rejoicers* rejoicers( rejoicers_ rejoicers= rejoicers+ rejoicers[ rejoicers{ rejoicers\\ rejoicers| rejoicers< rejoicers> rejoicers` rejoicers~ rejoicers/'
  - 'rjcrs@ rjcrs# rjcrs$ rjcrs% rjcrs^ rjcrs& rjcrs* rjcrs( rjcrs_ rjcrs= rjcrs+ rjcrs[ rjcrs{ rjcrs\\ rjcrs| rjcrs< rjcrs> rjcrs` rjcrs~ rjcrs/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcrs) rjcrs] rjcrs} rjcrs'' rjcrs" rjcrs- rjcrs, rjcrs. rjcrs; rjcrs: rjcrs? rjcrs! rjcrs@ rjcrs# rjcrs$ rjcrs% rjcrs^ rjcrs& rjcrs* rjcrs( rjcrs_ rjcrs= rjcrs+ rjcrs[ rjcrs{ rjcrs\\ rjcrs| rjcrs< rjcrs> rjcrs` rjcrs~ rjcrs/'
  - ';rjcrs) ;rjcrs] ;rjcrs} ;rjcrs'' ;rjcrs" ;rjcrs- ;rjcrs, ;rjcrs. ;rjcrs; ;rjcrs: ;rjcrs? ;rjcrs! ;rjcrs@ ;rjcrs# ;rjcrs$ ;rjcrs% ;rjcrs^ ;rjcrs& ;rjcrs* ;rjcrs( ;rjcrs_ ;rjcrs= ;rjcrs+ ;rjcrs[ ;rjcrs{ ;rjcrs\\ ;rjcrs| ;rjcrs< ;rjcrs> ;rjcrs` ;rjcrs~ ;rjcrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicers-xl rejoicers-([{''"xl rejoicers-/xl rejoicers-$xl'
  - 'rjcrs-xl rjcrs-([{''"xl rjcrs-/xl rjcrs-$xl'
  - xfail: ...

- - 'rejoicers(xl rejoicers[xl rejoicers{xl rejoicers''xl rejoicers"xl rejoicers=([{''"-xl rejoicers([{''"-xl rejoicers/-xl rejoicers$-xl'
  - 'rjcrs(xl rjcrs[xl rjcrs{xl rjcrs''xl rjcrs"xl rjcrs=([{''"-xl rjcrs([{''"-xl rjcrs/-xl rjcrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoices [rejoices {rejoices ''rejoices "rejoices -rejoices'
  - '(rjcs [rjcs {rjcs ''rjcs "rjcs -rjcs'
  - xfail: ...

- - '!rejoices @rejoices #rejoices $rejoices %rejoices ^rejoices &rejoices *rejoices )rejoices _rejoices =rejoices +rejoices ]rejoices }rejoices \\rejoices |rejoices .rejoices ,rejoices ;rejoices :rejoices ?rejoices <rejoices >rejoices `rejoices ~rejoices /rejoices'
  - '!rjcs @rjcs #rjcs $rjcs %rjcs ^rjcs &rjcs *rjcs )rjcs _rjcs =rjcs +rjcs ]rjcs }rjcs \\rjcs |rjcs .rjcs ,rjcs ;rjcs :rjcs ?rjcs <rjcs >rjcs `rjcs ~rjcs /rjcs'
  - xfail: contraction following special characters is ignored

- - 'rjcs (rjcs [rjcs {rjcs ''rjcs "rjcs -rjcs !rjcs @rjcs #rjcs $rjcs %rjcs ^rjcs &rjcs *rjcs )rjcs _rjcs =rjcs +rjcs ]rjcs }rjcs \\rjcs |rjcs .rjcs ,rjcs ;rjcs :rjcs ?rjcs <rjcs >rjcs `rjcs ~rjcs /rjcs'
  - 'rjcs (;rjcs [;rjcs {;rjcs '';rjcs ";rjcs -;rjcs !;rjcs @;rjcs #;rjcs $;rjcs %;rjcs ^;rjcs &;rjcs *;rjcs );rjcs _;rjcs =;rjcs +;rjcs ];rjcs };rjcs \\;rjcs |;rjcs .;rjcs ,;rjcs ;;rjcs :;rjcs ?;rjcs <;rjcs >;rjcs `;rjcs ~;rjcs /;rjcs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoices xl-([{''"rejoices l/-rejoices l$-rejoices'
  - 'xl-rjcs xl-([{''"rjcs l/-rjcs l$-rjcs'
  - xfail: ...

- - 'xl(rejoices xl[rejoices xl{rejoices xl''rejoices xl"rejoices xl-=([{''"rejoices'
  - 'xl(rjcs xl[rjcs xl{rjcs xl''rjcs xl"rjcs xl-=([{''"rjcs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoices) rejoices] rejoices} rejoices'' rejoices" rejoices- rejoices, rejoices. rejoices; rejoices: rejoices? rejoices!'
  - 'rjcs) rjcs] rjcs} rjcs'' rjcs" rjcs- rjcs, rjcs. rjcs; rjcs: rjcs? rjcs!'
  - xfail: ...

- - 'rejoices@ rejoices# rejoices$ rejoices% rejoices^ rejoices& rejoices* rejoices( rejoices_ rejoices= rejoices+ rejoices[ rejoices{ rejoices\\ rejoices| rejoices< rejoices> rejoices` rejoices~ rejoices/'
  - 'rjcs@ rjcs# rjcs$ rjcs% rjcs^ rjcs& rjcs* rjcs( rjcs_ rjcs= rjcs+ rjcs[ rjcs{ rjcs\\ rjcs| rjcs< rjcs> rjcs` rjcs~ rjcs/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcs) rjcs] rjcs} rjcs'' rjcs" rjcs- rjcs, rjcs. rjcs; rjcs: rjcs? rjcs! rjcs@ rjcs# rjcs$ rjcs% rjcs^ rjcs& rjcs* rjcs( rjcs_ rjcs= rjcs+ rjcs[ rjcs{ rjcs\\ rjcs| rjcs< rjcs> rjcs` rjcs~ rjcs/'
  - ';rjcs) ;rjcs] ;rjcs} ;rjcs'' ;rjcs" ;rjcs- ;rjcs, ;rjcs. ;rjcs; ;rjcs: ;rjcs? ;rjcs! ;rjcs@ ;rjcs# ;rjcs$ ;rjcs% ;rjcs^ ;rjcs& ;rjcs* ;rjcs( ;rjcs_ ;rjcs= ;rjcs+ ;rjcs[ ;rjcs{ ;rjcs\\ ;rjcs| ;rjcs< ;rjcs> ;rjcs` ;rjcs~ ;rjcs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoices-xl rejoices-([{''"xl rejoices-/xl rejoices-$xl'
  - 'rjcs-xl rjcs-([{''"xl rjcs-/xl rjcs-$xl'
  - xfail: ...

- - 'rejoices(xl rejoices[xl rejoices{xl rejoices''xl rejoices"xl rejoices=([{''"-xl rejoices([{''"-xl rejoices/-xl rejoices$-xl'
  - 'rjcs(xl rjcs[xl rjcs{xl rjcs''xl rjcs"xl rjcs=([{''"-xl rjcs([{''"-xl rjcs/-xl rjcs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoice [unrejoice {unrejoice ''unrejoice "unrejoice -unrejoice'
  - '(unrjc [unrjc {unrjc ''unrjc "unrjc -unrjc'
  - xfail: ...

- - '!unrejoice @unrejoice #unrejoice $unrejoice %unrejoice ^unrejoice &unrejoice *unrejoice )unrejoice _unrejoice =unrejoice +unrejoice ]unrejoice }unrejoice \\unrejoice |unrejoice .unrejoice ,unrejoice ;unrejoice :unrejoice ?unrejoice <unrejoice >unrejoice'
  - '!unrjc @unrjc #unrjc $unrjc %unrjc ^unrjc &unrjc *unrjc )unrjc _unrjc =unrjc +unrjc ]unrjc }unrjc \\unrjc |unrjc .unrjc ,unrjc ;unrjc :unrjc ?unrjc <unrjc >unrjc'
  - xfail: contraction following special characters is ignored

- - '`unrejoice ~unrejoice /unrejoice'
  - '`unrjc ~unrjc /unrjc'
  - xfail: contraction following special characters is ignored

- - '(unrjc [unrjc {unrjc ''unrjc "unrjc -unrjc'
  - '(;unrjc [;unrjc {;unrjc '';unrjc ";unrjc -;unrjc'
  - xfail: ...

- - '!unrjc @unrjc #unrjc $unrjc %unrjc ^unrjc &unrjc *unrjc )unrjc _unrjc =unrjc +unrjc ]unrjc }unrjc \\unrjc |unrjc .unrjc ,unrjc ;unrjc :unrjc ?unrjc <unrjc >unrjc `unrjc ~unrjc /unrjc'
  - '!;unrjc @;unrjc #;unrjc $;unrjc %;unrjc ^;unrjc &;unrjc *;unrjc );unrjc _;unrjc =;unrjc +;unrjc ];unrjc };unrjc \\;unrjc |;unrjc .;unrjc ,;unrjc ;;unrjc :;unrjc ?;unrjc <;unrjc >;unrjc `;unrjc ~;unrjc /;unrjc'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoice xl-([{''"unrejoice xl/-unrejoice xl$-unrejoice'
  - 'xl-unrjc xl-([{''"unrjc xl/-unrjc xl$-unrjc'
  - xfail: ...

- - 'xl(unrejoice xl[unrejoice xl{unrejoice xl''unrejoice xl"unrejoice xl-=([{''"unrejoice'
  - 'xl(unrjc xl[unrjc xl{unrjc xl''unrjc xl"unrjc xl-=([{''"unrjc'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoice) unrejoice] unrejoice} unrejoice'' unrejoice" unrejoice- unrejoice, unrejoice. unrejoice; unrejoice: unrejoice? unrejoice!'
  - 'unrjc) unrjc] unrjc} unrjc'' unrjc" unrjc- unrjc, unrjc. unrjc; unrjc: unrjc? unrjc!'
  - xfail: ...

- - 'unrejoice@ unrejoice# unrejoice$ unrejoice% unrejoice^ unrejoice& unrejoice* unrejoice( unrejoice_ unrejoice= unrejoice+ unrejoice[ unrejoice{ unrejoice\\ unrejoice| unrejoice< unrejoice> unrejoice` unrejoice~ unrejoice/'
  - 'unrjc@ unrjc# unrjc$ unrjc% unrjc^ unrjc& unrjc* unrjc( unrjc_ unrjc= unrjc+ unrjc[ unrjc{ unrjc\\ unrjc| unrjc< unrjc> unrjc` unrjc~ unrjc/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjc) unrjc] unrjc} unrjc'' unrjc" unrjc- unrjc, unrjc. unrjc; unrjc: unrjc? unrjc!'
  - ';unrjc) ;unrjc] ;unrjc} ;unrjc'' ;unrjc" ;unrjc- ;unrjc, ;unrjc. ;unrjc; ;unrjc: ;unrjc? ;unrjc!'
  - xfail: ...

- - 'unrjc@ unrjc# unrjc$ unrjc% unrjc^ unrjc& unrjc* unrjc( unrjc_ unrjc= unrjc+ unrjc[ unrjc{ unrjc\\ unrjc| unrjc< unrjc> unrjc` unrjc~ unrjc/'
  - ';unrjc@ ;unrjc# ;unrjc$ ;unrjc% ;unrjc^ ;unrjc& ;unrjc* ;unrjc( ;unrjc_ ;unrjc= ;unrjc+ ;unrjc[ ;unrjc{ ;unrjc\\ ;unrjc| ;unrjc< ;unrjc> ;unrjc` ;unrjc~ ;unrjc/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoice-xl unrejoice-([{''"xl unrejoice-/xl unrejoice-$xl'
  - 'unrjc-xl unrjc-([{''"xl unrjc-/xl unrjc-$xl'
  - xfail: ...

- - 'unrejoice(xl unrejoice[xl unrejoice{xl unrejoice''xl unrejoice"xl unrejoice=([{''"-xl unrejoice([{''"-xl unrejoice/-xl unrejoice$-xl'
  - 'unrjc(xl unrjc[xl unrjc{xl unrjc''xl unrjc"xl unrjc=([{''"-xl unrjc([{''"-xl unrjc/-xl unrjc$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoiced [unrejoiced {unrejoiced ''unrejoiced "unrejoiced -unrejoiced'
  - '(unrjcd [unrjcd {unrjcd ''unrjcd "unrjcd -unrjcd'
  - xfail: ...

- - '!unrejoiced @unrejoiced #unrejoiced $unrejoiced %unrejoiced ^unrejoiced &unrejoiced *unrejoiced )unrejoiced _unrejoiced =unrejoiced +unrejoiced ]unrejoiced }unrejoiced \\unrejoiced |unrejoiced .unrejoiced ,unrejoiced ;unrejoiced :unrejoiced ?unrejoiced'
  - '!unrjcd @unrjcd #unrjcd $unrjcd %unrjcd ^unrjcd &unrjcd *unrjcd )unrjcd _unrjcd =unrjcd +unrjcd ]unrjcd }unrjcd \\unrjcd |unrjcd .unrjcd ,unrjcd ;unrjcd :unrjcd ?unrjcd'
  - xfail: contraction following special characters is ignored

- - '<unrejoiced >unrejoiced `unrejoiced ~unrejoiced /unrejoiced'
  - '<unrjcd >unrjcd `unrjcd ~unrjcd /unrjcd'
  - xfail: contraction following special characters is ignored

- - '(unrjcd [unrjcd {unrjcd ''unrjcd "unrjcd -unrjcd'
  - '(;unrjcd [;unrjcd {;unrjcd '';unrjcd ";unrjcd -;unrjcd'
  - xfail: ...

- - '!unrjcd @unrjcd #unrjcd $unrjcd %unrjcd ^unrjcd &unrjcd *unrjcd )unrjcd _unrjcd =unrjcd +unrjcd ]unrjcd }unrjcd \\unrjcd |unrjcd .unrjcd ,unrjcd ;unrjcd :unrjcd ?unrjcd <unrjcd >unrjcd `unrjcd ~unrjcd /unrjcd'
  - '!;unrjcd @;unrjcd #;unrjcd $;unrjcd %;unrjcd ^;unrjcd &;unrjcd *;unrjcd );unrjcd _;unrjcd =;unrjcd +;unrjcd ];unrjcd };unrjcd \\;unrjcd |;unrjcd .;unrjcd ,;unrjcd ;;unrjcd :;unrjcd ?;unrjcd <;unrjcd >;unrjcd `;unrjcd ~;unrjcd /;unrjcd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoiced xl-([{''"unrejoiced xl/-unrejoiced xl$-unrejoiced'
  - 'xl-unrjcd xl-([{''"unrjcd xl/-unrjcd xl$-unrjcd'
  - xfail: ...

- - 'xl(unrejoiced xl[unrejoiced xl{unrejoiced xl''unrejoiced xl"unrejoiced xl-=([{''"unrejoiced'
  - 'xl(unrjcd xl[unrjcd xl{unrjcd xl''unrjcd xl"unrjcd xl-=([{''"unrjcd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoiced) unrejoiced] unrejoiced} unrejoiced'' unrejoiced" unrejoiced- unrejoiced, unrejoiced. unrejoiced; unrejoiced: unrejoiced? unrejoiced!'
  - 'unrjcd) unrjcd] unrjcd} unrjcd'' unrjcd" unrjcd- unrjcd, unrjcd. unrjcd; unrjcd: unrjcd? unrjcd!'
  - xfail: ...

- - 'unrejoiced@ unrejoiced# unrejoiced$ unrejoiced% unrejoiced^ unrejoiced& unrejoiced* unrejoiced( unrejoiced_ unrejoiced= unrejoiced+ unrejoiced[ unrejoiced{ unrejoiced\\ unrejoiced| unrejoiced< unrejoiced> unrejoiced` unrejoiced~ unrejoiced/'
  - 'unrjcd@ unrjcd# unrjcd$ unrjcd% unrjcd^ unrjcd& unrjcd* unrjcd( unrjcd_ unrjcd= unrjcd+ unrjcd[ unrjcd{ unrjcd\\ unrjcd| unrjcd< unrjcd> unrjcd` unrjcd~ unrjcd/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcd) unrjcd] unrjcd} unrjcd'' unrjcd" unrjcd- unrjcd, unrjcd. unrjcd; unrjcd: unrjcd? unrjcd!'
  - ';unrjcd) ;unrjcd] ;unrjcd} ;unrjcd'' ;unrjcd" ;unrjcd- ;unrjcd, ;unrjcd. ;unrjcd; ;unrjcd: ;unrjcd? ;unrjcd!'
  - xfail: ...

- - 'unrjcd@ unrjcd# unrjcd$ unrjcd% unrjcd^ unrjcd& unrjcd* unrjcd( unrjcd_ unrjcd= unrjcd+ unrjcd[ unrjcd{ unrjcd\\ unrjcd| unrjcd< unrjcd> unrjcd` unrjcd~ unrjcd/'
  - ';unrjcd@ ;unrjcd# ;unrjcd$ ;unrjcd% ;unrjcd^ ;unrjcd& ;unrjcd* ;unrjcd( ;unrjcd_ ;unrjcd= ;unrjcd+ ;unrjcd[ ;unrjcd{ ;unrjcd\\ ;unrjcd| ;unrjcd< ;unrjcd> ;unrjcd` ;unrjcd~ ;unrjcd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoiced-xl unrejoiced-([{''"xl unrejoiced-/xl unrejoiced-$xl'
  - 'unrjcd-xl unrjcd-([{''"xl unrjcd-/xl unrjcd-$xl'
  - xfail: ...

- - 'unrejoiced(xl unrejoiced[xl unrejoiced{xl unrejoiced''xl unrejoiced"xl unrejoiced=([{''"-xl unrejoiced([{''"-xl unrejoiced/-xl unrejoiced$-xl'
  - 'unrjcd(xl unrjcd[xl unrjcd{xl unrjcd''xl unrjcd"xl unrjcd=([{''"-xl unrjcd([{''"-xl unrjcd/-xl unrjcd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoicing [unrejoicing {unrejoicing ''unrejoicing "unrejoicing -unrejoicing'
  - '(unrjcg [unrjcg {unrjcg ''unrjcg "unrjcg -unrjcg'
  - xfail: ...

- - '!unrejoicing @unrejoicing #unrejoicing $unrejoicing %unrejoicing ^unrejoicing &unrejoicing *unrejoicing )unrejoicing _unrejoicing =unrejoicing +unrejoicing ]unrejoicing }unrejoicing \\unrejoicing |unrejoicing .unrejoicing ,unrejoicing ;unrejoicing :unrejoicing'
  - '!unrjcg @unrjcg #unrjcg $unrjcg %unrjcg ^unrjcg &unrjcg *unrjcg )unrjcg _unrjcg =unrjcg +unrjcg ]unrjcg }unrjcg \\unrjcg |unrjcg .unrjcg ,unrjcg ;unrjcg :unrjcg'
  - xfail: contraction following special characters is ignored

- - '?unrejoicing <unrejoicing >unrejoicing `unrejoicing ~unrejoicing /unrejoicing'
  - '?unrjcg <unrjcg >unrjcg `unrjcg ~unrjcg /unrjcg'
  - xfail: contraction following special characters is ignored

- - '(unrjcg [unrjcg {unrjcg ''unrjcg "unrjcg -unrjcg'
  - '(;unrjcg [;unrjcg {;unrjcg '';unrjcg ";unrjcg -;unrjcg'
  - xfail: ...

- - '!unrjcg @unrjcg #unrjcg $unrjcg %unrjcg ^unrjcg &unrjcg *unrjcg )unrjcg _unrjcg =unrjcg +unrjcg ]unrjcg }unrjcg \\unrjcg |unrjcg .unrjcg ,unrjcg ;unrjcg :unrjcg ?unrjcg <unrjcg >unrjcg `unrjcg ~unrjcg /unrjcg'
  - '!;unrjcg @;unrjcg #;unrjcg $;unrjcg %;unrjcg ^;unrjcg &;unrjcg *;unrjcg );unrjcg _;unrjcg =;unrjcg +;unrjcg ];unrjcg };unrjcg \\;unrjcg |;unrjcg .;unrjcg ,;unrjcg ;;unrjcg :;unrjcg ?;unrjcg <;unrjcg >;unrjcg `;unrjcg ~;unrjcg /;unrjcg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoicing xl-([{''"unrejoicing xl/-unrejoicing xl$-unrejoicing'
  - 'xl-unrjcg xl-([{''"unrjcg xl/-unrjcg xl$-unrjcg'
  - xfail: ...

- - 'xl(unrejoicing xl[unrejoicing xl{unrejoicing xl''unrejoicing xl"unrejoicing xl-=([{''"unrejoicing'
  - 'xl(unrjcg xl[unrjcg xl{unrjcg xl''unrjcg xl"unrjcg xl-=([{''"unrjcg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoicing) unrejoicing] unrejoicing} unrejoicing'' unrejoicing" unrejoicing- unrejoicing, unrejoicing. unrejoicing; unrejoicing: unrejoicing? unrejoicing!'
  - 'unrjcg) unrjcg] unrjcg} unrjcg'' unrjcg" unrjcg- unrjcg, unrjcg. unrjcg; unrjcg: unrjcg? unrjcg!'
  - xfail: ...

- - 'unrejoicing@ unrejoicing# unrejoicing$ unrejoicing% unrejoicing^ unrejoicing& unrejoicing* unrejoicing( unrejoicing_ unrejoicing= unrejoicing+ unrejoicing[ unrejoicing{ unrejoicing\\ unrejoicing| unrejoicing< unrejoicing> unrejoicing` unrejoicing~ unrejoicing/'
  - 'unrjcg@ unrjcg# unrjcg$ unrjcg% unrjcg^ unrjcg& unrjcg* unrjcg( unrjcg_ unrjcg= unrjcg+ unrjcg[ unrjcg{ unrjcg\\ unrjcg| unrjcg< unrjcg> unrjcg` unrjcg~ unrjcg/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcg) unrjcg] unrjcg} unrjcg'' unrjcg" unrjcg- unrjcg, unrjcg. unrjcg; unrjcg: unrjcg? unrjcg!'
  - ';unrjcg) ;unrjcg] ;unrjcg} ;unrjcg'' ;unrjcg" ;unrjcg- ;unrjcg, ;unrjcg. ;unrjcg; ;unrjcg: ;unrjcg? ;unrjcg!'
  - xfail: ...

- - 'unrjcg@ unrjcg# unrjcg$ unrjcg% unrjcg^ unrjcg& unrjcg* unrjcg( unrjcg_ unrjcg= unrjcg+ unrjcg[ unrjcg{ unrjcg\\ unrjcg| unrjcg< unrjcg> unrjcg` unrjcg~ unrjcg/'
  - ';unrjcg@ ;unrjcg# ;unrjcg$ ;unrjcg% ;unrjcg^ ;unrjcg& ;unrjcg* ;unrjcg( ;unrjcg_ ;unrjcg= ;unrjcg+ ;unrjcg[ ;unrjcg{ ;unrjcg\\ ;unrjcg| ;unrjcg< ;unrjcg> ;unrjcg` ;unrjcg~ ;unrjcg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoicing-xl unrejoicing-([{''"xl unrejoicing-/xl unrejoicing-$xl'
  - 'unrjcg-xl unrjcg-([{''"xl unrjcg-/xl unrjcg-$xl'
  - xfail: ...

- - 'unrejoicing(xl unrejoicing[xl unrejoicing{xl unrejoicing''xl unrejoicing"xl unrejoicing=([{''"-xl unrejoicing([{''"-xl unrejoicing/-xl unrejoicing$-xl'
  - 'unrjcg(xl unrjcg[xl unrjcg{xl unrjcg''xl unrjcg"xl unrjcg=([{''"-xl unrjcg([{''"-xl unrjcg/-xl unrjcg$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoices [unrejoices {unrejoices ''unrejoices "unrejoices -unrejoices'
  - '(unrjcs [unrjcs {unrjcs ''unrjcs "unrjcs -unrjcs'
  - xfail: ...

- - '!unrejoices @unrejoices #unrejoices $unrejoices %unrejoices ^unrejoices &unrejoices *unrejoices )unrejoices _unrejoices =unrejoices +unrejoices ]unrejoices }unrejoices \\unrejoices |unrejoices .unrejoices ,unrejoices ;unrejoices :unrejoices ?unrejoices'
  - '!unrjcs @unrjcs #unrjcs $unrjcs %unrjcs ^unrjcs &unrjcs *unrjcs )unrjcs _unrjcs =unrjcs +unrjcs ]unrjcs }unrjcs \\unrjcs |unrjcs .unrjcs ,unrjcs ;unrjcs :unrjcs ?unrjcs'
  - xfail: contraction following special characters is ignored

- - '<unrejoices >unrejoices `unrejoices ~unrejoices /unrejoices'
  - '<unrjcs >unrjcs `unrjcs ~unrjcs /unrjcs'
  - xfail: contraction following special characters is ignored

- - 'unrjcs (unrjcs [unrjcs {unrjcs ''unrjcs "unrjcs -unrjcs !unrjcs @unrjcs #unrjcs $unrjcs %unrjcs ^unrjcs &unrjcs *unrjcs )unrjcs _unrjcs =unrjcs +unrjcs ]unrjcs }unrjcs \\unrjcs |unrjcs .unrjcs ,unrjcs ;unrjcs :unrjcs ?unrjcs <unrjcs >unrjcs `unrjcs ~unrjcs /unrjc'
  - ';unrjcs (;unrjcs [;unrjcs {;unrjcs '';unrjcs ";unrjcs -;unrjcs !;unrjcs @;unrjcs #;unrjcs $;unrjcs %;unrjcs ^;unrjcs &;unrjcs *;unrjcs );unrjcs _;unrjcs =;unrjcs +;unrjcs ];unrjcs };unrjcs \\;unrjcs |;unrjcs .;unrjcs ,;unrjcs ;;unrjcs :;unrjcs ?;unrjcs <;unrjcs >'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoices xl-([{''"unrejoices xl/-unrejoices xl$-unrejoices'
  - 'xl-unrjcs xl-([{''"unrjcs xl/-unrjcs xl$-unrjcs'
  - xfail: ...

- - 'xl(unrejoices xl[unrejoices xl{unrejoices xl''unrejoices xl"unrejoices xl-=([{''"unrejoices'
  - 'xl(unrjcs xl[unrjcs xl{unrjcs xl''unrjcs xl"unrjcs xl-=([{''"unrjcs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoices) unrejoices] unrejoices} unrejoices'' unrejoices" unrejoices- unrejoices, unrejoices. unrejoices; unrejoices: unrejoices? unrejoices!'
  - 'unrjcs) unrjcs] unrjcs} unrjcs'' unrjcs" unrjcs- unrjcs, unrjcs. unrjcs; unrjcs: unrjcs? unrjcs!'
  - xfail: ...

- - 'unrejoices@ unrejoices# unrejoices$ unrejoices% unrejoices^ unrejoices& unrejoices* unrejoices( unrejoices_ unrejoices= unrejoices+ unrejoices[ unrejoices{ unrejoices\\ unrejoices| unrejoices< unrejoices> unrejoices` unrejoices~ unrejoices/'
  - 'unrjcs@ unrjcs# unrjcs$ unrjcs% unrjcs^ unrjcs& unrjcs* unrjcs( unrjcs_ unrjcs= unrjcs+ unrjcs[ unrjcs{ unrjcs\\ unrjcs| unrjcs< unrjcs> unrjcs` unrjcs~ unrjcs/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcs) unrjcs] unrjcs} unrjcs'' unrjcs" unrjcs- unrjcs, unrjcs. unrjcs; unrjcs: unrjcs? unrjcs! unrjcs@ unrjcs# unrjcs$ unrjcs% unrjcs^ unrjcs& unrjcs* unrjcs( unrjcs_ unrjcs= unrjcs+ unrjcs[ unrjcs{ unrjcs\\ unrjcs| unrjcs< unrjcs> unrjcs` unrjcs~ unrjcs/'
  - ';unrjcs) ;unrjcs] ;unrjcs} ;unrjcs'' ;unrjcs" ;unrjcs- ;unrjcs, ;unrjcs. ;unrjcs; ;unrjcs: ;unrjcs? ;unrjcs! ;unrjcs@ ;unrjcs# ;unrjcs$ ;unrjcs% ;unrjcs^ ;unrjcs& ;unrjcs* ;unrjcs( ;unrjcs_ ;unrjcs= ;unrjcs+ ;unrjcs[ ;unrjcs{ ;unrjcs\\ ;unrjcs| ;unrjcs< ;unrjcs>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoices-xl unrejoices-([{''"xl unrejoices-/xl unrejoices-$xl'
  - 'unrjcs-xl unrjcs-([{''"xl unrjcs-/xl unrjcs-$xl'
  - xfail: ...

- - 'unrejoices(xl unrejoices[xl unrejoices{xl unrejoices''xl unrejoices"xl unrejoices=([{''"-xl unrejoices([{''"-xl unrejoices/-xl unrejoices$-xl'
  - 'unrjcs(xl unrjcs[xl unrjcs{xl unrjcs''xl unrjcs"xl unrjcs=([{''"-xl unrjcs([{''"-xl unrjcs/-xl unrjcs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(said [said {said ''said "said -said'
  - '(sd [sd {sd ''sd "sd -sd'
  - xfail: ...

- - '!said @said #said $said %said ^said &said *said )said _said =said +said ]said }said \\said |said .said ,said ;said :said ?said <said >said `said ~said /said'
  - '!sd @sd #sd $sd %sd ^sd &sd *sd )sd _sd =sd +sd ]sd }sd \\sd |sd .sd ,sd ;sd :sd ?sd <sd >sd ?sd `sd ~sd /sd'
  - xfail: contraction following special characters is ignored

- - '(sd [sd {sd ''sd "sd -sd'
  - '(;sd [;sd {;sd '';sd ";sd -;sd'
  - xfail: ...

- - '!sd @sd #sd $sd %sd ^sd &sd *sd )sd _sd =sd +sd ]sd }sd \\sd |sd .sd ,sd ;sd :sd ?sd <sd >sd ?sd `sd ~sd /sd'
  - '!;sd @;sd #;sd $;sd %;sd ^;sd &;sd *;sd );sd _;sd =;sd +;sd ];sd };sd \\;sd |;sd .;sd ,;sd ;;sd :;sd ?;sd <;sd >;sd `;sd ~;sd /;sd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-said xl-([{''"said l/-said l$-said'
  - 'xl-sd xl-([{''"sd l/-sd l$-sd'
  - xfail: ...

- - 'xl(said xl[said xl{said xl''said xl"said xl-=([{''"said'
  - 'xl(sd xl[sd xl{sd xl''sd xl"sd xl-=([{''"sd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'said) said] said} said'' said" said- said, said. said; said: said? said!'
  - 'sd) sd] sd} sd'' sd" sd- sd, sd. sd; sd: sd? sd!'
  - xfail: ...

- - 'said@ said# said$ said% said^ said& said* said( said_ said= said+ said[ said{ said\\ said| said< said> said` said~ said/'
  - 'sd@ sd# sd$ sd% sd^ sd& sd* sd( sd_ sd= sd+ sd[ sd{ sd\\ sd| sd< sd> sd` sd~ sd/'
  - xfail: contraction followed by special characters is ignored

- - 'sd) sd] sd} sd'' sd" sd- sd, sd. sd; sd: sd? sd!'
  - ';sd) ;sd] ;sd} ;sd'' ;sd" ;sd- ;sd, ;sd. ;sd; ;sd: ;sd? ;sd!'
  - xfail: ...

- - 'sd@ sd# sd$ sd% sd^ sd& sd* sd( sd_ sd= sd+ sd[ sd{ sd\\ sd| sd< sd> sd` sd~ sd/'
  - ';sd@ ;sd# ;sd$ ;sd% ;sd^ ;sd& ;sd* ;sd( ;sd_ ;sd= ;sd+ ;sd[ ;sd{ ;sd\\ ;sd| ;sd< ;sd> ;sd` ;sd~ ;sd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'said-xl said-([{''"xl said-/xl said-$xl'
  - 'sd-xl sd-([{''"xl sd-/xl sd-$xl'
  - xfail: ...

- - 'said(xl said[xl said{xl said''xl said"xl said=([{''"-xl said([{''"-xl said/-xl said$-xl'
  - 'sd(xl sd[xl sd{xl sd''xl sd"xl sd=([{''"-xl sd([{''"-xl sd/-xl sd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(saids [saids {saids ''saids "saids -saids'
  - '(sds [sds {sds ''sds "sds -sds'
  - xfail: ...

- - '!saids @saids #saids $saids %saids ^saids &saids *saids )saids _saids =saids +saids ]saids }saids \\saids |saids .saids ,saids ;saids :saids ?saids <saids >saids `saids ~saids /saids'
  - '!sds @sds #sds $sds %sds ^sds &sds *sds )sds _sds =sds +sds ]sds }sds \\sds |sds .sds ,sds ;sds :sds ?sds <sds >sds ?sds `sds ~sds /sds'
  - xfail: contraction following special characters is ignored

- - 'sds  (sds [sds {sds ''sds "sds -sds !sds @sds #sds $sds %sds ^sds &sds *sds )sds _sds =sds +sds ]sds }sds \\sds |sds .sds ,sds ;sds :sds ?sds <sds >sds ?sds `sds ~sds /sds'
  - ';sds  (;sds [;sds {;sds '';sds ";sds -;sds !;sds @;sds #;sds $;sds %;sds ^;sds &;sds *;sds );sds _;sds =;sds +;sds ];sds };sds \\;sds |;sds .;sds ,;sds ;;sds :;sds ?;sds <;sds >;sds `;sds ~;sds /;sds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-saids xl-([{''"saids l/-saids l$-saids'
  - 'xl-sds xl-([{''"sds l/-sds l$-sds'
  - xfail: ...

- - 'xl(saids xl[saids xl{saids xl''saids xl"saids xl-=([{''"saids'
  - 'xl(sds xl[sds xl{sds xl''sds xl"sds xl-=([{''"sds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'saids) saids] saids} saids'' saids" saids- saids, saids. saids; saids: saids? saids!'
  - 'sds) sds] sds} sds'' sds" sds- sds, sds. sds; sds: sds? sds!'
  - xfail: ...

- - 'saids@ saids# saids$ saids% saids^ saids& saids* saids( saids_ saids= saids+ saids[ saids{ saids\\ saids| saids< saids> saids` saids~ saids/'
  - 'sds@ sds# sds$ sds% sds^ sds& sds* sds( sds_ sds= sds+ sds[ sds{ sds\\ sds| sds< sds> sds` sds~ sds/'
  - xfail: contraction followed by special characters is ignored

- - 'sds) sds] sds} sds'' sds" sds- sds, sds. sds; sds: sds? sds! sds@ sds# sds$ sds% sds^ sds& sds* sds( sds_ sds= sds+ sds[ sds{ sds\\ sds| sds< sds> sds` sds~ sds/'
  - ';sds) ;sds] ;sds} ;sds'' ;sds" ;sds- ;sds, ;sds. ;sds; ;sds: ;sds? ;sds! ;sds@ ;sds# ;sds$ ;sds% ;sds^ ;sds& ;sds* ;sds( ;sds_ ;sds= ;sds+ ;sds[ ;sds{ ;sds\\ ;sds| ;sds< ;sds> ;sds` ;sds~ ;sds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'saids-xl saids-([{''"xl saids-/xl saids-$xl'
  - 'sds-xl sds-([{''"xl sds-/xl sds-$xl'
  - xfail: ...

- - 'saids(xl saids[xl saids{xl saids''xl saids"xl saids=([{''"-xl saids([{''"-xl saids/-xl saids$-xl'
  - 'sds(xl sds[xl sds{xl sds''xl sds"xl sds=([{''"-xl sds([{''"-xl sds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'resaid (resaid [resaid {resaid ''resaid "resaid -resaid !resaid @resaid #resaid $resaid %resaid ^resaid &resaid *resaid )resaid _resaid =resaid +resaid ]resaid }resaid \\resaid |resaid .resaid ,resaid ;resaid :resaid ?resaid <resaid >resaid `resaid ~resaid /resaid'
  - 'resd (resd [resd {resd ''resd "resd -resd !resd @resd #resd $resd %resd ^resd &resd *resd )resd _resd =resd +resd ]resd }resd \\resd |resd .resd ,resd ;resd :resd ?resd <resd >resd ?resd `resd ~resd /resd'
  - xfail: contraction following special characters is ignored

- - 'resd resd (resd [resd {resd ''resd "resd -resd !resd @resd #resd $resd %resd ^resd &resd *resd )resd _resd =resd +resd ]resd }resd \\resd |resd .resd ,resd ;resd :resd ?resd <resd >resd ?resd `resd ~resd /resd'
  - ';resd ;resd (;resd [;resd {;resd '';resd ";resd -;resd !;resd @;resd #;resd $;resd %;resd ^;resd &;resd *;resd );resd _;resd =;resd +;resd ];resd };resd \\;resd |;resd .;resd ,;resd ;;resd :;resd ?;resd <;resd >;resd `;resd ~;resd /;resd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-resaid xl-([{''"resaid l/-resaid l$-resaid xl(resaid xl[resaid xl{resaid xl''resaid xl"resaid xl-=([{''"resaid'
  - 'xl-resd xl-([{''"resd l/-resd l$-resd xl(resd xl[resd xl{resd xl''resd xl"resd xl-=([{''"resd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'resaid) resaid] resaid} resaid'' resaid" resaid- resaid, resaid. resaid; resaid: resaid? resaid! resaid@ resaid# resaid$ resaid% resaid^ resaid& resaid* resaid( resaid_ resaid= resaid+ resaid[ resaid{ resaid\\ resaid| resaid< resaid> resaid` resaid~ resaid/'
  - 'resd) resd] resd} resd'' resd" resd- resd, resd. resd; resd: resd? resd! resd@ resd# resd$ resd% resd^ resd& resd* resd( resd_ resd= resd+ resd[ resd{ resd\\ resd| resd< resd> resd` resd~ resd/'
  - xfail: contraction followed by special characters is ignored

- - 'resd) resd] resd} resd'' resd" resd- resd, resd. resd; resd: resd? resd! resd@ resd# resd$ resd% resd^ resd& resd* resd( resd_ resd= resd+ resd[ resd{ resd\\ resd| resd< resd> resd` resd~ resd/'
  - ';resd) ;resd] ;resd} ;resd'' ;resd" ;resd- ;resd, ;resd. ;resd; ;resd: ;resd? ;resd! ;resd@ ;resd# ;resd$ ;resd% ;resd^ ;resd& ;resd* ;resd( ;resd_ ;resd= ;resd+ ;resd[ ;resd{ ;resd\\ ;resd| ;resd< ;resd> ;resd` ;resd~ ;resd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'resaid-xl resaid-([{''"xl resaid-/xl resaid-$xl resaid(xl resaid[xl resaid{xl resaid''xl resaid"xl resaid=([{''"-xl resaid([{''"-xl resaid/-xl resaid$-xl'
  - 'resd-xl resd-([{''"xl resd-/xl resd-$xl resd(xl resd[xl resd{xl resd''xl resd"xl resd=([{''"-xl resd([{''"-xl resd/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unsaid [unsaid {unsaid ''unsaid "unsaid -unsaid'
  - '(unsd [unsd {unsd ''unsd "unsd -unsd'
  - xfail: ...

- - '!unsaid @unsaid #unsaid $unsaid %unsaid ^unsaid &unsaid *unsaid )unsaid _unsaid =unsaid +unsaid ]unsaid }unsaid \\unsaid |unsaid .unsaid ,unsaid ;unsaid :unsaid ?unsaid <unsaid >unsaid `unsaid ~unsaid /unsaid'
  - '!unsd @unsd #unsd $unsd %unsd ^unsd &unsd *unsd )unsd _unsd =unsd +unsd ]unsd }unsd \\unsd |unsd .unsd ,unsd ;unsd :unsd ?unsd <unsd >unsd ?unsd `unsd ~unsd /unsd'
  - xfail: contraction following special characters is ignored

- - 'unsd (unsd [unsd {unsd ''unsd "unsd -unsd !unsd @unsd #unsd $unsd %unsd ^unsd &unsd *unsd )unsd _unsd =unsd +unsd ]unsd }unsd \\unsd |unsd .unsd ,unsd ;unsd :unsd ?unsd <unsd >unsd ?unsd `unsd ~unsd /unsd'
  - ';unsd (;unsd [;unsd {;unsd '';unsd ";unsd -;unsd !;unsd @;unsd #;unsd $;unsd %;unsd ^;unsd &;unsd *;unsd );unsd _;unsd =;unsd +;unsd ];unsd };unsd \\;unsd |;unsd .;unsd ,;unsd ;;unsd :;unsd ?;unsd <;unsd >;unsd `;unsd ~;unsd /;unsd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unsaid xl-([{''"unsaid l/-unsaid l$-unsaid'
  - 'xl-unsd xl-([{''"unsd l/-unsd l$-unsd'
  - xfail: ...

- - 'xl(unsaid xl[unsaid xl{unsaid xl''unsaid xl"unsaid xl-=([{''"unsaid'
  - 'xl(unsd xl[unsd xl{unsd xl''unsd xl"unsd xl-=([{''"unsd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unsaid) unsaid] unsaid} unsaid'' unsaid" unsaid- unsaid, unsaid. unsaid; unsaid: unsaid? unsaid!'
  - 'unsd) unsd] unsd} unsd'' unsd" unsd- unsd, unsd. unsd; unsd: unsd? unsd!'
  - xfail: ...

- - 'unsaid@ unsaid# unsaid$ unsaid% unsaid^ unsaid& unsaid* unsaid( unsaid_ unsaid= unsaid+ unsaid[ unsaid{ unsaid\\ unsaid| unsaid< unsaid> unsaid` unsaid~ unsaid/'
  - 'unsd@ unsd# unsd$ unsd% unsd^ unsd& unsd* unsd( unsd_ unsd= unsd+ unsd[ unsd{ unsd\\ unsd| unsd< unsd> unsd` unsd~ unsd/'
  - xfail: contraction followed by special characters is ignored

- - 'unsd) unsd] unsd} unsd'' unsd" unsd- unsd, unsd. unsd; unsd: unsd? unsd! unsd@ unsd# unsd$ unsd% unsd^ unsd& unsd* unsd( unsd_ unsd= unsd+ unsd[ unsd{ unsd\\ unsd| unsd< unsd> unsd` unsd~ unsd/'
  - ';unsd) ;unsd] ;unsd} ;unsd'' ;unsd" ;unsd- ;unsd, ;unsd. ;unsd; ;unsd: ;unsd? ;unsd! ;unsd@ ;unsd# ;unsd$ ;unsd% ;unsd^ ;unsd& ;unsd* ;unsd( ;unsd_ ;unsd= ;unsd+ ;unsd[ ;unsd{ ;unsd\\ ;unsd| ;unsd< ;unsd> ;unsd` ;unsd~ ;unsd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unsaid-xl unsaid-([{''"xl unsaid-/xl unsaid-$xl'
  - 'unsd-xl unsd-([{''"xl unsd-/xl unsd-$xl'
  - xfail: ...

- - 'unsaid(xl unsaid[xl unsaid{xl unsaid''xl unsaid"xl unsaid=([{''"-xl unsaid([{''"-xl unsaid/-xl unsaid$-xl'
  - 'unsd(xl unsd[xl unsd{xl unsd''xl unsd"xl unsd=([{''"-xl unsd([{''"-xl unsd/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unsaids [unsaids {unsaids ''unsaids "unsaids -unsaids'
  - '(unsds [unsds {unsds ''unsds "unsds -unsds'
  - xfail: ...

- - '!unsaids @unsaids #unsaids $unsaids %unsaids ^unsaids &unsaids *unsaids )unsaids _unsaids =unsaids +unsaids ]unsaids }unsaids \\unsaids |unsaids .unsaids ,unsaids ;unsaids :unsaids ?unsaids <unsaids >unsaids `unsaids ~unsaids /unsaids'
  - '!unsds @unsds #unsds $unsds %unsds ^unsds &unsds *unsds )unsds _unsds =unsds +unsds ]unsds }unsds \\unsds |unsds .unsds ,unsds ;unsds :unsds ?unsds <unsds >unsds ?unsds `unsds ~unsds /unsds'
  - xfail: contraction following special characters is ignored

- - 'unsds (unsds [unsds {unsds ''unsds "unsds -unsds !unsds @unsds #unsds $unsds %unsds ^unsds &unsds *unsds )unsds _unsds =unsds +unsds ]unsds }unsds \\unsds |unsds .unsds ,unsds ;unsds :unsds ?unsds <unsds >unsds ?unsds `unsds ~unsds /unsds'
  - ';unsds (;unsds [;unsds {;unsds '';unsds ";unsds -;unsds !;unsds @;unsds #;unsds $;unsds %;unsds ^;unsds &;unsds *;unsds );unsds _;unsds =;unsds +;unsds ];unsds };unsds \\;unsds |;unsds .;unsds ,;unsds ;;unsds :;unsds ?;unsds <;unsds >;unsds `;unsds ~;unsds /;unsds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unsaids xl-([{''"unsaids l/-unsaids l$-unsaids'
  - 'xl-unsds xl-([{''"unsds l/-unsds l$-unsds'
  - xfail: ...

- - 'xl(unsaids xl[unsaids xl{unsaids xl''unsaids xl"unsaids xl-=([{''"unsaids'
  - 'xl(unsds xl[unsds xl{unsds xl''unsds xl"unsds xl-=([{''"unsds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unsaids) unsaids] unsaids} unsaids'' unsaids" unsaids- unsaids, unsaids. unsaids; unsaids: unsaids? unsaids!'
  - 'unsds) unsds] unsds} unsds'' unsds" unsds- unsds, unsds. unsds; unsds: unsds? unsds!'
  - xfail: ...

- - 'unsaids@ unsaids# unsaids$ unsaids% unsaids^ unsaids& unsaids* unsaids( unsaids_ unsaids= unsaids+ unsaids[ unsaids{ unsaids\\ unsaids| unsaids< unsaids> unsaids` unsaids~ unsaids/'
  - 'unsds@ unsds# unsds$ unsds% unsds^ unsds& unsds* unsds( unsds_ unsds= unsds+ unsds[ unsds{ unsds\\ unsds| unsds< unsds> unsds` unsds~ unsds/'
  - xfail: contraction followed by special characters is ignored

- - 'unsds) unsds] unsds} unsds'' unsds" unsds- unsds, unsds. unsds; unsds: unsds? unsds! unsds@ unsds# unsds$ unsds% unsds^ unsds& unsds* unsds( unsds_ unsds= unsds+ unsds[ unsds{ unsds\\ unsds| unsds< unsds> unsds` unsds~ unsds/'
  - ';unsds) ;unsds] ;unsds} ;unsds'' ;unsds" ;unsds- ;unsds, ;unsds. ;unsds; ;unsds: ;unsds? ;unsds! ;unsds@ ;unsds# ;unsds$ ;unsds% ;unsds^ ;unsds& ;unsds* ;unsds( ;unsds_ ;unsds= ;unsds+ ;unsds[ ;unsds{ ;unsds\\ ;unsds| ;unsds< ;unsds> ;unsds` ;unsds~ ;unsds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unsaids-xl unsaids-([{''"xl unsaids-/xl unsaids-$xl'
  - 'unsds-xl unsds-([{''"xl unsds-/xl unsds-$xl'
  - xfail: ...

- - 'unsaids(xl unsaids[xl unsaids{xl unsaids''xl unsaids"xl unsaids=([{''"-xl unsaids([{''"-xl unsaids/-xl unsaids$-xl'
  - 'unsds(xl unsds[xl unsds{xl unsds''xl unsds"xl unsds=([{''"-xl unsds([{''"-xl unsds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(shall [shall {shall ''shall "shall -shall'
  - '(% [% {% ''% "% -%'
  - xfail: ...

- - '!shall @shall #shall $shall %shall ^shall &shall *shall )shall _shall =shall +shall ]shall }shall \\shall |shall .shall ,shall ;shall :shall ?shall <shall >shall `shall ~shall /shall'
  - '!% @% #% $% %% ^% &% *% )% _% =% +% ]% }% \\% |% .% ,% ;% :% ?% <% >% `% ~% /%'
  - xfail: contraction following special characters is ignored

- - '(sh [sh {sh ''sh "sh -sh'
  - '(sh [sh {sh ''sh "sh -sh'
  - xfail: ...

- - '!sh @sh #sh $sh %sh ^sh &sh *sh )sh _sh =sh +sh ]sh }sh \\sh |sh .sh ,sh ;sh :sh ?sh <sh >sh `sh ~sh /sh'
  - '!sh @sh #sh $sh %sh ^sh &sh *sh )sh _sh =sh +sh ]sh }sh \\sh |sh .sh ,sh ;sh :sh ?sh <sh >sh `sh ~sh /sh'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-shall xl-([{''"shall l/-shall l$-shall'
  - 'xl-% xl-([{''"% l/-% l$-%'
  - xfail: ...

- - 'xl(shall xl[shall xl{shall xl''shall xl"shall xl-=([{''"shall'
  - 'xl(% xl[% xl{% xl''% xl"% xl-=([{''"%'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'shall) shall] shall} shall'' shall" shall- shall, shall. shall; shall: shall? shall!'
  - '%) %] %} %'' %" %- %, %. %; %: %? %!'
  - xfail: ...

- - 'shall@ shall# shall$ shall% shall^ shall& shall* shall( shall_ shall= shall+ shall[ shall{ shall\\ shall| shall< shall> shall` shall~ shall/'
  - '%@ %# %$ %% %^ %& %* %( %_ %= %+ %[ %{ %\\ %| %< %> %` %~ %/'
  - xfail: contraction followed by special characters is ignored

- - 'sh) sh] sh} sh'' sh" sh- sh, sh. sh; sh: sh? sh!'
  - 'sh) sh] sh} sh'' sh" sh- sh, sh. sh; sh: sh? sh!'
  - xfail: ...

- - 'sh@ sh# sh$ sh% sh^ sh& sh* sh( sh_ sh= sh+ sh[ sh{ sh\\ sh| sh< sh> sh` sh~ sh/'
  - 'sh@ sh# sh$ sh% sh^ sh& sh* sh( sh_ sh= sh+ sh[ sh{ sh\\ sh| sh< sh> sh` sh~ sh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'shall-xl shall-([{''"xl shall-/xl shall-$xl'
  - '%-xl %-([{''"xl %-/xl %-$xl'
  - xfail: ...

- - 'shall(xl shall[xl shall{xl shall''xl shall"xl shall=([{''"-xl shall([{''"-xl shall/-xl shall$-xl'
  - '%(xl %[xl %{xl %''xl %"xl %=([{''"-xl %([{''"-xl %/-xl %$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(should [should {should ''should "should -should'
  - '(%d [%d {%d ''%d "%d -%d'
  - xfail: ...

- - '!should @should #should $should %should ^should &should *should )should _should =should +should ]should }should \\should |should .should ,should ;should :should ?should <should >should `should ~should /should'
  - '!%d @%d #%d $%d %%d ^%d &%d *%d )%d _%d =%d +%d ]%d }%d \\%d |%d .%d ,%d ;%d :%d ?%d <%d >%d ?%d `%d ~%d /%d'
  - xfail: contraction following special characters is ignored

- - '(shd [shd {shd ''shd "shd -shd'
  - '(shd [shd {shd ''shd "shd -shd'
  - xfail: ...

- - '!shd @shd #shd $shd %shd ^shd &shd *shd )shd _shd =shd +shd ]shd }shd \\shd |shd .shd ,shd ;shd :shd ?shd <shd >shd `shd ~shd /shd'
  - '!shd @shd #shd $shd %shd ^shd &shd *shd )shd _shd =shd +shd ]shd }shd \\shd |shd .shd ,shd ;shd :shd ?shd <shd >shd `shd ~shd /shd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-should xl-([{''"should l/-should l$-should'
  - 'xl-%d xl-([{''"%d l/-%d l$-%d'
  - xfail: ...

- - 'xl(should xl[should xl{should xl''should xl"should xl-=([{''"should'
  - 'xl(%d xl[%d xl{%d xl''%d xl"%d xl-=([{''"%d'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'should) should] should} should'' should" should- should, should. should; should: should? should!'
  - '%d) %d] %d} %d'' %d" %d- %d, %d. %d; %d: %d? %d!'
  - xfail: ...

- - 'should@ should# should$ should% should^ should& should* should( should_ should= should+ should[ should{ should\\ should| should< should> should` should~ should/'
  - '%d@ %d# %d$ %d% %d^ %d& %d* %d( %d_ %d= %d+ %d[ %d{ %d\\ %d| %d< %d> %d` %d~ %d/'
  - xfail: contraction followed by special characters is ignored

- - 'shd) shd] shd} shd'' shd" shd- shd, shd. shd; shd: shd? shd!'
  - 'shd) shd] shd} shd'' shd" shd- shd, shd. shd; shd: shd? shd!'
  - xfail: ...

- - 'shd@ shd# shd$ shd% shd^ shd& shd* shd( shd_ shd= shd+ shd[ shd{ shd\\ shd| shd< shd> shd` shd~ shd/'
  - 'shd@ shd# shd$ shd% shd^ shd& shd* shd( shd_ shd= shd+ shd[ shd{ shd\\ shd| shd< shd> shd` shd~ shd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'should-xl should-([{''"xl should-/xl should-$xl'
  - '%d-xl %d-([{''"xl %d-/xl %d-$xl'
  - xfail: ...

- - 'should(xl should[xl should{xl should''xl should"xl should=([{''"-xl should([{''"-xl should/-xl should$-xl'
  - '%d(xl %d[xl %d{xl %d''xl %d"xl %d=([{''"-xl %d([{''"-xl %d/-xl %d$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(shoulds [shoulds {shoulds ''shoulds "shoulds -shoulds'
  - '(%ds [%ds {%ds ''%ds "%ds -%ds'
  - xfail: ...

- - '!shoulds @shoulds #shoulds $shoulds %shoulds ^shoulds &shoulds *shoulds )shoulds _shoulds =shoulds +shoulds ]shoulds }shoulds \\shoulds |shoulds .shoulds ,shoulds ;shoulds :shoulds ?shoulds <shoulds >shoulds `shoulds ~shoulds /shoulds'
  - '!%ds @%ds #%ds $%ds %%ds ^%ds &%ds *%ds )%ds _%ds =%ds +%ds ]%ds }%ds \\%ds |%ds .%ds ,%ds ;%ds :%ds ?%ds <%ds >%ds ?%ds `%ds ~%ds /%ds'
  - xfail: contraction following special characters is ignored

- - 'shds (shds [shds {shds ''shds "shds -shds !shds @shds #shds $shds %shds ^shds &shds *shds )shds _shds =shds +shds ]shds }shds \\shds |shds .shds ,shds ;shds :shds ?shds <shds >shds `shds ~shds /shds'
  - 'shds (shds [shds {shds ''shds "shds -shds !shds @shds #shds $shds %shds ^shds &shds *shds )shds _shds =shds +shds ]shds }shds \\shds |shds .shds ,shds ;shds :shds ?shds <shds >shds `shds ~shds /shds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-shoulds xl-([{''"shoulds l/-shoulds l$-shoulds'
  - 'xl-%ds xl-([{''"%ds l/-%ds l$-%ds'
  - xfail: ...

- - 'xl(shoulds xl[shoulds xl{shoulds xl''shoulds xl"shoulds xl-=([{''"shoulds'
  - 'xl(%ds xl[%ds xl{%ds xl''%ds xl"%ds xl-=([{''"%ds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'shoulds) shoulds] shoulds} shoulds'' shoulds" shoulds- shoulds, shoulds. shoulds; shoulds: shoulds? shoulds!'
  - '%ds) %ds] %ds} %ds'' %ds" %ds- %ds, %ds. %ds; %ds: %ds? %ds!'
  - xfail: ...

- - 'shoulds@ shoulds# shoulds$ shoulds% shoulds^ shoulds& shoulds* shoulds( shoulds_ shoulds= shoulds+ shoulds[ shoulds{ shoulds\\ shoulds| shoulds< shoulds> shoulds` shoulds~ shoulds/'
  - '%ds@ %ds# %ds$ %ds% %ds^ %ds& %ds* %ds( %ds_ %ds= %ds+ %ds[ %ds{ %ds\\ %ds| %ds< %ds> %ds` %ds~ %ds/'
  - xfail: contraction followed by special characters is ignored

- - 'shds) shds] shds} shds'' shds" shds- shds, shds. shds; shds: shds? shds! shds@ shds# shds$ shds% shds^ shds& shds* shds( shds_ shds= shds+ shds[ shds{ shds\\ shds| shds< shds> shds` shds~ shds/'
  - 'shds) shds] shds} shds'' shds" shds- shds, shds. shds; shds: shds? shds! shds@ shds# shds$ shds% shds^ shds& shds* shds( shds_ shds= shds+ shds[ shds{ shds\\ shds| shds< shds> shds` shds~ shds/'
  - xfail: non-contraction of "shds" conflicts with contraction of "shoulds"

- - 'shoulds-xl shoulds-([{''"xl shoulds-/xl shoulds-$xl'
  - '%ds-xl %ds-([{''"xl %ds-/xl %ds-$xl'
  - xfail: ...

- - 'shoulds(xl shoulds[xl shoulds{xl shoulds''xl shoulds"xl shoulds=([{''"-xl shoulds([{''"-xl shoulds/-xl shoulds$-xl'
  - '%ds(xl %ds[xl %ds{xl %ds''xl %ds"xl %ds=([{''"-xl %ds([{''"-xl %ds/-xl %ds$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(so [so {so ''so "so -so'
  - '(s [s {s ''s "s -s'
  - xfail: ...

- - '!so @so #so $so %so ^so &so *so )so _so =so +so ]so }so \\so |so .so ,so ;so :so ?so <so >so `so ~so /so'
  - '!s @s #s $s %s ^s &s *s )s _s =s +s ]s }s \\s |s .s ,s ;s :s ?s <s >s `s ~s /s'
  - xfail: contraction following special characters is ignored

- - '(s [s {s ''s "s -s'
  - '(;s [;s {;s '';s ";s -;s'
  - xfail: ...

- - '!s @s #s $s %s ^s &s *s )s _s =s +s ]s }s \\s |s .s ,s ;s :s ?s <s >s `s ~s /s'
  - '!;s @;s #;s $;s %;s ^;s &;s *;s );s _;s =;s +;s ];s };s \\;s |;s .;s ,;s ;;s :;s ?;s <;s >;s `;s ~;s /;s'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-so xl-([{''"so xl/-so xl$-so'
  - 'xl-s xl-([{''"s xl/-s xl$-s'
  - xfail: ...

- - 'xl(so xl[so xl{so xl''so xl"so xl-=([{''"so'
  - 'xl(s xl[s xl{s xl''s xl"s xl-=([{''"s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'so) so] so} so'' so" so- so, so. so; so: so? so!'
  - 's) s] s} s'' s" s- s, s. s; s: s? s!'
  - xfail: ...

- - 'so@ so# so$ so% so^ so& so* so( so_ so= so+ so[ so{ so\\ so| so< so> so` so~ so/'
  - 's@ s# s$ s% s^ s& s* s( s_ s= s+ s[ s{ s\\ s| s< s> s` s~ s/'
  - xfail: contraction followed by special characters is ignored

- - 's) s] s} s'' s" s- s, s. s; s: s? s!'
  - ';s) ;s] ;s} ;s'' ;s" ;s- ;s, ;s. ;s; ;s: ;s? ;s!'
  - xfail: ...

- - 's@ s# s$ s% s^ s& s* s( s_ s= s+ s[ s{ s\\ s| s< s> s` s~ s/'
  - ';s@ ;s# ;s$ ;s% ;s^ ;s& ;s* ;s( ;s_ ;s= ;s+ ;s[ ;s{ ;s\\ ;s| ;s< ;s> ;s` ;s~ ;s/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'so-xl so-([{''"xl so-/xl so-$xl'
  - 's-xl s-([{''"xl s-/xl s-$xl'
  - xfail: ...

- - 'so(xl so[xl so{xl so''xl so"xl so=([{''"-xl so([{''"-xl so/-xl so$-xl'
  - 's(xl s[xl s{xl s''xl s"xl s=([{''"-xl s([{''"-xl s/-xl s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(still [still {still ''still "still -still'
  - '(/ [/ {/ ''/ "/ -/'
  - xfail: ...

- - '!still @still #still $still %still ^still &still *still )still _still =still +still ]still }still \\still |still .still ,still ;still :still ?still <still >still `still ~still /still'
  - '!/ @/ #/ $/ %/ ^/ &/ */ )/ _/ =/ +/ ]/ }/ \\/ |/ ./ ,/ ;/ :/ ?/ </ >/ `/ ~/ //'
  - xfail: contraction following special characters is ignored

- - '(st [st {st ''st "st -st'
  - '(st [st {st ''st "st -st'
  - xfail: ...

- - '!st @st #st $st /st ^st &st *st )st _st =st +st ]st }st \\st |st .st ,st ;st :st ?st <st >st `st ~st /st'
  - '!st @st #st $st /st ^st &st *st )st _st =st +st ]st }st \\st |st .st ,st ;st :st ?st <st >st `st ~st /st'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-still xl-([{''"still l/-still l$-still'
  - 'xl-/ xl-([{''"/ l/-/ l$-/'
  - xfail: ...

- - 'xl(still xl[still xl{still xl''still xl"still xl-=([{''"still'
  - 'xl(/ xl[/ xl{/ xl''/ xl"/ xl-=([{''"/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'still) still] still} still'' still" still- still, still. still; still: still? still!'
  - '/) /] /} /'' /" /- /, /. /; /: /? /!'
  - xfail: ...

- - 'still@ still# still$ still% still^ still& still* still( still_ still= still+ still[ still{ still\\ still| still< still> still` still~ still/'
  - '/@ /# /$ /% /^ /& /* /( /_ /= /+ /[ /{ /\\ /| /< /> /` /~ //'
  - xfail: contraction followed by special characters is ignored

- - 'st) st] st} st'' st" st- st, st. st; st: st? st!'
  - 'st) st] st} st'' st" st- st, st. st; st: st? st!'
  - xfail: ...

- - 'st@ st# st$ st% st^ st& st* st( st_ st= st+ st[ st{ st\\ st| st< st> st` st~ st/'
  - 'st@ st# st$ st% st^ st& st* st( st_ st= st+ st[ st{ st\\ st| st< st> st` st~ st/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'still-xl still-([{''"xl still-/xl still-$xl'
  - '/-xl /-([{''"xl /-/xl /-$xl'
  - xfail: ...

- - 'still(xl still[xl still{xl still''xl still"xl still=([{''"-xl still([{''"-xl still/-xl still$-xl'
  - '/(xl /[xl /{xl /''xl /"xl /=([{''"-xl /([{''"-xl //-xl /$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(such [such {such ''such "such -such'
  - '(s* [s* {s* ''s* "s* -s*'
  - xfail: ...

- - '!such @such #such $such %such ^such &such *such )such _such =such +such ]such }such \\such |such .such ,such ;such :such ?such <such >such `such ~such /such'
  - '!s* @s* #s* $s* %s* ^s* &s* *s* )s* _s* =s* +s* ]s* }s* \\s* |s* .s* ,s* ;s* :s* ?s* <s* >s* ?s* `s* ~s* /s*'
  - xfail: contraction following special characters is ignored

- - '(sch [sch {sch ''sch "sch -sch'
  - '(sch [sch {sch ''sch "sch -sch'
  - xfail: ...

- - '!sch @sch #sch $sch %sch ^sch &sch *sch )sch _sch =sch +sch ]sch }sch \\sch |sch .sch ,sch ;sch :sch ?sch <sch >sch `sch ~sch /sch'
  - '!sch @sch #sch $sch %sch ^sch &sch *sch )sch _sch =sch +sch ]sch }sch \\sch |sch .sch ,sch ;sch :sch ?sch <sch >sch `sch ~sch /sch'
  - xfail: ...

- - 'xl-such xl-([{''"such l/-such l$-such'
  - 'xl-s* xl-([{''"s* l/-s* l$-s*'
  - xfail: ...

- - 'xl(such xl[such xl{such xl''such xl"such xl-=([{''"such'
  - 'xl(s* xl[s* xl{s* xl''s* xl"s* xl-=([{''"s*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'such) such] such} such'' such" such- such, such. such; such: such? such!'
  - 's*) s*] s*} s*'' s*" s*- s*, s*. s*; s*: s*? s*!'
  - xfail: ...

- - 'such@ such# such$ such% such^ such& such* such( such_ such= such+ such[ such{ such\\ such| such< such> such` such~ such/'
  - 's*@ s*# s*$ s*% s*^ s*& s** s*( s*_ s*= s*+ s*[ s*{ s*\\ s*| s*< s*> s*` s*~ s*/'
  - xfail: contraction followed by special characters is ignored

- - 'sch) sch] sch} sch'' sch" sch- sch, sch. sch; sch: sch? sch!'
  - 'sch) sch] sch} sch'' sch" sch- sch, sch. sch; sch: sch? sch!'
  - xfail: ...

- - 'sch@ sch# sch$ sch% sch^ sch& sch* sch( sch_ sch= sch+ sch[ sch{ sch\\ sch| sch< sch> sch` sch~ sch/'
  - 'sch@ sch# sch$ sch% sch^ sch& sch* sch( sch_ sch= sch+ sch[ sch{ sch\\ sch| sch< sch> sch` sch~ sch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'such-xl such-([{''"xl such-/xl such-$xl'
  - 's*-xl s*-([{''"xl s*-/xl s*-$xl'
  - xfail: ...

- - 'such(xl such[xl such{xl such''xl such"xl such=([{''"-xl such([{''"-xl such/-xl such$-xl'
  - 's*(xl s*[xl s*{xl s*''xl s*"xl s*=([{''"-xl s*([{''"-xl s*/-xl s*$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(suchs [suchs {suchs ''suchs "suchs -suchs'
  - '(s*s [s*s {s*s ''s*s "s*s -s*s'
  - xfail: ...

- - '!suchs @suchs #suchs $suchs %suchs ^suchs &suchs *suchs )suchs _suchs =suchs +suchs ]suchs }suchs \\suchs |suchs .suchs ,suchs ;suchs :suchs ?suchs <suchs >suchs `suchs ~suchs /suchs'
  - '!s*s @s*s #s*s $s*s %s*s ^s*s &s*s *s*s )s*s _s*s =s*s +s*s ]s*s }s*s \\s*s |s*s .s*s ,s*s ;s*s :s*s ?s*s <s*s >s*s ?s*s `s*s ~s*s /s*s'
  - xfail: contraction following special characters is ignored

- - 'schs (schs [schs {schs ''schs "schs -schs !schs @schs #schs $schs %schs ^schs &schs *schs )schs _schs =schs +schs ]schs }schs \\schs |schs .schs ,schs ;schs :schs ?schs <schs >schs `schs ~schs /schs'
  - 'schs (schs [schs {schs ''schs "schs -schs !schs @schs #schs $schs %schs ^schs &schs *schs )schs _schs =schs +schs ]schs }schs \\schs |schs .schs ,schs ;schs :schs ?schs <schs >schs `schs ~schs /schs'
  - xfail: non-contraction of "schs" conflicts witcv contraction of "suchs"

- - 'xl-suchs xl-([{''"suchs l/-suchs l$-suchs'
  - 'xl-s*s xl-([{''"s*s l/-s*s l$-s*s'
  - xfail: ...

- - 'xl(suchs xl[suchs xl{suchs xl''suchs xl"suchs xl-=([{''"suchs'
  - 'xl(s*s xl[s*s xl{s*s xl''s*s xl"s*s xl-=([{''"s*s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'suchs) suchs] suchs} suchs'' suchs" suchs- suchs, suchs. suchs; suchs: suchs? suchs!'
  - 's*s) s*s] s*s} s*s'' s*s" s*s- s*s, s*s. s*s; s*s: s*s? s*s!'
  - xfail: ...

- - 'suchs@ suchs# suchs$ suchs% suchs^ suchs& suchs* suchs( suchs_ suchs= suchs+ suchs[ suchs{ suchs\\ suchs| suchs< suchs> suchs` suchs~ suchs/'
  - 's*s@ s*s# s*s$ s*s% s*s^ s*s& s*s* s*s( s*s_ s*s= s*s+ s*s[ s*s{ s*s\\ s*s| s*s< s*s> s*s` s*s~ s*s/'
  - xfail: contraction followed by special characters is ignored

- - 'schs) schs] schs} schs'' schs" schs- schs, schs. schs; schs: schs? schs! schs@ schs# schs$ schs% schs^ schs& schs* schs( schs_ schs= schs+ schs[ schs{ schs\\ schs| schs< schs> schs` schs~ schs/'
  - 'schs) schs] schs} schs'' schs" schs- schs, schs. schs; schs: schs? schs! schs@ schs# schs$ schs% schs^ schs& schs* schs( schs_ schs= schs+ schs[ schs{ schs\\ schs| schs< schs> schs` schs~ schs/'
  - xfail: non-contraction of "schs" conflicts with contraction of "suchs"

- - 'suchs-xl suchs-([{''"xl suchs-/xl suchs-$xl'
  - 's*s-xl s*s-([{''"xl s*s-/xl s*s-$xl'
  - xfail: ...

- - 'suchs(xl suchs[xl suchs{xl suchs''xl suchs"xl suchs=([{''"-xl suchs([{''"-xl suchs/-xl suchs$-xl'
  - 's*s(xl s*s[xl s*s{xl s*s''xl s*s"xl s*s=([{''"-xl s*s([{''"-xl s*s/-xl s*s$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(that [that {that ''that "that -that'
  - '(t [t {t ''t "t -t'
  - xfail: ...

- - '!that @that #that $that %that ^that &that *that )that _that =that +that ]that }that \\that |that .that ,that ;that :that ?that <that >that `that ~that /that'
  - '!t @t #t $t %t ^t &t *t )t _t =t +t ]t }t \\t |t .t ,t ;t :t ?t <t >t `t ~t /t'
  - xfail: contraction following special characters is ignored

- - '(t [t {t ''t "t -t'
  - '(;t [;t {;t '';t ";t -;t'
  - xfail: ...

- - '!t @t #t $t %t ^t &t *t )t _t =t +t ]t }t \\t |t .t ,t ;t :t ?t <t >t `t ~t /t'
  - '!;t @;t #;t $;t %;t ^;t &;t *;t );t _;t =;t +;t ];t };t \\;t |;t .;t ,;t ;;t :;t ?;t <;t >;t `;t ~;t /;t'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-that xl-([{''"that xl/-that xl$-that'
  - 'xl-t xl-([{''"t xl/-t xl$-t'
  - xfail: ...

- - 'xl(that xl[that xl{that xl''that xl"that xl-=([{''"that'
  - 'xl(t xl[t xl{t xl''t xl"t xl-=([{''"t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'that) that] that} that'' that" that- that, that. that; that: that? that!'
  - 't) t] t} t'' t" t- t, t. t; t: t? t!'
  - xfail: ...

- - 'that@ that# that$ that% that^ that& that* that( that_ that= that+ that[ that{ that\\ that| that< that> that` that~ that/'
  - 't@ t# t$ t% t^ t& t* t( t_ t= t+ t[ t{ t\\ t| t< t> t` t~ t/'
  - xfail: contraction followed by special characters is ignored

- - 't) t] t} t'' t" t- t, t. t; t: t? t!'
  - ';t) ;t] ;t} ;t'' ;t" ;t- ;t, ;t. ;t; ;t: ;t? ;t!'
  - xfail: ...

- - 't@ t# t$ t% t^ t& t* t( t_ t= t+ t[ t{ t\\ t| t< t> t` t~ t/'
  - ';t@ ;t# ;t$ ;t% ;t^ ;t& ;t* ;t( ;t_ ;t= ;t+ ;t[ ;t{ ;t\\ ;t| ;t< ;t> ;t` ;t~ ;t/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'that-xl that-([{''"xl that-/xl that-$xl'
  - 't-xl t-([{''"xl t-/xl t-$xl'
  - xfail: ...

- - 'that(xl that[xl that{xl that''xl that"xl that=([{''"-xl that([{''"-xl that/-xl that$-xl'
  - 't(xl t[xl t{xl t''xl t"xl t=([{''"-xl t([{''"-xl t/-xl t$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(themselves [themselves {themselves ''themselves "themselves -themselves'
  - '(!mvs [!mvs {!mvs ''!mvs "!mvs -!mvs'
  - xfail: ...

- - '!themselves @themselves #themselves $themselves %themselves ^themselves &themselves *themselves )themselves _themselves =themselves +themselves ]themselves }themselves \\themselves |themselves .themselves ,themselves ;themselves :themselves ?themselves <themselv'
  - '!!mvs @!mvs #!mvs $!mvs %!mvs ^!mvs &!mvs *!mvs )!mvs _!mvs =!mvs +!mvs ]!mvs }!mvs \\!mvs |!mvs .!mvs ,!mvs ;!mvs :!mvs ?!mvs <!mvs >!mvs `!mvs ~!mvs /!mvs'
  - xfail: contraction following special characters is ignored

- - '(themvs [themvs {themvs ''themvs "themvs -themvs'
  - '(themvs [themvs {themvs ''themvs "themvs -themvs'
  - xfail: ...

- - '!themvs @themvs #themvs $themvs %themvs ^themvs &themvs *themvs )themvs _themvs =themvs +themvs ]themvs }themvs \\themvs |themvs .themvs ,themvs ;themvs :themvs ?themvs <themvs >themvs `themvs ~themvs /themvs'
  - '!themvs @themvs #themvs $themvs %themvs ^themvs &themvs *themvs )themvs _themvs =themvs +themvs ]themvs }themvs \\themvs |themvs .themvs ,themvs ;themvs :themvs ?themvs <themvs >themvs `themvs ~themvs /themvs'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-themselves xl-([{''"themselves l/-themselves l$-themselves'
  - 'xl-!mvs xl-([{''"!mvs l/-!mvs l$-!mvs'
  - xfail: ...

- - 'xl(themselves xl[themselves xl{themselves xl''themselves xl"themselves xl-=([{''"themselves'
  - 'xl(!mvs xl[!mvs xl{!mvs xl''!mvs xl"!mvs xl-=([{''"!mvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'themselves) themselves] themselves} themselves'' themselves" themselves- themselves, themselves. themselves; themselves: themselves? themselves!'
  - '!mvs) !mvs] !mvs} !mvs'' !mvs" !mvs- !mvs, !mvs. !mvs; !mvs: !mvs? !mvs!'
  - xfail: ...

- - 'themselves@ themselves# themselves$ themselves% themselves^ themselves& themselves* themselves( themselves_ themselves= themselves+ themselves[ themselves{ themselves\\ themselves| themselves< themselves> themselves` themselves~ themselves/'
  - '!mvs@ !mvs# !mvs$ !mvs% !mvs^ !mvs& !mvs* !mvs( !mvs_ !mvs= !mvs+ !mvs[ !mvs{ !mvs\\ !mvs| !mvs< !mvs> !mvs` !mvs~ !mvs/'
  - xfail: contraction followed by special characters is ignored

- - 'themvs) themvs] themvs} themvs'' themvs" themvs- themvs, themvs. themvs; themvs: themvs? themvs!'
  - 'themvs) themvs] themvs} themvs'' themvs" themvs- themvs, themvs. themvs; themvs: themvs? themvs!'
  - xfail: ...

- - 'themvs@ themvs# themvs$ themvs% themvs^ themvs& themvs* themvs( themvs_ themvs= themvs+ themvs[ themvs{ themvs\\ themvs| themvs< themvs> themvs` themvs~ themvs/'
  - 'themvs@ themvs# themvs$ themvs% themvs^ themvs& themvs* themvs( themvs_ themvs= themvs+ themvs[ themvs{ themvs\\ themvs| themvs< themvs> themvs` themvs~ themvs/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'themselves-xl themselves-([{''"xl themselves-/xl themselves-$xl'
  - '!mvs-xl !mvs-([{''"xl !mvs-/xl !mvs-$xl'
  - xfail: ...

- - 'themselves(xl themselves[xl themselves{xl themselves''xl themselves"xl themselves=([{''"-xl themselves([{''"-xl themselves/-xl themselves$-xl'
  - '!mvs(xl !mvs[xl !mvs{xl !mvs''xl !mvs"xl !mvs=([{''"-xl !mvs([{''"-xl !mvs/-xl !mvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(themselvess [themselvess {themselvess ''themselvess "themselvess -themselvess'
  - '(!mvss [!mvss {!mvss ''!mvss "!mvss -!mvss'
  - xfail: ...

- - '!themselvess @themselvess #themselvess $themselvess %themselvess ^themselvess &themselvess *themselvess )themselvess _themselvess =themselvess +themselvess ]themselvess }themselvess \\themselvess |themselvess .themselvess ,themselvess ;themselvess :themselvess ?'
  - '!!mvss @!mvss #!mvss $!mvss %!mvss ^!mvss &!mvss *!mvss )!mvss _!mvss =!mvss +!mvss ]!mvss }!mvss \\!mvss |!mvss .!mvss ,!mvss ;!mvss :!mvss ?!mvss <!mvss >!mvss `!mvss ~!mvss /!mvss'
  - xfail: contraction following special characters is ignored

- - 'themvss (themvss [themvss {themvss ''themvss "themvss -themvss !themvss @themvss #themvss $themvss %themvss ^themvss &themvss *themvss )themvss _themvss =themvss +themvss ]themvss }themvss \\themvss |themvss .themvss ,themvss ;themvss :themvss ?themvss <themvss >'
  - 'themvss (themvss [themvss {themvss ''themvss "themvss -themvss !themvss @themvss #themvss $themvss %themvss ^themvss &themvss *themvss )themvss _themvss =themvss +themvss ]themvss }themvss \\themvss |themvss .themvss ,themvss ;themvss :themvss ?themvss <themvss >'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-themselvess xl-([{''"themselvess l/-themselvess l$-themselvess'
  - 'xl-!mvss xl-([{''"!mvss l/-!mvss l$-!mvss'
  - xfail: ...

- - 'xl(themselvess xl[themselvess xl{themselvess xl''themselvess xl"themselvess xl-=([{''"themselvess'
  - 'xl(!mvss xl[!mvss xl{!mvss xl''!mvss xl"!mvss xl-=([{''"!mvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'themselvess) themselvess] themselvess} themselvess'' themselvess" themselvess- themselvess, themselvess. themselvess; themselvess: themselvess? themselvess!'
  - '!mvss) !mvss] !mvss} !mvss'' !mvss" !mvss- !mvss, !mvss. !mvss; !mvss: !mvss? !mvss!'
  - xfail: ...

- - 'themselvess@ themselvess# themselvess$ themselvess% themselvess^ themselvess& themselvess* themselvess( themselvess_ themselvess= themselvess+ themselvess[ themselvess{ themselvess\\ themselvess| themselvess< themselvess> themselvess` themselvess~ themselvess/'
  - '!mvss@ !mvss# !mvss$ !mvss% !mvss^ !mvss& !mvss* !mvss( !mvss_ !mvss= !mvss+ !mvss[ !mvss{ !mvss\\ !mvss| !mvss< !mvss> !mvss` !mvss~ !mvss/'
  - xfail: contraction followed by special characters is ignored

- - 'themvss) themvss] themvss} themvss'' themvss" themvss- themvss, themvss. themvss; themvss: themvss? themvss! themvss@ themvss# themvss$ themvss% themvss^ themvss& themvss* themvss( themvss_ themvss= themvss+ themvss[ themvss{ themvss\\ themvss| themvss< themvss>'
  - 'themvss) themvss] themvss} themvss'' themvss" themvss- themvss, themvss. themvss; themvss: themvss? themvss! themvss@ themvss# themvss$ themvss% themvss^ themvss& themvss* themvss( themvss_ themvss= themvss+ themvss[ themvss{ themvss\\ themvss| themvss< themvss>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'themselvess-xl themselvess-([{''"xl themselvess-/xl themselvess-$xl'
  - '!mvss-xl !mvss-([{''"xl !mvss-/xl !mvss-$xl'
  - xfail: ...

- - 'themselvess(xl themselvess[xl themselvess{xl themselvess''xl themselvess"xl themselvess=([{''"-xl themselvess([{''"-xl themselvess/-xl themselvess$-xl'
  - '!mvss(xl !mvss[xl !mvss{xl !mvss''xl !mvss"xl !mvss=([{''"-xl !mvss([{''"-xl !mvss/-xl !mvss$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(this [this {this ''this "this -this'
  - '(? [? {? ''? "? -?'
  - xfail: ...

- - '!this @this #this $this %this ^this &this *this )this _this =this +this ]this }this \\this |this .this ,this ;this :this ?this <this >this `this ~this /this'
  - '!? @? #? $? %? ^? &? *? )? _? =? +? ]? }? \\? |? .? ,? ;? :? ?? <? >? `? ~? /?'
  - xfail: contraction following special characters is ignored

- - '(th [th {th ''th "th -th'
  - '(th [th {th ''th "th -th'
  - xfail: ...

- - '!th @th #th $th ?th ^th &th *th )th _th =th +th ]th }th \\th |th .th ,th ;th :th ?th <th >th `th ~th ?th'
  - '!th @th #th $th ?th ^th &th *th )th _th =th +th ]th }th \\th |th .th ,th ;th :th ?th <th >th `th ~th ?th'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-this xl-([{''"this l?-this l$-this'
  - 'xl-? xl-([{''"? l?-? l$-?'
  - xfail: ...

- - 'xl(this xl[this xl{this xl''this xl"this xl-=([{''"this'
  - 'xl(? xl[? xl{? xl''? xl"? xl-=([{''"?'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'this) this] this} this'' this" this- this, this. this; this: this? this!'
  - '?) ?] ?} ?'' ?" ?- ?, ?. ?; ?: ?? ?!'
  - xfail: ...

- - 'this@ this# this$ this% this^ this& this* this( this_ this= this+ this[ this{ this\\ this| this< this> this` this~ this/'
  - '?@ ?# ?$ ?% ?^ ?& ?* ?( ?_ ?= ?+ ?[ ?{ ?\\ ?| ?< ?> ?` ?~ ?/'
  - xfail: contraction followed by special characters is ignored

- - 'th) th] th} th'' th" th- th, th. th; th: th? th!'
  - 'th) th] th} th'' th" th- th, th. th; th: th? th!'
  - xfail: ...

- - 'th@ th# th$ th% th^ th& th* th( th_ th= th+ th[ th{ th\\ th| th< th> th` th~ th/'
  - 'th@ th# th$ th% th^ th& th* th( th_ th= th+ th[ th{ th\\ th| th< th> th` th~ th/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'this-xl this-([{''"xl this-?l this-$xl'
  - '?-xl ?-([{''"xl ?-?l ?-$xl'
  - xfail: ...

- - 'this(xl this[xl this{xl this''xl this"xl this=([{''"-xl this([{''"-xl this/-xl this$-xl'
  - '?(xl ?[xl ?{xl ?''xl ?"xl ?=([{''"-xl ?([{''"-xl ?/-xl ?$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(thyself [thyself {thyself ''thyself "thyself -thyself'
  - '(?yf [?yf {?yf ''?yf "?yf -?yf'
  - xfail: ...

- - '!thyself @thyself #thyself $thyself %thyself ^thyself &thyself *thyself )thyself _thyself =thyself +thyself ]thyself }thyself \\thyself |thyself .thyself ,thyself ;thyself :thyself ?thyself <thyself >thyself `thyself ~thyself /thyself'
  - '!?yf @?yf #?yf $?yf %?yf ^?yf &?yf *?yf )?yf _?yf =?yf +?yf ]?yf }?yf \\?yf |?yf .?yf ,?yf ;?yf :?yf ??yf <?yf >?yf `?yf ~?yf /?yf'
  - xfail: contraction following special characters is ignored

- - '(thyf [thyf {thyf ''thyf "thyf -thyf'
  - '(thyf [thyf {thyf ''thyf "thyf -thyf'
  - xfail: ...

- - '!thyf @thyf #thyf $thyf %thyf ^thyf &thyf *thyf )thyf _thyf =thyf +thyf ]thyf }thyf \\thyf |thyf .thyf ,thyf ;thyf :thyf ?thyf <thyf >thyf `thyf ~thyf /thyf'
  - '!thyf @thyf #thyf $thyf %thyf ^thyf &thyf *thyf )thyf _thyf =thyf +thyf ]thyf }thyf \\thyf |thyf .thyf ,thyf ;thyf :thyf ?thyf <thyf >thyf `thyf ~thyf /thyf'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-thyself xl-([{''"thyself l/-thyself l$-thyself'
  - 'xl-?yf xl-([{''"?yf l/-?yf l$-?yf'
  - xfail: ...

- - 'xl(thyself xl[thyself xl{thyself xl''thyself xl"thyself xl-=([{''"thyself'
  - 'xl(?yf xl[?yf xl{?yf xl''?yf xl"?yf xl-=([{''"?yf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'thyself) thyself] thyself} thyself'' thyself" thyself- thyself, thyself. thyself; thyself: thyself? thyself!'
  - '?yf) ?yf] ?yf} ?yf'' ?yf" ?yf- ?yf, ?yf. ?yf; ?yf: ?yf? ?yf!'
  - xfail: ...

- - 'thyself@ thyself# thyself$ thyself% thyself^ thyself& thyself* thyself( thyself_ thyself= thyself+ thyself[ thyself{ thyself\\ thyself| thyself< thyself> thyself` thyself~ thyself/'
  - '?yf@ ?yf# ?yf$ ?yf% ?yf^ ?yf& ?yf* ?yf( ?yf_ ?yf= ?yf+ ?yf[ ?yf{ ?yf\\ ?yf| ?yf< ?yf> ?yf` ?yf~ ?yf/'
  - xfail: contraction followed by special characters is ignored

- - 'thyf) thyf] thyf} thyf'' thyf" thyf- thyf, thyf. thyf; thyf: thyf? thyf!'
  - 'thyf) thyf] thyf} thyf'' thyf" thyf- thyf, thyf. thyf; thyf: thyf? thyf!'
  - xfail: ...

- - 'thyf@ thyf# thyf$ thyf% thyf^ thyf& thyf* thyf( thyf_ thyf= thyf+ thyf[ thyf{ thyf\\ thyf| thyf< thyf> thyf` thyf~ thyf/'
  - 'thyf@ thyf# thyf$ thyf% thyf^ thyf& thyf* thyf( thyf_ thyf= thyf+ thyf[ thyf{ thyf\\ thyf| thyf< thyf> thyf` thyf~ thyf/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'thyself-xl thyself-([{''"xl thyself-/xl thyself-$xl'
  - '?yf-xl ?yf-([{''"xl ?yf-/xl ?yf-$xl'
  - xfail: ...

- - 'thyself(xl thyself[xl thyself{xl thyself''xl thyself"xl thyself=([{''"-xl thyself([{''"-xl thyself/-xl thyself$-xl'
  - '?yf(xl ?yf[xl ?yf{xl ?yf''xl ?yf"xl ?yf=([{''"-xl ?yf([{''"-xl ?yf/-xl ?yf$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(thyselfs [thyselfs {thyselfs ''thyselfs "thyselfs -thyselfs'
  - '(?yfs [?yfs {?yfs ''?yfs "?yfs -?yfs'
  - xfail: ...

- - '!thyselfs @thyselfs #thyselfs $thyselfs %thyselfs ^thyselfs &thyselfs *thyselfs )thyselfs _thyselfs =thyselfs +thyselfs ]thyselfs }thyselfs \\thyselfs |thyselfs .thyselfs ,thyselfs ;thyselfs :thyselfs ?thyselfs <thyselfs >thyselfs `thyselfs ~thyselfs /thyselfs'
  - '!?yfs @?yfs #?yfs $?yfs %?yfs ^?yfs &?yfs *?yfs )?yfs _?yfs =?yfs +?yfs ]?yfs }?yfs \\?yfs |?yfs .?yfs ,?yfs ;?yfs :?yfs ??yfs <?yfs >?yfs `?yfs ~?yfs /?yfs'
  - xfail: contraction following special characters is ignored

- - 'thyfs (thyfs [thyfs {thyfs ''thyfs "thyfs -thyfs !thyfs @thyfs #thyfs $thyfs %thyfs ^thyfs &thyfs *thyfs )thyfs _thyfs =thyfs +thyfs ]thyfs }thyfs \\thyfs |thyfs .thyfs ,thyfs ;thyfs :thyfs ?thyfs <thyfs >thyfs `thyfs ~thyfs /thyfs'
  - 'thyfs (thyfs [thyfs {thyfs ''thyfs "thyfs -thyfs !thyfs @thyfs #thyfs $thyfs %thyfs ^thyfs &thyfs *thyfs )thyfs _thyfs =thyfs +thyfs ]thyfs }thyfs \\thyfs |thyfs .thyfs ,thyfs ;thyfs :thyfs ?thyfs <thyfs >thyfs `thyfs ~thyfs /thyfs'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-thyselfs xl-([{''"thyselfs l/-thyselfs l$-thyselfs'
  - 'xl-?yfs xl-([{''"?yfs l/-?yfs l$-?yfs'
  - xfail: ...

- - 'xl(thyselfs xl[thyselfs xl{thyselfs xl''thyselfs xl"thyselfs xl-=([{''"thyselfs'
  - 'xl(?yfs xl[?yfs xl{?yfs xl''?yfs xl"?yfs xl-=([{''"?yfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'thyselfs) thyselfs] thyselfs} thyselfs'' thyselfs" thyselfs- thyselfs, thyselfs. thyselfs; thyselfs: thyselfs? thyselfs!'
  - '?yfs) ?yfs] ?yfs} ?yfs'' ?yfs" ?yfs- ?yfs, ?yfs. ?yfs; ?yfs: ?yfs? ?yfs!'
  - xfail: ...

- - 'thyselfs@ thyselfs# thyselfs$ thyselfs% thyselfs^ thyselfs& thyselfs* thyselfs( thyselfs_ thyselfs= thyselfs+ thyselfs[ thyselfs{ thyselfs\\ thyselfs| thyselfs< thyselfs> thyselfs` thyselfs~ thyselfs/'
  - '?yfs@ ?yfs# ?yfs$ ?yfs% ?yfs^ ?yfs& ?yfs* ?yfs( ?yfs_ ?yfs= ?yfs+ ?yfs[ ?yfs{ ?yfs\\ ?yfs| ?yfs< ?yfs> ?yfs` ?yfs~ ?yfs/'
  - xfail: contraction followed by special characters is ignored

- - 'thyfs) thyfs] thyfs} thyfs'' thyfs" thyfs- thyfs, thyfs. thyfs; thyfs: thyfs? thyfs! thyfs@ thyfs# thyfs$ thyfs% thyfs^ thyfs& thyfs* thyfs( thyfs_ thyfs= thyfs+ thyfs[ thyfs{ thyfs\\ thyfs| thyfs< thyfs> thyfs` thyfs~ thyfs/'
  - 'thyfs) thyfs] thyfs} thyfs'' thyfs" thyfs- thyfs, thyfs. thyfs; thyfs: thyfs? thyfs! thyfs@ thyfs# thyfs$ thyfs% thyfs^ thyfs& thyfs* thyfs( thyfs_ thyfs= thyfs+ thyfs[ thyfs{ thyfs\\ thyfs| thyfs< thyfs> thyfs` thyfs~ thyfs/'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'thyselfs-xl thyselfs-([{''"xl thyselfs-/xl thyselfs-$xl'
  - '?yfs-xl ?yfs-([{''"xl ?yfs-/xl ?yfs-$xl'
  - xfail: ...

- - 'thyselfs(xl thyselfs[xl thyselfs{xl thyselfs''xl thyselfs"xl thyselfs=([{''"-xl thyselfs([{''"-xl thyselfs/-xl thyselfs$-xl'
  - '?yfs(xl ?yfs[xl ?yfs{xl ?yfs''xl ?yfs"xl ?yfs=([{''"-xl ?yfs([{''"-xl ?yfs/-xl ?yfs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(today [today {today ''today "today -today'
  - '(td [td {td ''td "td -td'
  - xfail: ...

- - '!today @today #today $today %today ^today &today *today )today _today =today +today ]today }today \\today |today .today ,today ;today :today ?today <today >today `today ~today /today'
  - '!td @td #td $td %td ^td &td *td )td _td =td +td ]td }td \\td |td .td ,td ;td :td ?td <td >td ?td `td ~td /td'
  - xfail: contraction following special characters is ignored

- - '(td [td {td ''td "td -td'
  - '(;td [;td {;td '';td ";td -;td'
  - xfail: ...

- - '!td @td #td $td %td ^td &td *td )td _td =td +td ]td }td \\td |td .td ,td ;td :td ?td <td >td ?td `td ~td /td'
  - '!;td @;td #;td $;td %;td ^;td &;td *;td );td _;td =;td +;td ];td };td \\;td |;td .;td ,;td ;;td :;td ?;td <;td >;td `;td ~;td /;td'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-today xl-([{''"today l/-today l$-today'
  - 'xl-td xl-([{''"td l/-td l$-td'
  - xfail: ...

- - 'xl(today xl[today xl{today xl''today xl"today xl-=([{''"today'
  - 'xl(td xl[td xl{td xl''td xl"td xl-=([{''"td'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'today) today] today} today'' today" today- today, today. today; today: today? today!'
  - 'td) td] td} td'' td" td- td, td. td; td: td? td!'
  - xfail: ...

- - 'today@ today# today$ today% today^ today& today* today( today_ today= today+ today[ today{ today\\ today| today< today> today` today~ today/'
  - 'td@ td# td$ td% td^ td& td* td( td_ td= td+ td[ td{ td\\ td| td< td> td` td~ td/'
  - xfail: contraction followed by special characters is ignored

- - 'td) td] td} td'' td" td- td, td. td; td: td? td!'
  - ';td) ;td] ;td} ;td'' ;td" ;td- ;td, ;td. ;td; ;td: ;td? ;td!'
  - xfail: ...

- - 'td@ td# td$ td% td^ td& td* td( td_ td= td+ td[ td{ td\\ td| td< td> td` td~ td/'
  - ';td@ ;td# ;td$ ;td% ;td^ ;td& ;td* ;td( ;td_ ;td= ;td+ ;td[ ;td{ ;td\\ ;td| ;td< ;td> ;td` ;td~ ;td/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'today-xl today-([{''"xl today-/xl today-$xl'
  - 'td-xl td-([{''"xl td-/xl td-$xl'
  - xfail: ...

- - 'today(xl today[xl today{xl today''xl today"xl today=([{''"-xl today([{''"-xl today/-xl today$-xl'
  - 'td(xl td[xl td{xl td''xl td"xl td=([{''"-xl td([{''"-xl td/-xl td$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(todays [todays {todays ''todays "todays -todays'
  - '(tds [tds {tds ''tds "tds -tds'
  - xfail: ...

- - '!todays @todays #todays $todays %todays ^todays &todays *todays )todays _todays =todays +todays ]todays }todays \\todays |todays .todays ,todays ;todays :todays ?todays <todays >todays `todays ~todays /todays'
  - '!tds @tds #tds $tds %tds ^tds &tds *tds )tds _tds =tds +tds ]tds }tds \\tds |tds .tds ,tds ;tds :tds ?tds <tds >tds ?tds `tds ~tds /tds'
  - xfail: contraction following special characters is ignored

- - 'tds (tds [tds {tds ''tds "tds -tds !tds @tds #tds $tds %tds ^tds &tds *tds )tds _tds =tds +tds ]tds }tds \\tds |tds .tds ,tds ;tds :tds ?tds <tds >tds ?tds `tds ~tds /tds'
  - ';tds (;tds [;tds {;tds '';tds ";tds -;tds !;tds @;tds #;tds $;tds %;tds ^;tds &;tds *;tds );tds _;tds =;tds +;tds ];tds };tds \\;tds |;tds .;tds ,;tds ;;tds :;tds ?;tds <;tds >;tds `;tds ~;tds /;tds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-todays xl-([{''"todays l/-todays l$-todays'
  - 'xl-tds xl-([{''"tds l/-tds l$-tds'
  - xfail: ...

- - 'xl(todays xl[todays xl{todays xl''todays xl"todays xl-=([{''"todays'
  - 'xl(tds xl[tds xl{tds xl''tds xl"tds xl-=([{''"tds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'todays) todays] todays} todays'' todays" todays- todays, todays. todays; todays: todays? todays!'
  - 'tds) tds] tds} tds'' tds" tds- tds, tds. tds; tds: tds? tds!'
  - xfail: ...

- - 'todays@ todays# todays$ todays% todays^ todays& todays* todays( todays_ todays= todays+ todays[ todays{ todays\\ todays| todays< todays> todays` todays~ todays/'
  - 'tds@ tds# tds$ tds% tds^ tds& tds* tds( tds_ tds= tds+ tds[ tds{ tds\\ tds| tds< tds> tds` tds~ tds/'
  - xfail: contraction followed by special characters is ignored

- - 'tds) tds] tds} tds'' tds" tds- tds, tds. tds; tds: tds? tds! tds@ tds# tds$ tds% tds^ tds& tds* tds( tds_ tds= tds+ tds[ tds{ tds\\ tds| tds< tds> tds` tds~ tds/'
  - ';tds) ;tds] ;tds} ;tds'' ;tds" ;tds- ;tds, ;tds. ;tds; ;tds: ;tds? ;tds! ;tds@ ;tds# ;tds$ ;tds% ;tds^ ;tds& ;tds* ;tds( ;tds_ ;tds= ;tds+ ;tds[ ;tds{ ;tds\\ ;tds| ;tds< ;tds> ;tds` ;tds~ ;tds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'todays-xl todays-([{''"xl todays-/xl todays-$xl'
  - 'tds-xl tds-([{''"xl tds-/xl tds-$xl'
  - xfail: ...

- - 'todays(xl todays[xl todays{xl todays''xl todays"xl todays=([{''"-xl todays([{''"-xl todays/-xl todays$-xl'
  - 'tds(xl tds[xl tds{xl tds''xl tds"xl tds=([{''"-xl tds([{''"-xl tds/-xl tds$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(together [together {together ''together "together -together'
  - '(tgr [tgr {tgr ''tgr "tgr -tgr'
  - xfail: ...

- - '!together @together #together $together %together ^together &together *together )together _together =together +together ]together }together \\together |together .together ,together ;together :together ?together <together >together `together ~together /together'
  - '!tgr @tgr #tgr $tgr %tgr ^tgr &tgr *tgr )tgr _tgr =tgr +tgr ]tgr }tgr \\tgr |tgr .tgr ,tgr ;tgr :tgr ?tgr <tgr >tgr `tgr ~tgr /tgr'
  - xfail: contraction following special characters is ignored

- - '(tgr [tgr {tgr ''tgr "tgr -tgr'
  - '(;tgr [;tgr {;tgr '';tgr ";tgr -;tgr'
  - xfail: ...

- - '!tgr @tgr #tgr $tgr %tgr ^tgr &tgr *tgr )tgr _tgr =tgr +tgr ]tgr }tgr \\tgr |tgr .tgr ,tgr ;tgr :tgr ?tgr <tgr >tgr ?tgr `tgr ~tgr /tgr'
  - '!;tgr @;tgr #;tgr $;tgr %;tgr ^;tgr &;tgr *;tgr );tgr _;tgr =;tgr +;tgr ];tgr };tgr \\;tgr |;tgr .;tgr ,;tgr ;;tgr :;tgr ?;tgr <;tgr >;tgr `;tgr ~;tgr /;tgr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-together xl-([{''"together l/-together l$-together'
  - 'xl-tgr xl-([{''"tgr l/-tgr l$-tgr'
  - xfail: ...

- - 'xl(together xl[together xl{together xl''together xl"together xl-=([{''"together'
  - 'xl(tgr xl[tgr xl{tgr xl''tgr xl"tgr xl-=([{''"tgr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'together) together] together} together'' together" together- together, together. together; together: together? together!'
  - 'tgr) tgr] tgr} tgr'' tgr" tgr- tgr, tgr. tgr; tgr: tgr? tgr!'
  - xfail: ...

- - 'together@ together# together$ together% together^ together& together* together( together_ together= together+ together[ together{ together\\ together| together< together> together` togeth'
  - 'tgr@ tgr# tgr$ tgr% tgr^ tgr& tgr* tgr( tgr_ tgr= tgr+ tgr[ tgr{ tgr\\ tgr| tgr< tgr> tgr` tgr~ tgr/'
  - xfail: contraction followed by special characters is ignored

- - 'tgr) tgr] tgr} tgr'' tgr" tgr- tgr, tgr. tgr; tgr: tgr? tgr!'
  - ';tgr) ;tgr] ;tgr} ;tgr'' ;tgr" ;tgr- ;tgr, ;tgr. ;tgr; ;tgr: ;tgr? ;tgr!'
  - xfail: ...

- - 'tgr@ tgr# tgr$ tgr% tgr^ tgr& tgr* tgr( tgr_ tgr= tgr+ tgr[ tgr{ tgr\\ tgr| tgr< tgr> tgr` tgr~ tgr/'
  - ';tgr@ ;tgr# ;tgr$ ;tgr% ;tgr^ ;tgr& ;tgr* ;tgr( ;tgr_ ;tgr= ;tgr+ ;tgr[ ;tgr{ ;tgr\\ ;tgr| ;tgr< ;tgr> ;tgr` ;tgr~ ;tgr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'together-xl together-([{''"xl together-/xl together-$xl'
  - 'tgr-xl tgr-([{''"xl tgr-/xl tgr-$xl'
  - xfail: ...

- - 'together(xl together[xl together{xl together''xl together"xl together=([{''"-xl together([{''"-xl together/-xl together$-xl'
  - 'tgr(xl tgr[xl tgr{xl tgr''xl tgr"xl tgr=([{''"-xl tgr([{''"-xl tgr/-xl tgr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(togethers [togethers {togethers ''togethers "togethers -togethers'
  - '(tgrs [tgrs {tgrs ''tgrs "tgrs -tgrs'
  - xfail: ...

- - '!togethers @togethers #togethers $togethers %togethers ^togethers &togethers *togethers )togethers _togethers =togethers +togethers ]togethers }togethers \\togethers |togethers .togethers ,togethers ;togethers :togethers ?togethers <togethers >togethers'
  - '!tgrs @tgrs #tgrs $tgrs %tgrs ^tgrs &tgrs *tgrs )tgrs _tgrs =tgrs +tgrs ]tgrs }tgrs \\tgrs |tgrs .tgrs ,tgrs ;tgrs :tgrs ?tgrs <tgrs >tgrs'
  - xfail: contraction following special characters is ignored

- - '`togethers ~togethers /togethers'
  - '`tgrs ~tgrs /tgrs'
  - xfail: contraction following special characters is ignored

- - 'tgrs (tgrs [tgrs {tgrs ''tgrs "tgrs -tgrs !tgrs @tgrs #tgrs $tgrs %tgrs ^tgrs &tgrs *tgrs )tgrs _tgrs =tgrs +tgrs ]tgrs }tgrs \\tgrs |tgrs .tgrs ,tgrs ;tgrs :tgrs ?tgrs <tgrs >tgrs ?tgrs `tgrs ~tgrs /tgrs'
  - ';tgrs (;tgrs [;tgrs {;tgrs '';tgrs ";tgrs -;tgrs !;tgrs @;tgrs #;tgrs $;tgrs %;tgrs ^;tgrs &;tgrs *;tgrs );tgrs _;tgrs =;tgrs +;tgrs ];tgrs };tgrs \\;tgrs |;tgrs .;tgrs ,;tgrs ;;tgrs :;tgrs ?;tgrs <;tgrs >;tgrs `;tgrs ~;tgrs /;tgrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-togethers xl-([{''"togethers l/-togethers l$-togethers'
  - 'xl-tgrs xl-([{''"tgrs l/-tgrs l$-tgrs'
  - xfail: ...

- - 'xl(togethers xl[togethers xl{togethers xl''togethers xl"togethers xl-=([{''"togethers'
  - 'xl(tgrs xl[tgrs xl{tgrs xl''tgrs xl"tgrs xl-=([{''"tgrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'togethers) togethers] togethers} togethers'' togethers" togethers- togethers, togethers. togethers; togethers: togethers? togethers!'
  - 'tgrs) tgrs] tgrs} tgrs'' tgrs" tgrs- tgrs, tgrs. tgrs; tgrs: tgrs? tgrs!'
  - xfail: ...

- - 'togethers@ togethers# togethers$ togethers% togethers^ togethers& togethers* togethers( togethers_ togethers= togethers+ togethers[ togethers{ togethers\\ togethers| togethers< togethers> togethers` togeth'
  - 'tgrs@ tgrs# tgrs$ tgrs% tgrs^ tgrs& tgrs* tgrs( tgrs_ tgrs= tgrs+ tgrs[ tgrs{ tgrs\\ tgrs| tgrs< tgrs> tgrs` tgrs~ tgrs/'
  - xfail: contraction followed by special characters is ignored

- - 'tgrs) tgrs] tgrs} tgrs'' tgrs" tgrs- tgrs, tgrs. tgrs; tgrs: tgrs? tgrs! tgrs@ tgrs# tgrs$ tgrs% tgrs^ tgrs& tgrs* tgrs( tgrs_ tgrs= tgrs+ tgrs[ tgrs{ tgrs\\ tgrs| tgrs< tgrs> tgrs` tgrs~ tgrs/'
  - ';tgrs) ;tgrs] ;tgrs} ;tgrs'' ;tgrs" ;tgrs- ;tgrs, ;tgrs. ;tgrs; ;tgrs: ;tgrs? ;tgrs! ;tgrs@ ;tgrs# ;tgrs$ ;tgrs% ;tgrs^ ;tgrs& ;tgrs* ;tgrs( ;tgrs_ ;tgrs= ;tgrs+ ;tgrs[ ;tgrs{ ;tgrs\\ ;tgrs| ;tgrs< ;tgrs> ;tgrs` ;tgrs~ ;tgrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'togethers-xl togethers-([{''"xl togethers-/xl togethers-$xl'
  - 'tgrs-xl tgrs-([{''"xl tgrs-/xl tgrs-$xl'
  - xfail: ...

- - 'togethers(xl togethers[xl togethers{xl togethers''xl togethers"xl togethers=([{''"-xl togethers([{''"-xl togethers/-xl togethers$-xl'
  - 'tgrs(xl tgrs[xl tgrs{xl tgrs''xl tgrs"xl tgrs=([{''"-xl tgrs([{''"-xl tgrs/-xl tgrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(untogether [untogether {untogether ''untogether "untogether -untogether !untogether @untogether #untogether $untogether %untogether ^untogether &untogether *untogether )untogether _untogether =untogether +untogether ]untogether }untogether \\untogether'
  - '(untgr [untgr {untgr ''untgr "untgr -untgr !untgr @untgr #untgr $untgr %untgr ^untgr &untgr *untgr )untgr _untgr =untgr +untgr ]untgr }untgr \\untgr'
  - xfail: contraction following special characters is ignored

- - '|untogether .untogether ,untogether ;untogether :untogether ?untogether <untogether >untogether `untogether ~untogether /untogether'
  - '|untgr .untgr ,untgr ;untgr :untgr ?untgr <untgr >untgr `untgr ~untgr /untgr'
  - xfail: contraction following special characters is ignored

- - 'untgr (untgr [untgr {untgr ''untgr "untgr -untgr !untgr @untgr #untgr $untgr %untgr ^untgr &untgr *untgr )untgr _untgr =untgr +untgr ]untgr }untgr \\untgr |untgr .untgr ,untgr ;untgr :untgr ?untgr <untgr >untgr ?untgr `untgr ~untgr /untgr'
  - ';untgr (;untgr [;untgr {;untgr '';untgr ";untgr -;untgr !;untgr @;untgr #;untgr $;untgr %;untgr ^;untgr &;untgr *;untgr );untgr _;untgr =;untgr +;untgr ];untgr };untgr \\;untgr |;untgr .;untgr ,;untgr ;;untgr :;untgr ?;untgr <;untgr >;untgr `;untgr ~;untgr /;untgr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-untogether xl-([{''"untogether l/-untogether l$-untogether xl(untogether xl[untogether xl{untogether xl''untogether xl"untogether xl-=([{''"untogether'
  - 'xl-untgr xl-([{''"untgr l/-untgr l$-untgr -  xl(untgr xl[untgr xl{untgr xl''untgr xl"untgr xl-=([{''"untgr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'untogether) untogether] untogether} untogether'' untogether" untogether- untogether, untogether. untogether; untogether: untogether? untogether! untogether@ untogether# untogether$ untogether% untogether^ untogether& untogether* untogether( untogether_'
  - 'untgr) untgr] untgr} untgr'' untgr" untgr- untgr, untgr. untgr; untgr: untgr? untgr! untgr@ untgr# untgr$ untgr% untgr^ untgr& untgr* untgr( untgr_'
  - xfail: contraction followed by special characters is ignored

- - 'untogether= untogether+ untogether[ untogether{ untogether\\ untogether| untogether< untogether> untogether` untogeth'
  - 'untgr= untgr+ untgr[ untgr{ untgr\\ untgr| untgr< untgr> untgr` untgr~ untgr/'
  - xfail: contraction followed by special characters is ignored

- - 'untgr) untgr] untgr} untgr'' untgr" untgr- untgr, untgr. untgr; untgr: untgr? untgr! untgr@ untgr# untgr$ untgr% untgr^ untgr& untgr* untgr( untgr_ untgr= untgr+ untgr[ untgr{ untgr\\ untgr| untgr< untgr> untgr` untgr~ untgr/'
  - ';untgr) ;untgr] ;untgr} ;untgr'' ;untgr" ;untgr- ;untgr, ;untgr. ;untgr; ;untgr: ;untgr? ;untgr! ;untgr@ ;untgr# ;untgr$ ;untgr% ;untgr^ ;untgr& ;untgr* ;untgr( ;untgr_ ;untgr= ;untgr+ ;untgr[ ;untgr{ ;untgr\\ ;untgr| ;untgr< ;untgr> ;untgr` ;untgr~ ;untgr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'untogether-xl untogether-([{''"xl untogether-/xl untogether-$xl untogether(xl untogether[xl untogether{xl untogether''xl untogether"xl untogether=([{''"-xl untogether([{''"-xl untogether/-xl untogether$-xl'
  - 'untgr-xl untgr-([{''"xl untgr-/xl untgr-$xl -  untgr(xl untgr[xl untgr{xl untgr''xl untgr"xl untgr=([{''"-xl untgr([{''"-xl untgr/-xl untgr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tomorrow [tomorrow {tomorrow ''tomorrow "tomorrow -tomorrow'
  - '(tm [tm {tm ''tm "tm -tm'
  - xfail: ...

- - '!tomorrow @tomorrow #tomorrow $tomorrow %tomorrow ^tomorrow &tomorrow *tomorrow )tomorrow _tomorrow =tomorrow +tomorrow ]tomorrow }tomorrow \\tomorrow |tomorrow .tomorrow ,tomorrow ;tomorrow :tomorrow ?tomorrow <tomorrow >tomorrow `tomorrow ~tomorrow /tomorrow'
  - '!tm @tm #tm $tm %tm ^tm &tm *tm )tm _tm =tm +tm ]tm }tm \\tm |tm .tm ,tm ;tm :tm ?tm <tm >tm `tm ~tm /tm'
  - xfail: contraction following special characters is ignored

- - '(tm [tm {tm ''tm "tm -tm'
  - '(;tm [;tm {;tm '';tm ";tm -;tm'
  - xfail: ...

- - '!tm @tm #tm $tm %tm ^tm &tm *tm )tm _tm =tm +tm ]tm }tm \\tm |tm .tm ,tm ;tm :tm ?tm <tm >tm `tm ~tm /tm'
  - '!;tm @;tm #;tm $;tm %;tm ^;tm &;tm *;tm );tm _;tm =;tm +;tm ];tm };tm \\;tm |;tm .;tm ,;tm ;;tm :;tm ?;tm <;tm >;tm `;tm ~;tm /;tm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tomorrow xl-([{''"tomorrow l/-tomorrow l$-tomorrow'
  - 'xl-tm xl-([{''"tm l/-tm l$-tm'
  - xfail: ...

- - 'xl(tomorrow xl[tomorrow xl{tomorrow xl''tomorrow xl"tomorrow xl-=([{''"tomorrow'
  - 'xl(tm xl[tm xl{tm xl''tm xl"tm xl-=([{''"tm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tomorrow) tomorrow] tomorrow} tomorrow'' tomorrow" tomorrow- tomorrow, tomorrow. tomorrow; tomorrow: tomorrow? tomorrow!'
  - 'tm) tm] tm} tm'' tm" tm- tm, tm. tm; tm: tm? tm!'
  - xfail: ...

- - 'tomorrow@ tomorrow# tomorrow$ tomorrow% tomorrow^ tomorrow& tomorrow* tomorrow( tomorrow_ tomorrow= tomorrow+ tomorrow[ tomorrow{ tomorrow\\ tomorrow| tomorrow< tomorrow> tomorrow` tomorrow~ tomorrow/'
  - 'tm@ tm# tm$ tm% tm^ tm& tm* tm( tm_ tm= tm+ tm[ tm{ tm\\ tm| tm< tm> tm` tm~ tm/'
  - xfail: contraction followed by special characters is ignored

- - 'tm) tm] tm} tm'' tm" tm- tm, tm. tm; tm: tm? tm!'
  - ';tm) ;tm] ;tm} ;tm'' ;tm" ;tm- ;tm, ;tm. ;tm; ;tm: ;tm? ;tm!'
  - xfail: ...

- - 'tm@ tm# tm$ tm% tm^ tm& tm* tm( tm_ tm= tm+ tm[ tm{ tm\\ tm| tm< tm> tm` tm~ tm/'
  - ';tm@ ;tm# ;tm$ ;tm% ;tm^ ;tm& ;tm* ;tm( ;tm_ ;tm= ;tm+ ;tm[ ;tm{ ;tm\\ ;tm| ;tm< ;tm> ;tm` ;tm~ ;tm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tomorrow-xl tomorrow-([{''"xl tomorrow-/xl tomorrow-$xl'
  - 'tm-xl tm-([{''"xl tm-/xl tm-$xl'
  - xfail: ...

- - 'tomorrow(xl tomorrow[xl tomorrow{xl tomorrow''xl tomorrow"xl tomorrow=([{''"-xl tomorrow([{''"-xl tomorrow/-xl tomorrow$-xl'
  - 'tm(xl tm[xl tm{xl tm''xl tm"xl tm=([{''"-xl tm([{''"-xl tm/-xl tm$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tomorrows [tomorrows {tomorrows ''tomorrows "tomorrows -tomorrows'
  - '(tms [tms {tms ''tms "tms -tms'
  - xfail: ...

- - '!tomorrows @tomorrows #tomorrows $tomorrows %tomorrows ^tomorrows &tomorrows *tomorrows )tomorrows _tomorrows =tomorrows +tomorrows ]tomorrows }tomorrows \\tomorrows |tomorrows .tomorrows ,tomorrows ;tomorrows :tomorrows ?tomorrows <tomorrows >tomorrows `tomorro'
  - '!tms @tms #tms $tms %tms ^tms &tms *tms )tms _tms =tms +tms ]tms }tms \\tms |tms .tms ,tms ;tms :tms ?tms <tms >tms ?tms `tms ~tms /tms'
  - xfail: contraction following special characters is ignored

- - 'tms (tms [tms {tms ''tms "tms -tms !tms @tms #tms $tms %tms ^tms &tms *tms )tms _tms =tms +tms ]tms }tms \\tms |tms .tms ,tms ;tms :tms ?tms <tms >tms ?tms `tms ~tms /tms'
  - ';tms (;tms [;tms {;tms '';tms ";tms -;tms !;tms @;tms #;tms $;tms %;tms ^;tms &;tms *;tms );tms _;tms =;tms +;tms ];tms };tms \\;tms |;tms .;tms ,;tms ;;tms :;tms ?;tms <;tms >;tms `;tms ~;tms /;tms'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tomorrows xl-([{''"tomorrows l/-tomorrows l$-tomorrows'
  - 'xl-tms xl-([{''"tms l/-tms l$-tms'
  - xfail: ...

- - 'xl(tomorrows xl[tomorrows xl{tomorrows xl''tomorrows xl"tomorrows xl-=([{''"tomorrows'
  - 'xl(tms xl[tms xl{tms xl''tms xl"tms xl-=([{''"tms'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tomorrows) tomorrows] tomorrows} tomorrows'' tomorrows" tomorrows- tomorrows, tomorrows. tomorrows; tomorrows: tomorrows? tomorrows!'
  - 'tms) tms] tms} tms'' tms" tms- tms, tms. tms; tms: tms? tms!'
  - xfail: ...

- - 'tomorrows@ tomorrows# tomorrows$ tomorrows% tomorrows^ tomorrows& tomorrows* tomorrows( tomorrows_ tomorrows= tomorrows+ tomorrows[ tomorrows{ tomorrows\\ tomorrows| tomorrows< tomorrows> tomorrows` tomorrows~ tomorrows/'
  - 'tms@ tms# tms$ tms% tms^ tms& tms* tms( tms_ tms= tms+ tms[ tms{ tms\\ tms| tms< tms> tms` tms~ tms/'
  - xfail: contraction followed by special characters is ignored

- - 'tms) tms] tms} tms'' tms" tms- tms, tms. tms; tms: tms? tms! tms@ tms# tms$ tms% tms^ tms& tms* tms( tms_ tms= tms+ tms[ tms{ tms\\ tms| tms< tms> tms` tms~ tms/'
  - ';tms) ;tms] ;tms} ;tms'' ;tms" ;tms- ;tms, ;tms. ;tms; ;tms: ;tms? ;tms! ;tms@ ;tms# ;tms$ ;tms% ;tms^ ;tms& ;tms* ;tms( ;tms_ ;tms= ;tms+ ;tms[ ;tms{ ;tms\\ ;tms| ;tms< ;tms> ;tms` ;tms~ ;tms/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tomorrows-xl tomorrows-([{''"xl tomorrows-/xl tomorrows-$xl'
  - 'tms-xl tms-([{''"xl tms-/xl tms-$xl'
  - xfail: ...

- - 'tomorrows(xl tomorrows[xl tomorrows{xl tomorrows''xl tomorrows"xl tomorrows=([{''"-xl tomorrows([{''"-xl tomorrows/-xl tomorrows$-xl'
  - 'tms(xl tms[xl tms{xl tms''xl tms"xl tms=([{''"-xl tms([{''"-xl tms/-xl tms$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tonight [tonight {tonight ''tonight "tonight -tonight'
  - '(tn [tn {tn ''tn "tn -tn'
  - xfail: ...

- - '!tonight @tonight #tonight $tonight %tonight ^tonight &tonight *tonight )tonight _tonight =tonight +tonight ]tonight }tonight \\tonight |tonight .tonight ,tonight ;tonight :tonight ?tonight <tonight >tonight `tonight ~tonight /tonight'
  - '!tn @tn #tn $tn %tn ^tn &tn *tn )tn _tn =tn +tn ]tn }tn \\tn |tn .tn ,tn ;tn :tn ?tn <tn >tn `tn ~tn /tn'
  - xfail: contraction following special characters is ignored

- - '(tn [tn {tn ''tn "tn -tn'
  - '(;tn [;tn {;tn '';tn ";tn -;tn'
  - xfail: ...

- - '!tn @tn #tn $tn %tn ^tn &tn *tn )tn _tn =tn +tn ]tn }tn \\tn |tn .tn ,tn ;tn :tn ?tn <tn >tn `tn ~tn /tn'
  - '!;tn @;tn #;tn $;tn %;tn ^;tn &;tn *;tn );tn _;tn =;tn +;tn ];tn };tn \\;tn |;tn .;tn ,;tn ;;tn :;tn ?;tn <;tn >;tn `;tn ~;tn /;tn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tonight xl-([{''"tonight l/-tonight l$-tonight'
  - 'xl-tn xl-([{''"tn l/-tn l$-tn'
  - xfail: ...

- - 'xl(tonight xl[tonight xl{tonight xl''tonight xl"tonight xl-=([{''"tonight'
  - 'xl(tn xl[tn xl{tn xl''tn xl"tn xl-=([{''"tn'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tonight) tonight] tonight} tonight'' tonight" tonight- tonight, tonight. tonight; tonight: tonight? tonight!'
  - 'tn) tn] tn} tn'' tn" tn- tn, tn. tn; tn: tn? tn!'
  - xfail: ...

- - 'tonight@ tonight# tonight$ tonight% tonight^ tonight& tonight* tonight( tonight_ tonight= tonight+ tonight[ tonight{ tonight\\ tonight| tonight< tonight> tonight` tonight~ tonight/'
  - 'tn@ tn# tn$ tn% tn^ tn& tn* tn( tn_ tn= tn+ tn[ tn{ tn\\ tn| tn< tn> tn` tn~ tn/'
  - xfail: contraction followed by special characters is ignored

- - 'tn) tn] tn} tn'' tn" tn- tn, tn. tn; tn: tn? tn!'
  - ';tn) ;tn] ;tn} ;tn'' ;tn" ;tn- ;tn, ;tn. ;tn; ;tn: ;tn? ;tn!'
  - xfail: ...

- - 'tn@ tn# tn$ tn% tn^ tn& tn* tn( tn_ tn= tn+ tn[ tn{ tn\\ tn| tn< tn> tn` tn~ tn/'
  - ';tn@ ;tn# ;tn$ ;tn% ;tn^ ;tn& ;tn* ;tn( ;tn_ ;tn= ;tn+ ;tn[ ;tn{ ;tn\\ ;tn| ;tn< ;tn> ;tn` ;tn~ ;tn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tonight-xl tonight-([{''"xl tonight-/xl tonight-$xl'
  - 'tn-xl tn-([{''"xl tn-/xl tn-$xl'
  - xfail: ...

- - 'tonight(xl tonight[xl tonight{xl tonight''xl tonight"xl tonight=([{''"-xl tonight([{''"-xl tonight/-xl tonight$-xl'
  - 'tn(xl tn[xl tn{xl tn''xl tn"xl tn=([{''"-xl tn([{''"-xl tn/-xl tn$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tonights [tonights {tonights ''tonights "tonights -tonights'
  - '(tns [tns {tns ''tns "tns -tns'
  - xfail: ...

- - '!tonights @tonights #tonights $tonights %tonights ^tonights &tonights *tonights )tonights _tonights =tonights +tonights ]tonights }tonights \\tonights |tonights .tonights ,tonights ;tonights :tonights ?tonights <tonights >tonights `tomorro'
  - '!tns @tns #tns $tns %tns ^tns &tns *tns )tns _tns =tns +tns ]tns }tns \\tns |tns .tns ,tns ;tns :tns ?tns <tns >tns ?tns `tns ~tns /tns'
  - xfail: contraction following special characters is ignored

- - 'tns (tns [tns {tns ''tns "tns -tns !tns @tns #tns $tns %tns ^tns &tns *tns )tns _tns =tns +tns ]tns }tns \\tns |tns .tns ,tns ;tns :tns ?tns <tns >tns ?tns `tns ~tns /tns'
  - ';tns (;tns [;tns {;tns '';tns ";tns -;tns !;tns @;tns #;tns $;tns %;tns ^;tns &;tns *;tns );tns _;tns =;tns +;tns ];tns };tns \\;tns |;tns .;tns ,;tns ;;tns :;tns ?;tns <;tns >;tns `;tns ~;tns /;tns'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tonights xl-([{''"tonights l/-tonights l$-tonights'
  - 'xl-tns xl-([{''"tns l/-tns l$-tns'
  - xfail: ...

- - 'xl(tonights xl[tonights xl{tonights xl''tonights xl"tonights xl-=([{''"tonights'
  - 'xl(tns xl[tns xl{tns xl''tns xl"tns xl-=([{''"tns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tonights) tonights] tonights} tonights'' tonights" tonights- tonights, tonights. tonights; tonights: tonights? tonights!'
  - 'tns) tns] tns} tns'' tns" tns- tns, tns. tns; tns: tns? tns!'
  - xfail: ...

- - 'tonights@ tonights# tonights$ tonights% tonights^ tonights& tonights* tonights( tonights_ tonights= tonights+ tonights[ tonights{ tonights\\ tonights| tonights< tonights> tonights` tonights~ tonights/'
  - 'tns@ tns# tns$ tns% tns^ tns& tns* tns( tns_ tns= tns+ tns[ tns{ tns\\ tns| tns< tns> tns` tns~ tns/'
  - xfail: contraction followed by special characters is ignored

- - 'tns) tns] tns} tns'' tns" tns- tns, tns. tns; tns: tns? tns! tns@ tns# tns$ tns% tns^ tns& tns* tns( tns_ tns= tns+ tns[ tns{ tns\\ tns| tns< tns> tns` tns~ tns/'
  - ';tns) ;tns] ;tns} ;tns'' ;tns" ;tns- ;tns, ;tns. ;tns; ;tns: ;tns? ;tns! ;tns@ ;tns# ;tns$ ;tns% ;tns^ ;tns& ;tns* ;tns( ;tns_ ;tns= ;tns+ ;tns[ ;tns{ ;tns\\ ;tns| ;tns< ;tns> ;tns` ;tns~ ;tns/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tonights-xl tonights-([{''"xl tonights-/xl tonights-$xl'
  - 'tns-xl tns-([{''"xl tns-/xl tns-$xl'
  - xfail: ...

- - 'tonights(xl tonights[xl tonights{xl tonights''xl tonights"xl tonights=([{''"-xl tonights([{''"-xl tonights/-xl tonights$-xl'
  - 'tns(xl tns[xl tns{xl tns''xl tns"xl tns=([{''"-xl tns([{''"-xl tns/-xl tns$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(us [us {us ''us "us -us'
  - '(u [u {u ''u "u -u'
  - xfail: ...

- - '!us @us #us $us %us ^us &us *us )us _us =us +us ]us }us \\us |us .us ,us ;us :us ?us <us >us `us ~us /us'
  - '!u @u #u $u %u ^u &u *u )u _u =u +u ]u }u \\u |u .u ,u ;u :u ?u <u >u `u ~u /u'
  - xfail: contraction following special characters is ignored

- - '(u [u {u ''u "u -u'
  - '(;u [;u {;u '';u ";u -;u'
  - xfail: ...

- - '!u @u #u $u %u ^u &u *u )u _u =u +u ]u }u \\u |u .u ,u ;u :u ?u <u >u `u ~u /u'
  - '!;u @;u #;u $;u %;u ^;u &;u *;u );u _;u =;u +;u ];u };u \\;u |;u .;u ,;u ;;u :;u ?;u <;u >;u `;u ~;u /;u'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-us xl-([{''"us xl/-us xl$-us'
  - 'xl-u xl-([{''"u xl/-u xl$-u'
  - xfail: ...

- - 'xl(us xl[us xl{us xl''us xl"us xl-=([{''"us'
  - 'xl(u xl[u xl{u xl''u xl"u xl-=([{''"u'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'us) us] us} us'' us" us- us, us. us; us: us? us!'
  - 'u) u] u} u'' u" u- u, u. u; u: u? u!'
  - xfail: ...

- - 'us@ us# us$ us% us^ us& us* us( us_ us= us+ us[ us{ us\\ us| us< us> us` us~ us/'
  - 'u@ u# u$ u% u^ u& u* u( u_ u= u+ u[ u{ u\\ u| u< u> u` u~ u/'
  - xfail: contraction followed by special characters is ignored

- - 'u) u] u} u'' u" u- u, u. u; u: u? u!'
  - ';u) ;u] ;u} ;u'' ;u" ;u- ;u, ;u. ;u; ;u: ;u? ;u!'
  - xfail: ...

- - 'u@ u# u$ u% u^ u& u* u( u_ u= u+ u[ u{ u\\ u| u< u> u` u~ u/'
  - ';u@ ;u# ;u$ ;u% ;u^ ;u& ;u* ;u( ;u_ ;u= ;u+ ;u[ ;u{ ;u\\ ;u| ;u< ;u> ;u` ;u~ ;u/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'us-xl us-([{''"xl us-/xl us-$xl'
  - 'u-xl u-([{''"xl u-/xl u-$xl'
  - xfail: ...

- - 'us(xl us[xl us{xl us''xl us"xl us=([{''"-xl us([{''"-xl us/-xl us$-xl'
  - 'u(xl u[xl u{xl u''xl u"xl u=([{''"-xl u([{''"-xl u/-xl u$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(very [very {very ''very "very -very'
  - '(v [v {v ''v "v -v'
  - xfail: ...

- - '!very @very #very $very %very ^very &very *very )very _very =very +very ]very }very \\very |very .very ,very ;very :very ?very <very >very `very ~very /very'
  - '!v @v #v $v %v ^v &v *v )v _v =v +v ]v }v \\v |v .v ,v ;v :v ?v <v >v `v ~v /v'
  - xfail: contraction following special characters is ignored

- - '(v [v {v ''v "v -v'
  - '(;v [;v {;v '';v ";v -;v'
  - xfail: ...

- - '!v @v #v $v %v ^v &v *v )v _v =v +v ]v }v \\v |v .v ,v ;v :v ?v <v >v `v ~v /v'
  - '!;v @;v #;v $;v %;v ^;v &;v *;v );v _;v =;v +;v ];v };v \\;v |;v .;v ,;v ;;v :;v ?;v <;v >;v `;v ~;v /;v'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-very xl-([{''"very xl/-very xl$-very'
  - 'xl-v xl-([{''"v xl/-v xl$-v'
  - xfail: ...

- - 'xl(very xl[very xl{very xl''very xl"very xl-=([{''"very'
  - 'xl(v xl[v xl{v xl''v xl"v xl-=([{''"v'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'very) very] very} very'' very" very- very, very. very; very: very? very!'
  - 'v) v] v} v'' v" v- v, v. v; v: v? v!'
  - xfail: ...

- - 'very@ very# very$ very% very^ very& very* very( very_ very= very+ very[ very{ very\\ very| very< very> very` very~ very/'
  - 'v@ v# v$ v% v^ v& v* v( v_ v= v+ v[ v{ v\\ v| v< v> v` v~ v/'
  - xfail: contraction followed by special characters is ignored

- - 'v) v] v} v'' v" v- v, v. v; v: v? v!'
  - ';v) ;v] ;v} ;v'' ;v" ;v- ;v, ;v. ;v; ;v: ;v? ;v!'
  - xfail: ...

- - 'v@ v# v$ v% v^ v& v* v( v_ v= v+ v[ v{ v\\ v| v< v> v` v~ v/'
  - ';v@ ;v# ;v$ ;v% ;v^ ;v& ;v* ;v( ;v_ ;v= ;v+ ;v[ ;v{ ;v\\ ;v| ;v< ;v> ;v` ;v~ ;v/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'very-xl very-([{''"xl very-/xl very-$xl'
  - 'v-xl v-([{''"xl v-/xl v-$xl'
  - xfail: ...

- - 'very(xl very[xl very{xl very''xl very"xl very=([{''"-xl very([{''"-xl very/-xl very$-xl'
  - 'v(xl v[xl v{xl v''xl v"xl v=([{''"-xl v([{''"-xl v/-xl v$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(was [was {was ''was "was -was !was .was ,was ;was :was ?was'
  - '(0 [0 {0 ''was "was -was !was .was ,was ;was :was ?was'
  - xfail: ...

- - '*was =was +was @was #was $was %was ^was &was )was _was ]was }was \\was |was <was >was `was ~was /was'
  - '*0 =0 +0 @0 #0 $0 %0 ^0 &0 )0 _0 ]0 }0 \\0 |0 <0 >0 ?0 `0 ~0 /0'
  - xfail: contraction following special characters is ignored

- - 'xl(was xl[was xl{was'
  - 'xl(0 xl[0 xl{0'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'was) was] was} was'' was" was- was, was. was? was!'
  - '0) 0] 0} was'' was" was- was, was. was? was!'
  - xfail: ...

- - 'was; was: was@ was# was$ was% was^ was& was* was( was_ was= was+ was[ was{ was\\ was| was< was> was` was~ was/'
  - 'was; was: 0@ 0# 0$ 0% 0^ 0& 0* 0( 0_ 0= 0+ 0[ 0{ 0\\ 0| 0< 0> 0` 0~ 0/'
  - xfail: contraction followed by special characters is ignored

- - 'was(xl was[was was{xl'
  - '0(xl 0[xl'
  - xfail: contraction followed by special characters following any letter  is ignored

- - '(were [were {were ''were "were -were !were .were ,were ;were :were ?were'
  - '(7 [7 {7 ''w}e "w}e -w}e !w}e .w}e ,w}e ;w}e :w}e ?w}e'
  - xfail: ...

- - '*were =were +were @were #were $were %were ^were &were )were _were ]were }were \\were |were <were >were `were ~were /were'
  - '*7 =7 +7 @7 #7 $7 %7 ^7 &7 )7 _7 ]7 }7 \\7 |7 <7 >7 ?7 `7 ~7 /7'
  - xfail: contraction following special characters is ignored

- - 'xl(were xl[were xl{were'
  - 'xl(7 xl[7 xl{7'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'were) were] were} were'' were" were- were, were. were? were!'
  - '7) 7] 7} w}e'' w}e" w}e- w}e, w}e. w}e? w}e!'
  - xfail: ...

- - 'were; were: were@ were# were$ were% were^ were& were* were( were_ were= were+ were[ were{ were\\ were| were< were> were` were~ were/'
  - 'w}e; w}e: 7@ 7# 7$ 7% 7^ 7& 7* 7( 7_ 7= 7+ 7[ 7{ 7\\ 7| 7< 7> 7` 7~ 7/'
  - xfail: contraction followed by special characters is ignored

- - 'were(xl were[were were{xl'
  - '7(xl 7[xl'
  - xfail: contraction followed by special characters following any letter  is ignored

- - '(which [which {which ''which "which -which'
  - '(: [: {: '': ": -:'
  - xfail: ...

- - '!which @which #which $which %which ^which &which *which )which _which =which +which ]which }which \\which |which .which ,which ;which ?which :which <which >which `which ~which /which'
  - '!: @: #: $: %: ^: &: *: ): _: =: +: ]: }: \\: |: .: ,: ;: ?: :: <: >: `: ~: /:'
  - xfail: contraction following special characters is ignored

- - '(wh [wh {wh ''wh "wh -wh !wh @wh #wh $wh :wh ^wh &wh *wh )wh _wh =wh +wh ]wh }wh \\wh |wh .wh ,wh ;wh :wh :wh <wh >wh `wh ~wh :wh'
  - '(wh [wh {wh ''wh "wh -wh !wh @wh #wh $wh :wh ^wh &wh *wh )wh _wh =wh +wh ]wh }wh \\wh |wh .wh ,wh ;wh :wh :wh <wh >wh `wh ~wh :wh'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-which xl-([{''"which l:-which l$-which'
  - 'xl-: xl-([{''": l:-: l$-:'
  - xfail: ...

- - 'xl(which xl[which xl{which xl''which xl"which xl-=([{''"which'
  - 'xl(: xl[: xl{: xl'': xl": xl-=([{''":'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'which) which] which} which'' which" which- which, which. which; which? which: which!'
  - ':) :] :} :'' :" :- :, :. :; :? :: :!'
  - xfail: ...

- - 'which@ which# which$ which% which^ which& which* which( which_ which= which+ which[ which{ which\\ which| which< which> which` which~ which/'
  - ':@ :# :$ :% :^ :& :* :( :_ := :+ :[ :{ :\\ :| :< :> :` :~ :/'
  - xfail: contraction followed by special characters is ignored

- - 'wh) wh] wh} wh'' wh" wh- wh, wh. wh; wh: wh: wh! wh@ wh# wh$ wh% wh^ wh& wh* wh( wh_ wh= wh+ wh[ wh{ wh\\ wh| wh< wh> wh` wh~ wh/'
  - 'wh) wh] wh} wh'' wh" wh- wh, wh. wh; wh: wh: wh! wh@ wh# wh$ wh% wh^ wh& wh* wh( wh_ wh= wh+ wh[ wh{ wh\\ wh| wh< wh> wh` wh~ wh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'which-xl which-([{''"xl which-:l which-$xl'
  - ':-xl :-([{''"xl :-:l :-$xl'
  - xfail: ...

- - 'which(xl which[xl which{xl which''xl which"xl which=([{''"-xl which([{''"-xl which/-xl which$-xl'
  - ':(xl :[xl :{xl :''xl :"xl :=([{''"-xl :([{''"-xl :/-xl :$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(will [will {will ''will "will -will'
  - '(w [w {w ''w "w -w'
  - xfail: ...

- - '!will @will #will $will %will ^will &will *will )will _will =will +will ]will }will \\will |will .will ,will ;will :will ?will <will >will `will ~will /will'
  - '!w @w #w $w %w ^w &w *w )w _w =w +w ]w }w \\w |w .w ,w ;w :w ?w <w >w `w ~w /w'
  - xfail: contraction following special characters is ignored

- - '(w [w {w ''w "w -w'
  - '(;w [;w {;w '';w ";w -;w'
  - xfail: ...

- - '!w @w #w $w %w ^w &w *w )w _w =w +w ]w }w \\w |w .w ,w ;w :w ?w <w >w `w ~w /w'
  - '!;w @;w #;w $;w %;w ^;w &;w *;w );w _;w =;w +;w ];w };w \\;w |;w .;w ,;w ;;w :;w ?;w <;w >;w `;w ~;w /;w'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-will xl-([{''"will xl/-will xl$-will'
  - 'xl-w xl-([{''"w xl/-w xl$-w'
  - xfail: ...

- - 'xl(will xl[will xl{will xl''will xl"will xl-=([{''"will'
  - 'xl(w xl[w xl{w xl''w xl"w xl-=([{''"w'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'will) will] will} will'' will" will- will, will. will; will: will? will!'
  - 'w) w] w} w'' w" w- w, w. w; w: w? w!'
  - xfail: ...

- - 'will@ will# will$ will% will^ will& will* will( will_ will= will+ will[ will{ will\\ will| will< will> will` will~ will/'
  - 'w@ w# w$ w% w^ w& w* w( w_ w= w+ w[ w{ w\\ w| w< w> w` w~ w/'
  - xfail: contraction followed by special characters is ignored

- - 'w) w] w} w'' w" w- w, w. w; w: w? w!'
  - ';w) ;w] ;w} ;w'' ;w" ;w- ;w, ;w. ;w; ;w: ;w? ;w!'
  - xfail: ...

- - 'w@ w# w$ w% w^ w& w* w( w_ w= w+ w[ w{ w\\ w| w< w> w` w~ w/'
  - ';w@ ;w# ;w$ ;w% ;w^ ;w& ;w* ;w( ;w_ ;w= ;w+ ;w[ ;w{ ;w\\ ;w| ;w< ;w> ;w` ;w~ ;w/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'will-xl will-([{''"xl will-/xl will-$xl'
  - 'w-xl w-([{''"xl w-/xl w-$xl'
  - xfail: ...

- - 'will(xl will[xl will{xl will''xl will"xl will=([{''"-xl will([{''"-xl will/-xl will$-xl'
  - 'w(xl w[xl w{xl w''xl w"xl w=([{''"-xl w([{''"-xl w/-xl w$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(would [would {would ''would "would -would'
  - '(wd [wd {wd ''wd "wd -wd'
  - xfail: ...

- - '!would @would #would $would %would ^would &would *would )would _would =would +would ]would }would \\would |would .would ,would ;would :would ?would <would >would `would ~would /would'
  - '!wd @wd #wd $wd %wd ^wd &wd *wd )wd _wd =wd +wd ]wd }wd \\wd |wd .wd ,wd ;wd :wd ?wd <wd >wd ?wd `wd ~wd /wd'
  - xfail: contraction following special characters is ignored

- - '(wd [wd {wd ''wd "wd -wd'
  - '(;wd [;wd {;wd '';wd ";wd -;wd'
  - xfail: ...

- - '!wd @wd #wd $wd %wd ^wd &wd *wd )wd _wd =wd +wd ]wd }wd \\wd |wd .wd ,wd ;wd :wd ?wd <wd >wd ?wd `wd ~wd /wd'
  - '!;wd @;wd #;wd $;wd %;wd ^;wd &;wd *;wd );wd _;wd =;wd +;wd ];wd };wd \\;wd |;wd .;wd ,;wd ;;wd :;wd ?;wd <;wd >;wd `;wd ~;wd /;wd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-would xl-([{''"would l/-would l$-would'
  - 'xl-wd xl-([{''"wd l/-wd l$-wd'
  - xfail: ...

- - 'xl(would xl[would xl{would xl''would xl"would xl-=([{''"would'
  - 'xl(wd xl[wd xl{wd xl''wd xl"wd xl-=([{''"wd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'would) would] would} would'' would" would- would, would. would; would: would? would!'
  - 'wd) wd] wd} wd'' wd" wd- wd, wd. wd; wd: wd? wd!'
  - xfail: ...

- - 'would@ would# would$ would% would^ would& would* would( would_ would= would+ would[ would{ would\\ would| would< would> would` would~ would/'
  - 'wd@ wd# wd$ wd% wd^ wd& wd* wd( wd_ wd= wd+ wd[ wd{ wd\\ wd| wd< wd> wd` wd~ wd/'
  - xfail: contraction followed by special characters is ignored

- - 'wd) wd] wd} wd'' wd" wd- wd, wd. wd; wd: wd? wd!'
  - ';wd) ;wd] ;wd} ;wd'' ;wd" ;wd- ;wd, ;wd. ;wd; ;wd: ;wd? ;wd!'
  - xfail: ...

- - 'wd@ wd# wd$ wd% wd^ wd& wd* wd( wd_ wd= wd+ wd[ wd{ wd\\ wd| wd< wd> wd` wd~ wd/'
  - ';wd@ ;wd# ;wd$ ;wd% ;wd^ ;wd& ;wd* ;wd( ;wd_ ;wd= ;wd+ ;wd[ ;wd{ ;wd\\ ;wd| ;wd< ;wd> ;wd` ;wd~ ;wd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'would-xl would-([{''"xl would-/xl would-$xl'
  - 'wd-xl wd-([{''"xl wd-/xl wd-$xl'
  - xfail: ...

- - 'would(xl would[xl would{xl would''xl would"xl would=([{''"-xl would([{''"-xl would/-xl would$-xl'
  - 'wd(xl wd[xl wd{xl wd''xl wd"xl wd=([{''"-xl wd([{''"-xl wd/-xl wd$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(woulds [woulds {woulds ''woulds "woulds -woulds'
  - '(wds [wds {wds ''wds "wds -wds'
  - xfail: ...

- - '!woulds @woulds #woulds $woulds %woulds ^woulds &woulds *woulds )woulds _woulds =woulds +woulds ]woulds }woulds \\woulds |woulds .woulds ,woulds ;woulds :woulds ?woulds <woulds >woulds `woulds ~woulds /woulds'
  - '!wds @wds #wds $wds %wds ^wds &wds *wds )wds _wds =wds +wds ]wds }wds \\wds |wds .wds ,wds ;wds :wds ?wds <wds >wds ?wds `wds ~wds /wds'
  - xfail: contraction following special characters is ignored

- - 'wds  (wds [wds {wds ''wds "wds -wds !wds @wds #wds $wds %wds ^wds &wds *wds )wds _wds =wds +wds ]wds }wds \\wds |wds .wds ,wds ;wds :wds ?wds <wds >wds ?wds `wds ~wds /wds'
  - ';wds  (;wds [;wds {;wds '';wds ";wds -;wds !;wds @;wds #;wds $;wds %;wds ^;wds &;wds *;wds );wds _;wds =;wds +;wds ];wds };wds \\;wds |;wds .;wds ,;wds ;;wds :;wds ?;wds <;wds >;wds `;wds ~;wds /;wds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-woulds xl-([{''"woulds l/-woulds l$-woulds'
  - 'xl-wds xl-([{''"wds l/-wds l$-wds'
  - xfail: ...

- - 'xl(woulds xl[woulds xl{woulds xl''woulds xl"woulds xl-=([{''"woulds'
  - 'xl(wds xl[wds xl{wds xl''wds xl"wds xl-=([{''"wds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'woulds) woulds] woulds} woulds'' woulds" woulds- woulds, woulds. woulds; woulds: woulds? woulds!'
  - 'wds) wds] wds} wds'' wds" wds- wds, wds. wds; wds: wds? wds!'
  - xfail: ...

- - 'woulds@ woulds# woulds$ woulds% woulds^ woulds& woulds* woulds( woulds_ woulds= woulds+ woulds[ woulds{ woulds\\ woulds| woulds< woulds> woulds` woulds~ woulds/'
  - 'wds@ wds# wds$ wds% wds^ wds& wds* wds( wds_ wds= wds+ wds[ wds{ wds\\ wds| wds< wds> wds` wds~ wds/'
  - xfail: contraction followed by special characters is ignored

- - 'wds) wds] wds} wds'' wds" wds- wds, wds. wds; wds: wds? wds! wds@ wds# wds$ wds% wds^ wds& wds* wds( wds_ wds= wds+ wds[ wds{ wds\\ wds| wds< wds> wds` wds~ wds/'
  - ';wds) ;wds] ;wds} ;wds'' ;wds" ;wds- ;wds, ;wds. ;wds; ;wds: ;wds? ;wds! ;wds@ ;wds# ;wds$ ;wds% ;wds^ ;wds& ;wds* ;wds( ;wds_ ;wds= ;wds+ ;wds[ ;wds{ ;wds\\ ;wds| ;wds< ;wds> ;wds` ;wds~ ;wds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'woulds-xl woulds-([{''"xl woulds-/xl woulds-$xl'
  - 'wds-xl wds-([{''"xl wds-/xl wds-$xl'
  - xfail: ...

- - 'woulds(xl woulds[xl woulds{xl woulds''xl woulds"xl woulds=([{''"-xl woulds([{''"-xl woulds/-xl woulds$-xl'
  - 'wds(xl wds[xl wds{xl wds''xl wds"xl wds=([{''"-xl wds([{''"-xl wds/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(woulda [woulda {woulda ''woulda "woulda -woulda'
  - '(wda [wda {wda ''wda "wda -wda'
  - xfail: ...

- - '!woulda @woulda #woulda $woulda %woulda ^woulda &woulda *woulda )woulda _woulda =woulda +woulda ]woulda }woulda \\woulda |woulda .woulda ,woulda ;woulda :woulda ?woulda <woulda >woulda `woulda ~woulda /woulda'
  - '!wda @wda #wda $wda %wda ^wda &wda *wda )wda _wda =wda +wda ]wda }wda \\wda |wda .wda ,wda ;wda :wda ?wda <wda >wda ?wda `wda ~wda /wda'
  - xfail: contraction following special characters is ignored

- - '(wda [wda {wda ''wda "wda -wda'
  - '(;wda [;wda {;wda '';wda ";wda -;wda'
  - xfail: ...

- - '!wda @wda #wda $wda %wda ^wda &wda *wda )wda _wda =wda +wda ]wda }wda \\wda |wda .wda ,wda ;wda :wda ?wda <wda >wda ?wda `wda ~wda /wda'
  - '!;wda @;wda #;wda $;wda %;wda ^;wda &;wda *;wda );wda _;wda =;wda +;wda ];wda };wda \\;wda |;wda .;wda ,;wda ;;wda :;wda ?;wda <;wda >;wda `;wda ~;wda /;wda'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-woulda xl-([{''"woulda l/-woulda l$-woulda'
  - 'xl-wda xl-([{''"wda l/-wda l$-wda'
  - xfail: ...

- - 'xl(woulda xl[woulda xl{woulda xl''woulda xl"woulda xl-=([{''"woulda'
  - 'xl(wda xl[wda xl{wda xl''wda xl"wda xl-=([{''"wda'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'woulda) woulda] woulda} woulda'' woulda" woulda- woulda, woulda. woulda; woulda: woulda? woulda!'
  - 'wda) wda] wda} wda'' wda" wda- wda, wda. wda; wda: wda? wda!'
  - xfail: ...

- - 'woulda@ woulda# woulda$ woulda% woulda^ woulda& woulda* woulda( woulda_ woulda= woulda+ woulda[ woulda{ woulda\\ woulda| woulda< woulda> woulda` woulda~ woulda/'
  - 'wda@ wda# wda$ wda% wda^ wda& wda* wda( wda_ wda= wda+ wda[ wda{ wda\\ wda| wda< wda> wda` wda~ wda/'
  - xfail: contraction followed by special characters is ignored

- - 'wda) wda] wda} wda'' wda" wda- wda, wda. wda; wda: wda? wda!'
  - ';wda) ;wda] ;wda} ;wda'' ;wda" ;wda- ;wda, ;wda. ;wda; ;wda: ;wda? ;wda!'
  - xfail: ...

- - 'wda@ wda# wda$ wda% wda^ wda& wda* wda( wda_ wda= wda+ wda[ wda{ wda\\ wda| wda< wda> wda` wda~ wda/'
  - ';wda@ ;wda# ;wda$ ;wda% ;wda^ ;wda& ;wda* ;wda( ;wda_ ;wda= ;wda+ ;wda[ ;wda{ ;wda\\ ;wda| ;wda< ;wda> ;wda` ;wda~ ;wda/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'woulda-xl woulda-([{''"xl woulda-/xl woulda-$xl'
  - 'wda-xl wda-([{''"xl wda-/xl wda-$xl'
  - xfail: ...

- - 'woulda(xl woulda[xl woulda{xl woulda''xl woulda"xl woulda=([{''"-xl woulda([{''"-xl woulda/-xl woulda$-xl'
  - 'wda(xl wda[xl wda{xl wda''xl wda"xl wda=([{''"-xl wda([{''"-xl wda/-xl abs-$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(you [you {you ''you "you -you'
  - '(y [y {y ''y "y -y'
  - xfail: ...

- - '!you @you #you $you %you ^you &you *you )you _you =you +you ]you }you \\you |you .you ,you ;you :you ?you <you >you `you ~you /you'
  - '!y @y #y $y %y ^y &y *y )y _y =y +y ]y }y \\y |y .y ,y ;y :y ?y <y >y `y ~y /y'
  - xfail: contraction following special characters is ignored

- - '(y [y {y ''y "y -y'
  - '(;y [;y {;y '';y ";y -;y'
  - xfail: ...

- - '!y @y #y $y %y ^y &y *y )y _y =y +y ]y }y \\y |y .y ,y ;y :y ?y <y >y `y ~y /y'
  - '!;y @;y #;y $;y %;y ^;y &;y *;y );y _;y =;y +;y ];y };y \\;y |;y .;y ,;y ;;y :;y ?;y <;y >;y `;y ~;y /;y'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-you xl-([{''"you xl/-you xl$-you'
  - 'xl-y xl-([{''"y xl/-y xl$-y'
  - xfail: ...

- - 'xl(you xl[you xl{you xl''you xl"you xl-=([{''"you'
  - 'xl(y xl[y xl{y xl''y xl"y xl-=([{''"y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'you) you] you} you'' you" you- you, you. you; you: you? you!'
  - 'y) y] y} y'' y" y- y, y. y; y: y? y!'
  - xfail: ...

- - 'you@ you# you$ you% you^ you& you* you( you_ you= you+ you[ you{ you\\ you| you< you> you` you~ you/'
  - 'y@ y# y$ y% y^ y& y* y( y_ y= y+ y[ y{ y\\ y| y< y> y` y~ y/'
  - xfail: contraction followed by special characters is ignored

- - 'y) y] y} y'' y" y- y, y. y; y: y? y!'
  - ';y) ;y] ;y} ;y'' ;y" ;y- ;y, ;y. ;y; ;y: ;y? ;y!'
  - xfail: ...

- - 'y@ y# y$ y% y^ y& y* y( y_ y= y+ y[ y{ y\\ y| y< y> y` y~ y/'
  - ';y@ ;y# ;y$ ;y% ;y^ ;y& ;y* ;y( ;y_ ;y= ;y+ ;y[ ;y{ ;y\\ ;y| ;y< ;y> ;y` ;y~ ;y/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'you-xl you-([{''"xl you-/xl you-$xl'
  - 'y-xl y-([{''"xl y-/xl y-$xl'
  - xfail: ...

- - 'you(xl you[xl you{xl you''xl you"xl you=([{''"-xl you([{''"-xl you/-xl you$-xl'
  - 'y(xl y[xl y{xl y''xl y"xl y=([{''"-xl y([{''"-xl y/-xl y$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(your [your {your ''your "your -your'
  - '(yr [yr {yr ''yr "yr -yr'
  - xfail: ...

- - '!your @your #your $your %your ^your &your *your )your _your =your +your ]your }your \\your |your .your ,your ;your :your ?your <your >your `your ~your /your'
  - '!yr @yr #yr $yr %yr ^yr &yr *yr )yr _yr =yr +yr ]yr }yr \\yr |yr .yr ,yr ;yr :yr ?yr <yr >yr `yr ~yr /yr'
  - xfail: contraction following special characters is ignored

- - '(yr [yr {yr ''yr "yr -yr'
  - '(;yr [;yr {;yr '';yr ";yr -;yr'
  - xfail: ...

- - '!yr @yr #yr $yr %yr ^yr &yr *yr )yr _yr =yr +yr ]yr }yr \\yr |yr .yr ,yr ;yr :yr ?yr <yr >yr `yr ~yr /yr'
  - '!;yr @;yr #;yr $;yr %;yr ^;yr &;yr *;yr );yr _;yr =;yr +;yr ];yr };yr \\;yr |;yr .;yr ,;yr ;;yr :;yr ?;yr <;yr >;yr `;yr ~;yr /;yr'
  - xfail: non-contraction following special characters hyour a missing grade 1 indicator

- - 'xl-your xl-([{''"your l/-your l$-your'
  - 'xl-yr xl-([{''"yr l/-yr l$-yr'
  - xfail: ...

- - 'xl(your xl[your xl{your xl''your xl"your xl-=([{''"your'
  - 'xl(yr xl[yr xl{yr xl''yr xl"yr xl-=([{''"yr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'your) your] your} your'' your" your- your, your. your; your: your? your!'
  - 'yr) yr] yr} yr'' yr" yr- yr, yr. yr; yr: yr? yr!'
  - xfail: ...

- - 'your@ your# your$ your% your^ your& your* your( your_ your= your+ your[ your{ your\\ your| your< your> your` your~ your/'
  - 'yr@ yr# yr$ yr% yr^ yr& yr* yr( yr_ yr= yr+ yr[ yr{ yr\\ yr| yr< yr> yr` yr~ yr/'
  - xfail: contraction followed by special characters is ignored

- - 'yr) yr] yr} yr'' yr" yr- yr, yr. yr; yr: yr? yr!'
  - ';yr) ;yr] ;yr} ;yr'' ;yr" ;yr- ;yr, ;yr. ;yr; ;yr: ;yr? ;yr!'
  - xfail: ...

- - 'yr@ yr# yr$ yr% yr^ yr& yr* yr( yr_ yr= yr+ yr[ yr{ yr\\ yr| yr< yr> yr` yr~ yr/'
  - ';yr@ ;yr# ;yr$ ;yr% ;yr^ ;yr& ;yr* ;yr( ;yr_ ;yr= ;yr+ ;yr[ ;yr{ ;yr\\ ;yr| ;yr< ;yr> ;yr` ;yr~ ;yr/'
  - xfail: non-contraction following special characters hyour a missing grade 1 indicator

- - 'your-xl your-([{''"xl your-/xl your-$xl'
  - 'yr-xl yr-([{''"xl yr-/xl yr-$xl'
  - xfail: ...

- - 'your(xl your[xl your{xl your''xl your"xl your=([{''"-xl your([{''"-xl your/-xl your$-xl'
  - 'yr(xl yr[xl yr{xl yr''xl yr"xl yr=([{''"-xl yr([{''"-xl yr/-xl yr$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yours [yours {yours ''yours "yours -yours'
  - '(yrs [yrs {yrs ''yrs "yrs -yrs'
  - xfail: ...

- - '!yours @yours #yours $yours %yours ^yours &yours *yours )yours _yours =yours +yours ]yours }yours \\yours |yours .yours ,yours ;yours :yours ?yours <yours >yours `yours ~yours /yours'
  - '!yrs @yrs #yrs $yrs %yrs ^yrs &yrs *yrs )yrs _yrs =yrs +yrs ]yrs }yrs \\yrs |yrs .yrs ,yrs ;yrs :yrs ?yrs <yrs >yrs `yrs ~yrs /yrs'
  - xfail: contraction following special characters is ignored

- - 'yrs (yrs [yrs {yrs ''yrs "yrs -yrs !yrs @yrs #yrs $yrs %yrs ^yrs &yrs *yrs )yrs _yrs =yrs +yrs ]yrs }yrs \\yrs |yrs .yrs ,yrs ;yrs :yrs ?yrs <yrs >yrs `yrs ~yrs /yrs'
  - ';yrs (;yrs [;yrs {;yrs '';yrs ";yrs -;yrs !;yrs @;yrs #;yrs $;yrs %;yrs ^;yrs &;yrs *;yrs );yrs _;yrs =;yrs +;yrs ];yrs };yrs \\;yrs |;yrs .;yrs ,;yrs ;;yrs :;yrs ?;yrs <;yrs >;yrs `;yrs ~;yrs /;yrs'
  - xfail: non-contraction following special characters hyours a missing grade 1 indicator

- - 'xl-yours xl-([{''"yours l/-yours l$-yours'
  - 'xl-yrs xl-([{''"yrs l/-yrs l$-yrs'
  - xfail: ...

- - 'xl(yours xl[yours xl{yours xl''yours xl"yours xl-=([{''"yours'
  - 'xl(yrs xl[yrs xl{yrs xl''yrs xl"yrs xl-=([{''"yrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yours) yours] yours} yours'' yours" yours- yours, yours. yours; yours: yours? yours!'
  - 'yrs) yrs] yrs} yrs'' yrs" yrs- yrs, yrs. yrs; yrs: yrs? yrs!'
  - xfail: ...

- - 'yours@ yours# yours$ yours% yours^ yours& yours* yours( yours_ yours= yours+ yours[ yours{ yours\\ yours| yours< yours> yours` yours~ yours/'
  - 'yrs@ yrs# yrs$ yrs% yrs^ yrs& yrs* yrs( yrs_ yrs= yrs+ yrs[ yrs{ yrs\\ yrs| yrs< yrs> yrs` yrs~ yrs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrs) yrs] yrs} yrs'' yrs" yrs- yrs, yrs. yrs; yrs: yrs? yrs! yrs@ yrs# yrs$ yrs% yrs^ yrs& yrs* yrs( yrs_ yrs= yrs+ yrs[ yrs{ yrs\\ yrs| yrs< yrs> yrs` yrs~ yrs/'
  - ';yrs) ;yrs] ;yrs} ;yrs'' ;yrs" ;yrs- ;yrs, ;yrs. ;yrs; ;yrs: ;yrs? ;yrs! ;yrs@ ;yrs# ;yrs$ ;yrs% ;yrs^ ;yrs& ;yrs* ;yrs( ;yrs_ ;yrs= ;yrs+ ;yrs[ ;yrs{ ;yrs\\ ;yrs| ;yrs< ;yrs> ;yrs` ;yrs~ ;yrs/'
  - xfail: non-contraction following special characters hyours a missing grade 1 indicator

- - 'yours-xl yours-([{''"xl yours-/xl yours-$xl'
  - 'yrs-xl yrs-([{''"xl yrs-/xl yrs-$xl'
  - xfail: ...

- - 'yours(xl yours[xl yours{xl yours''xl yours"xl yours=([{''"-xl yours([{''"-xl yours/-xl yours$-xl'
  - 'yrs(xl yrs[xl yrs{xl yrs''xl yrs"xl yrs=([{''"-xl yrs([{''"-xl yrs/-xl yrs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourself [yourself {yourself ''yourself "yourself -yourself'
  - '(yrf [yrf {yrf ''yrf "yrf -yrf'
  - xfail: ...

- - '!yourself @yourself #yourself $yourself %yourself ^yourself &yourself *yourself )yourself _yourself =yourself +yourself ]yourself }yourself \\yourself |yourself .yourself ,yourself ;yourself :yourself ?yourself <yourself >yourself `yourself ~yourself /yourself'
  - '!yrf @yrf #yrf $yrf %yrf ^yrf &yrf *yrf )yrf _yrf =yrf +yrf ]yrf }yrf \\yrf |yrf .yrf ,yrf ;yrf :yrf ?yrf <yrf >yrf `yrf ~yrf /yrf'
  - xfail: contraction following special characters is ignored

- - '(yrf [yrf {yrf ''yrf "yrf -yrf'
  - '(;yrf [;yrf {;yrf '';yrf ";yrf -;yrf'
  - xfail: ...

- - '!yrf @yrf #yrf $yrf %yrf ^yrf &yrf *yrf )yrf _yrf =yrf +yrf ]yrf }yrf \\yrf |yrf .yrf ,yrf ;yrf :yrf ?yrf <yrf >yrf `yrf ~yrf /yrf'
  - '!;yrf @;yrf #;yrf $;yrf %;yrf ^;yrf &;yrf *;yrf );yrf _;yrf =;yrf +;yrf ];yrf };yrf \\;yrf |;yrf .;yrf ,;yrf ;;yrf :;yrf ?;yrf <;yrf >;yrf `;yrf ~;yrf /;yrf'
  - xfail: non-contraction following special characters hyourself a missing grade 1 indicator

- - 'xl-yourself xl-([{''"yourself l/-yourself l$-yourself'
  - 'xl-yrf xl-([{''"yrf l/-yrf l$-yrf'
  - xfail: ...

- - 'xl(yourself xl[yourself xl{yourself xl''yourself xl"yourself xl-=([{''"yourself'
  - 'xl(yrf xl[yrf xl{yrf xl''yrf xl"yrf xl-=([{''"yrf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourself) yourself] yourself} yourself'' yourself" yourself- yourself, yourself. yourself; yourself: yourself? yourself!'
  - 'yrf) yrf] yrf} yrf'' yrf" yrf- yrf, yrf. yrf; yrf: yrf? yrf!'
  - xfail: ...

- - 'yourself@ yourself# yourself$ yourself% yourself^ yourself& yourself* yourself( yourself_ yourself= yourself+ yourself[ yourself{ yourself\\ yourself| yourself< yourself> yourself` yourself~ yourself/'
  - 'yrf@ yrf# yrf$ yrf% yrf^ yrf& yrf* yrf( yrf_ yrf= yrf+ yrf[ yrf{ yrf\\ yrf| yrf< yrf> yrf` yrf~ yrf/'
  - xfail: contraction followed by special characters is ignored

- - 'yrf) yrf] yrf} yrf'' yrf" yrf- yrf, yrf. yrf; yrf: yrf? yrf!'
  - ';yrf) ;yrf] ;yrf} ;yrf'' ;yrf" ;yrf- ;yrf, ;yrf. ;yrf; ;yrf: ;yrf? ;yrf!'
  - xfail: ...

- - 'yrf@ yrf# yrf$ yrf% yrf^ yrf& yrf* yrf( yrf_ yrf= yrf+ yrf[ yrf{ yrf\\ yrf| yrf< yrf> yrf` yrf~ yrf/'
  - ';yrf@ ;yrf# ;yrf$ ;yrf% ;yrf^ ;yrf& ;yrf* ;yrf( ;yrf_ ;yrf= ;yrf+ ;yrf[ ;yrf{ ;yrf\\ ;yrf| ;yrf< ;yrf> ;yrf` ;yrf~ ;yrf/'
  - xfail: non-contraction following special characters hyourself a missing grade 1 indicator

- - 'yourself-xl yourself-([{''"xl yourself-/xl yourself-$xl'
  - 'yrf-xl yrf-([{''"xl yrf-/xl yrf-$xl'
  - xfail: ...

- - 'yourself(xl yourself[xl yourself{xl yourself''xl yourself"xl yourself=([{''"-xl yourself([{''"-xl yourself/-xl yourself$-xl'
  - 'yrf(xl yrf[xl yrf{xl yrf''xl yrf"xl yrf=([{''"-xl yrf([{''"-xl yrf/-xl yrf$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselfs [yourselfs {yourselfs ''yourselfs "yourselfs -yourselfs'
  - '(yrfs [yrfs {yrfs ''yrfs "yrfs -yrfs'
  - xfail: ...

- - '!yourselfs @yourselfs #yourselfs $yourselfs %yourselfs ^yourselfs &yourselfs *yourselfs )yourselfs _yourselfs =yourselfs +yourselfs ]yourselfs }yourselfs \\yourselfs |yourselfs .yourselfs ,yourselfs ;yourselfs :yourselfs ?yourselfs <yourselfs >yourselfs `yoursel'
  - '!yrfs @yrfs #yrfs $yrfs %yrfs ^yrfs &yrfs *yrfs )yrfs _yrfs =yrfs +yrfs ]yrfs }yrfs \\yrfs |yrfs .yrfs ,yrfs ;yrfs :yrfs ?yrfs <yrfs >yrfs `yrfs ~yrfs /yrfs'
  - xfail: contraction following special characters is ignored

- - 'yrfs (yrfs [yrfs {yrfs ''yrfs "yrfs -yrfs !yrfs @yrfs #yrfs $yrfs %yrfs ^yrfs &yrfs *yrfs )yrfs _yrfs =yrfs +yrfs ]yrfs }yrfs \\yrfs |yrfs .yrfs ,yrfs ;yrfs :yrfs ?yrfs <yrfs >yrfs `yrfs ~yrfs /yrfs'
  - ';yrfs (;yrfs [;yrfs {;yrfs '';yrfs ";yrfs -;yrfs !;yrfs @;yrfs #;yrfs $;yrfs %;yrfs ^;yrfs &;yrfs *;yrfs );yrfs _;yrfs =;yrfs +;yrfs ];yrfs };yrfs \\;yrfs |;yrfs .;yrfs ,;yrfs ;;yrfs :;yrfs ?;yrfs <;yrfs >;yrfs `;yrfs ~;yrfs /;yrfs'
  - xfail: non-contraction following special characters hyourselfs a missing grade 1 indicator

- - 'xl-yourselfs xl-([{''"yourselfs l/-yourselfs l$-yourselfs'
  - 'xl-yrfs xl-([{''"yrfs l/-yrfs l$-yrfs'
  - xfail: ...

- - 'xl(yourselfs xl[yourselfs xl{yourselfs xl''yourselfs xl"yourselfs xl-=([{''"yourselfs'
  - 'xl(yrfs xl[yrfs xl{yrfs xl''yrfs xl"yrfs xl-=([{''"yrfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselfs) yourselfs] yourselfs} yourselfs'' yourselfs" yourselfs- yourselfs, yourselfs. yourselfs; yourselfs: yourselfs? yourselfs!'
  - 'yrfs) yrfs] yrfs} yrfs'' yrfs" yrfs- yrfs, yrfs. yrfs; yrfs: yrfs? yrfs!'
  - xfail: ...

- - 'yourselfs@ yourselfs# yourselfs$ yourselfs% yourselfs^ yourselfs& yourselfs* yourselfs( yourselfs_ yourselfs= yourselfs+ yourselfs[ yourselfs{ yourselfs\\ yourselfs| yourselfs< yourselfs> yourselfs` yourselfs~ yourselfs/'
  - 'yrfs@ yrfs# yrfs$ yrfs% yrfs^ yrfs& yrfs* yrfs( yrfs_ yrfs= yrfs+ yrfs[ yrfs{ yrfs\\ yrfs| yrfs< yrfs> yrfs` yrfs~ yrfs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrfs) yrfs] yrfs} yrfs'' yrfs" yrfs- yrfs, yrfs. yrfs; yrfs: yrfs? yrfs! yrfs@ yrfs# yrfs$ yrfs% yrfs^ yrfs& yrfs* yrfs( yrfs_ yrfs= yrfs+ yrfs[ yrfs{ yrfs\\ yrfs| yrfs< yrfs> yrfs` yrfs~ yrfs/'
  - ';yrfs) ;yrfs] ;yrfs} ;yrfs'' ;yrfs" ;yrfs- ;yrfs, ;yrfs. ;yrfs; ;yrfs: ;yrfs? ;yrfs! ;yrfs@ ;yrfs# ;yrfs$ ;yrfs% ;yrfs^ ;yrfs& ;yrfs* ;yrfs( ;yrfs_ ;yrfs= ;yrfs+ ;yrfs[ ;yrfs{ ;yrfs\\ ;yrfs| ;yrfs< ;yrfs> ;yrfs` ;yrfs~ ;yrfs/'
  - xfail: non-contraction following special characters hyourselfs a missing grade 1 indicator

- - 'yourselfs-xl yourselfs-([{''"xl yourselfs-/xl yourselfs-$xl'
  - 'yrfs-xl yrfs-([{''"xl yrfs-/xl yrfs-$xl'
  - xfail: ...

- - 'yourselfs(xl yourselfs[xl yourselfs{xl yourselfs''xl yourselfs"xl yourselfs=([{''"-xl yourselfs([{''"-xl yourselfs/-xl yourselfs$-xl'
  - 'yrfs(xl yrfs[xl yrfs{xl yrfs''xl yrfs"xl yrfs=([{''"-xl yrfs([{''"-xl yrfs/-xl yrfs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselves [yourselves {yourselves ''yourselves "yourselves -yourselves'
  - '(yrvs [yrvs {yrvs ''yrvs "yrvs -yrvs'
  - xfail: ...

- - '!yourselves @yourselves #yourselves $yourselves %yourselves ^yourselves &yourselves *yourselves )yourselves _yourselves =yourselves +yourselves ]yourselves }yourselves \\yourselves |yourselves .yourselves ,yourselves ;yourselves :yourselves ?yourselves <yourselv'
  - '!yrvs @yrvs #yrvs $yrvs %yrvs ^yrvs &yrvs *yrvs )yrvs _yrvs =yrvs +yrvs ]yrvs }yrvs \\yrvs |yrvs .yrvs ,yrvs ;yrvs :yrvs ?yrvs <yrvs >yrvs `yrvs ~yrvs /yrvs'
  - xfail: contraction following special characters is ignored

- - '(yrvs [yrvs {yrvs ''yrvs "yrvs -yrvs'
  - '(;yrvs [;yrvs {;yrvs '';yrvs ";yrvs -;yrvs'
  - xfail: ...

- - '!yrvs @yrvs #yrvs $yrvs %yrvs ^yrvs &yrvs *yrvs )yrvs _yrvs =yrvs +yrvs ]yrvs }yrvs \\yrvs |yrvs .yrvs ,yrvs ;yrvs :yrvs ?yrvs <yrvs >yrvs `yrvs ~yrvs /yrvs'
  - '!;yrvs @;yrvs #;yrvs $;yrvs %;yrvs ^;yrvs &;yrvs *;yrvs );yrvs _;yrvs =;yrvs +;yrvs ];yrvs };yrvs \\;yrvs |;yrvs .;yrvs ,;yrvs ;;yrvs :;yrvs ?;yrvs <;yrvs >;yrvs `;yrvs ~;yrvs /;yrvs'
  - xfail: non-contraction following special characters hyourselves a missing grade 1 indicator

- - 'xl-yourselves xl-([{''"yourselves l/-yourselves l$-yourselves'
  - 'xl-yrvs xl-([{''"yrvs l/-yrvs l$-yrvs'
  - xfail: ...

- - 'xl(yourselves xl[yourselves xl{yourselves xl''yourselves xl"yourselves xl-=([{''"yourselves'
  - 'xl(yrvs xl[yrvs xl{yrvs xl''yrvs xl"yrvs xl-=([{''"yrvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselves) yourselves] yourselves} yourselves'' yourselves" yourselves- yourselves, yourselves. yourselves; yourselves: yourselves? yourselves!'
  - 'yrvs) yrvs] yrvs} yrvs'' yrvs" yrvs- yrvs, yrvs. yrvs; yrvs: yrvs? yrvs!'
  - xfail: ...

- - 'yourselves@ yourselves# yourselves$ yourselves% yourselves^ yourselves& yourselves* yourselves( yourselves_ yourselves= yourselves+ yourselves[ yourselves{ yourselves\\ yourselves| yourselves< yourselves> yourselves` yourselves~ yourselves/'
  - 'yrvs@ yrvs# yrvs$ yrvs% yrvs^ yrvs& yrvs* yrvs( yrvs_ yrvs= yrvs+ yrvs[ yrvs{ yrvs\\ yrvs| yrvs< yrvs> yrvs` yrvs~ yrvs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrvs) yrvs] yrvs} yrvs'' yrvs" yrvs- yrvs, yrvs. yrvs; yrvs: yrvs? yrvs!'
  - ';yrvs) ;yrvs] ;yrvs} ;yrvs'' ;yrvs" ;yrvs- ;yrvs, ;yrvs. ;yrvs; ;yrvs: ;yrvs? ;yrvs!'
  - xfail: ...

- - 'yrvs@ yrvs# yrvs$ yrvs% yrvs^ yrvs& yrvs* yrvs( yrvs_ yrvs= yrvs+ yrvs[ yrvs{ yrvs\\ yrvs| yrvs< yrvs> yrvs` yrvs~ yrvs/'
  - ';yrvs@ ;yrvs# ;yrvs$ ;yrvs% ;yrvs^ ;yrvs& ;yrvs* ;yrvs( ;yrvs_ ;yrvs= ;yrvs+ ;yrvs[ ;yrvs{ ;yrvs\\ ;yrvs| ;yrvs< ;yrvs> ;yrvs` ;yrvs~ ;yrvs/'
  - xfail: non-contraction following special characters hyourselves a missing grade 1 indicator

- - 'yourselves-xl yourselves-([{''"xl yourselves-/xl yourselves-$xl'
  - 'yrvs-xl yrvs-([{''"xl yrvs-/xl yrvs-$xl'
  - xfail: ...

- - 'yourselves(xl yourselves[xl yourselves{xl yourselves''xl yourselves"xl yourselves=([{''"-xl yourselves([{''"-xl yourselves/-xl yourselves$-xl'
  - 'yrvs(xl yrvs[xl yrvs{xl yrvs''xl yrvs"xl yrvs=([{''"-xl yrvs([{''"-xl yrvs/-xl yrvs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselvess [yourselvess {yourselvess ''yourselvess "yourselvess -yourselvess'
  - '(yrvss [yrvss {yrvss ''yrvss "yrvss -yrvss'
  - xfail: ...

- - '!yourselvess @yourselvess #yourselvess $yourselvess %yourselvess ^yourselvess &yourselvess *yourselvess )yourselvess _yourselvess =yourselvess +yourselvess ]yourselvess }yourselvess \\yourselvess |yourselvess .yourselvess ,yourselvess ;yourselvess :yourselvess ?'
  - '!yrvss @yrvss #yrvss $yrvss %yrvss ^yrvss &yrvss *yrvss )yrvss _yrvss =yrvss +yrvss ]yrvss }yrvss \\yrvss |yrvss .yrvss ,yrvss ;yrvss :yrvss ?yrvss <yrvss >yrvss `yrvss ~yrvss /yrvss'
  - xfail: contraction following special characters is ignored

- - 'yrvss (yrvss [yrvss {yrvss ''yrvss "yrvss -yrvss !yrvss @yrvss #yrvss $yrvss %yrvss ^yrvss &yrvss *yrvss )yrvss _yrvss =yrvss +yrvss ]yrvss }yrvss \\yrvss |yrvss .yrvss ,yrvss ;yrvss :yrvss ?yrvss <yrvss >yrvss `yrvss ~yrvss /yrvss'
  - ';yrvss (;yrvss [;yrvss {;yrvss '';yrvss ";yrvss -;yrvss !;yrvss @;yrvss #;yrvss $;yrvss %;yrvss ^;yrvss &;yrvss *;yrvss );yrvss _;yrvss =;yrvss +;yrvss ];yrvss };yrvss \\;yrvss |;yrvss .;yrvss ,;yrvss ;;yrvss :;yrvss ?;yrvss <;yrvss >;yrvss `;yrvss ~;yrvss /;yrvs'
  - xfail: non-contraction following special characters hyourselvess a missing grade 1 indicator

- - 'xl-yourselvess xl-([{''"yourselvess l/-yourselvess l$-yourselvess'
  - 'xl-yrvss xl-([{''"yrvss l/-yrvss l$-yrvss'
  - xfail: ...

- - 'xl(yourselvess xl[yourselvess xl{yourselvess xl''yourselvess xl"yourselvess xl-=([{''"yourselvess'
  - 'xl(yrvss xl[yrvss xl{yrvss xl''yrvss xl"yrvss xl-=([{''"yrvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselvess) yourselvess] yourselvess} yourselvess'' yourselvess" yourselvess- yourselvess, yourselvess. yourselvess; yourselvess: yourselvess? yourselvess!'
  - 'yrvss) yrvss] yrvss} yrvss'' yrvss" yrvss- yrvss, yrvss. yrvss; yrvss: yrvss? yrvss!'
  - xfail: ...

- - 'yourselvess@ yourselvess# yourselvess$ yourselvess% yourselvess^ yourselvess& yourselvess* yourselvess( yourselvess_ yourselvess= yourselvess+ yourselvess[ yourselvess{ yourselvess\\ yourselvess| yourselvess< yourselvess> yourselvess` yourselvess~ yourselvess/'
  - 'yrvss@ yrvss# yrvss$ yrvss% yrvss^ yrvss& yrvss* yrvss( yrvss_ yrvss= yrvss+ yrvss[ yrvss{ yrvss\\ yrvss| yrvss< yrvss> yrvss` yrvss~ yrvss/'
  - xfail: contraction followed by special characters is ignored

- - 'yrvss) yrvss] yrvss} yrvss'' yrvss" yrvss- yrvss, yrvss. yrvss; yrvss: yrvss? yrvss! yrvss@ yrvss# yrvss$ yrvss% yrvss^ yrvss& yrvss* yrvss( yrvss_ yrvss= yrvss+ yrvss[ yrvss{ yrvss\\ yrvss| yrvss< yrvss> yrvss` yrvss~ yrvss/'
  - ';yrvss) ;yrvss] ;yrvss} ;yrvss'' ;yrvss" ;yrvss- ;yrvss, ;yrvss. ;yrvss; ;yrvss: ;yrvss? ;yrvss! ;yrvss@ ;yrvss# ;yrvss$ ;yrvss% ;yrvss^ ;yrvss& ;yrvss* ;yrvss( ;yrvss_ ;yrvss= ;yrvss+ ;yrvss[ ;yrvss{ ;yrvss\\ ;yrvss| ;yrvss< ;yrvss> ;yrvss` ;yrvss~ ;yrvss/'
  - xfail: non-contraction following special characters hyourselvess a missing grade 1 indicator

- - 'yourselvess-xl yourselvess-([{''"xl yourselvess-/xl yourselvess-$xl'
  - 'yrvss-xl yrvss-([{''"xl yrvss-/xl yrvss-$xl'
  - xfail: ...

- - 'yourselvess(xl yourselvess[xl yourselvess{xl yourselvess''xl yourselvess"xl yourselvess=([{''"-xl yourselvess([{''"-xl yourselvess/-xl yourselvess$-xl'
  - 'yrvss(xl yrvss[xl yrvss{xl yrvss''xl yrvss"xl yrvss=([{''"-xl yrvss([{''"-xl yrvss/-xl yrvss$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored
